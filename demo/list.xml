<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet type="text/xsl" title="XSL Formatting" href="/rss.xsl" media="all" ?>
<rss version="2.0">
<channel>
    <title>享受技术带来的快乐！</title>
    <image>
    <link>http://blog.csdn.net</link>
    <url>http://static.blog.csdn.net/images/logo.gif</url>
    </image>
    <description>目标赋予我们生命的意义和目的。有了目标，我们才会把注意力集中在追求喜悦，而不是在避免痛苦上。</description>
	<link>http://blog.csdn.net/jdsjlzx</link>
	<language>zh-cn</language>
	<generator>http://blog.csdn.net</generator>
	<ttl>5</ttl>
	<copyright><![CDATA[Copyright &copy; jdsjlzx]]></copyright> 
	<pubDate>2016/6/3 11:48:30</pubDate>
    <item>
        <title><![CDATA[[转]Retrofit请求数据对错误以及网络异常的处理]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51566683</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51566683</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/6/2 14:03:06</pubDate>
        <description><![CDATA[
            <h2 id="异常处理">异常处理</h2>

<p>Retrofit本身会抛出HttpException，Gson解析会抛出解析异常，  <br>
此外我们还应该处理与服务器约定好的“异常”，即上一篇提到的返回数据中result字段值不会0的情况</p>

<p>这里要先解决一个问题，就是Gson构建的对象，通过注解定义key名，以变量的类型定value的类型，  <br>
但如果同样的key在不同情况下属于不同的数据类型，就会出问题。 </p>

<p>假如服务器返回格式是</p>



<pre class="prettyprint"><code class=" hljs json">{
    "<span class="hljs-attribute">result</span>":<span class="hljs-value"><span class="hljs-string">"结果代号，0表示成功"</span></span>,
    "<span class="hljs-attribute">msg</span>":<span class="hljs-value"><span class="hljs-string">"成功返回时是消息数据列表，失败时是异常消息文本"</span>
</span>}</code></pre>

<p>么msg究竟应该定义为String，还是一个List呢</p>

<p>我找到的解决方法就是：  <br>
注册一个自定义的转换类GsonResponseBodyConverter  <br>
先用一个只含result变量的Model类去解析获得result值  <br>
如果失败，则用msg是String的Model类再去解析msg值，然后组成一个ResultException  <br>
如果成功，则按照原本的Model类解析 </p>

<p>代码如下：</p>



<pre class="prettyprint"><code class=" hljs axapta"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GsonResponseBodyConverter</span>&lt;<span class="hljs-title">T</span>&gt; <span class="hljs-inheritance"><span class="hljs-keyword">implements</span></span> <span class="hljs-title">Converter</span>&lt;<span class="hljs-title">ResponseBody</span>, <span class="hljs-title">T</span>&gt; {</span>
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Gson gson;
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Type type;

    GsonResponseBodyConverter(Gson gson, Type type) {
        <span class="hljs-keyword">this</span>.gson = gson;
        <span class="hljs-keyword">this</span>.type = type;
    }

    @Override
    <span class="hljs-keyword">public</span> T convert(ResponseBody value) throws IOException{
        String response = value.string();
        <span class="hljs-keyword">try</span> {
            Log.d(<span class="hljs-string">"Network"</span>, <span class="hljs-string">"response&gt;&gt;"</span> + response);
            <span class="hljs-comment">//ResultResponse 只解析result字段</span>
            ResultResponse resultResponse = gson.fromJson(response, ResultResponse.class);
            <span class="hljs-keyword">if</span> (resultResponse.getResult() == <span class="hljs-number">0</span>){
                <span class="hljs-comment">//result==0表示成功返回，继续用本来的Model类解析</span>
                <span class="hljs-keyword">return</span> gson.fromJson(response, type);
            } <span class="hljs-keyword">else</span> {
                <span class="hljs-comment">//ErrResponse 将msg解析为异常消息文本</span>
                ErrResponse errResponse = gson.fromJson(response, ErrResponse.class);
                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ResultException(resultResponse.getResult(), errResponse.getMsg());
            }
        } <span class="hljs-keyword">finally</span> {
        }
    }
}</code></pre>

<p>这个类用于捕获服务器约定的错误类型</p>

<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ResultException</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">RuntimeException</span> {</span>

    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> errCode = <span class="hljs-number">0</span>;

    <span class="hljs-keyword">public</span> <span class="hljs-title">ResultException</span>(<span class="hljs-keyword">int</span> errCode, String msg) {
        <span class="hljs-keyword">super</span>(msg);
        <span class="hljs-keyword">this</span>.errCode = errCode;
    }

    <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getErrCode</span>() {
        <span class="hljs-keyword">return</span> errCode;
    }
}</code></pre>

<p>拷贝原生的ResponseConverterFactory，将GsonResponseBodyConverter替换为前面我们自定义的</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ResponseConverterFactory</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Converter</span>.<span class="hljs-title">Factory</span> {</span>

    ...
    ...

    <span class="hljs-annotation">@Override</span>
    <span class="hljs-keyword">public</span> Converter&lt;ResponseBody, ?&gt; <span class="hljs-title">fromResponseBody</span>(Type type, Annotation[] annotations) {
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> GsonResponseBodyConverter&lt;&gt;(gson, type);
    }

    <span class="hljs-annotation">@Override</span>
    <span class="hljs-keyword">public</span> Converter&lt;?, RequestBody&gt; <span class="hljs-title">toRequestBody</span>(Type type, Annotation[] annotations) {
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> GsonRequestBodyConverter&lt;&gt;(gson, type);
    }

}</code></pre>

<p>然后在构建Retrofit时注册这个工厂类</p>



<pre class="prettyprint"><code class=" hljs avrasm">Retrofit = new Retrofit<span class="hljs-preprocessor">.Builder</span>()
                <span class="hljs-preprocessor">.baseUrl</span>(API_SERVER + <span class="hljs-string">"/"</span>)
                //注册自定义的工厂类
                <span class="hljs-preprocessor">.addConverterFactory</span>(ResponseConverterFactory<span class="hljs-preprocessor">.create</span>())
                <span class="hljs-preprocessor">.addCallAdapterFactory</span>(RxJavaCallAdapterFactory<span class="hljs-preprocessor">.create</span>())
                <span class="hljs-preprocessor">.client</span>(mOkHttpClient)
                <span class="hljs-preprocessor">.build</span>()<span class="hljs-comment">;</span></code></pre>

<p>这样就完成了Retrofit也可以抛出服务器约定异常</p>

<p>然后就是具体的处理：</p>



<pre class="prettyprint"><code class=" hljs scala">public <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AbsAPICallback</span>&lt;<span class="hljs-title">T</span>&gt; <span class="hljs-keyword">extends</span> <span class="hljs-title">Subscriber</span>&lt;<span class="hljs-title">T</span>&gt; {</span>

    <span class="hljs-comment">//对应HTTP的状态码</span>
    <span class="hljs-keyword">private</span> static <span class="hljs-keyword">final</span> int UNAUTHORIZED = <span class="hljs-number">401</span>;
    <span class="hljs-keyword">private</span> static <span class="hljs-keyword">final</span> int FORBIDDEN = <span class="hljs-number">403</span>;
    <span class="hljs-keyword">private</span> static <span class="hljs-keyword">final</span> int NOT_FOUND = <span class="hljs-number">404</span>;
    <span class="hljs-keyword">private</span> static <span class="hljs-keyword">final</span> int REQUEST_TIMEOUT = <span class="hljs-number">408</span>;
    <span class="hljs-keyword">private</span> static <span class="hljs-keyword">final</span> int INTERNAL_SERVER_ERROR = <span class="hljs-number">500</span>;
    <span class="hljs-keyword">private</span> static <span class="hljs-keyword">final</span> int BAD_GATEWAY = <span class="hljs-number">502</span>;
    <span class="hljs-keyword">private</span> static <span class="hljs-keyword">final</span> int SERVICE_UNAVAILABLE = <span class="hljs-number">503</span>;
    <span class="hljs-keyword">private</span> static <span class="hljs-keyword">final</span> int GATEWAY_TIMEOUT = <span class="hljs-number">504</span>;
    <span class="hljs-comment">//出错提示</span>
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String networkMsg;
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String parseMsg;
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String unknownMsg;

    <span class="hljs-keyword">protected</span> AbsAPICallback(String networkMsg, String parseMsg, String unknownMsg) {
        <span class="hljs-keyword">this</span>.networkMsg = networkMsg;
        <span class="hljs-keyword">this</span>.parseMsg = parseMsg;
        <span class="hljs-keyword">this</span>.unknownMsg = unknownMsg;
    }


    <span class="hljs-annotation">@Override</span>
    public void onError(Throwable e) {
        Throwable throwable = e;
        <span class="hljs-comment">//获取最根源的异常</span>
        <span class="hljs-keyword">while</span>(throwable.getCause() != <span class="hljs-keyword">null</span>){
            e = throwable;
            throwable = throwable.getCause();
        }

        ApiException ex;
        <span class="hljs-keyword">if</span> (e instanceof HttpException){             <span class="hljs-comment">//HTTP错误</span>
            HttpException httpException = (HttpException) e;
            ex = <span class="hljs-keyword">new</span> ApiException(e, httpException.code());
            switch(httpException.code()){
                <span class="hljs-keyword">case</span> UNAUTHORIZED:
                <span class="hljs-keyword">case</span> FORBIDDEN:
                    onPermissionError(ex);          <span class="hljs-comment">//权限错误，需要实现</span>
                    <span class="hljs-keyword">break</span>;
                <span class="hljs-keyword">case</span> NOT_FOUND:
                <span class="hljs-keyword">case</span> REQUEST_TIMEOUT:
                <span class="hljs-keyword">case</span> GATEWAY_TIMEOUT:
                <span class="hljs-keyword">case</span> INTERNAL_SERVER_ERROR:
                <span class="hljs-keyword">case</span> BAD_GATEWAY:
                <span class="hljs-keyword">case</span> SERVICE_UNAVAILABLE:
                <span class="hljs-keyword">default</span>:
                    ex.setDisplayMessage(networkMsg);  <span class="hljs-comment">//均视为网络错误</span>
                    onError(ex);
                    <span class="hljs-keyword">break</span>;
            }
        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e instanceof ResultException){    <span class="hljs-comment">//服务器返回的错误</span>
            ResultException resultException = (ResultException) e;
            ex = <span class="hljs-keyword">new</span> ApiException(resultException, resultException.getErrCode());               
            onResultError(ex);  
        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (e instanceof JsonParseException
                || e instanceof JSONException
                || e instanceof ParseException){
            ex = <span class="hljs-keyword">new</span> ApiException(e, ApiException.PARSE_ERROR);
            ex.setDisplayMessage(parseMsg);            <span class="hljs-comment">//均视为解析错误</span>
            onError(ex);
        } <span class="hljs-keyword">else</span> {
            ex = <span class="hljs-keyword">new</span> ApiException(e, ApiException.UNKNOWN);
            ex.setDisplayMessage(unknownMsg);          <span class="hljs-comment">//未知错误</span>
            onError(ex);
        }
    }


    <span class="hljs-javadoc">/**
     * 错误回调
     */</span>
    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">abstract</span> void onError(ApiException ex);

    <span class="hljs-javadoc">/**
     * 权限错误，需要实现重新登录操作
     */</span>
    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">abstract</span> void onPermissionError(ApiException ex);

    <span class="hljs-javadoc">/**
     * 服务器返回的错误
     */</span>
    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">abstract</span> void onResultError(ApiException ex);

    <span class="hljs-annotation">@Override</span>
    public void onCompleted() {

    }

}</code></pre>

<p>自定义ApiException，携带了异常代码和信息，以及根源Throwable，足够调用者需要</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ApiException</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Exception</span> {</span>

    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> code;
    <span class="hljs-keyword">private</span> String displayMessage;

    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> UNKNOWN = <span class="hljs-number">1000</span>;
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> PARSE_ERROR = <span class="hljs-number">1001</span>;

    <span class="hljs-keyword">public</span> <span class="hljs-title">ApiException</span>(Throwable throwable, <span class="hljs-keyword">int</span> code) {
        <span class="hljs-keyword">super</span>(throwable);
        <span class="hljs-keyword">this</span>.code = code;
    }

    <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getCode</span>() {
        <span class="hljs-keyword">return</span> code;
    }
    <span class="hljs-keyword">public</span> String <span class="hljs-title">getDisplayMessage</span>() {
        <span class="hljs-keyword">return</span> displayMessage;
    }
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setDisplayMessage</span>(String msg) {
        <span class="hljs-keyword">this</span>.displayMessage = msg + <span class="hljs-string">"(code:"</span> + code + <span class="hljs-string">")"</span>;
    }
}</code></pre>

<p>转自：<a href="http://blog.csdn.net/efan006/article/details/50544204">http://blog.csdn.net/efan006/article/details/50544204</a></p>
            <div>
                作者：jdsjlzx 发表于2016/6/2 14:03:06 <a href="http://blog.csdn.net/jdsjlzx/article/details/51566683">原文链接</a>
            </div>
            <div>
            阅读：1098 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51566683#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[转]Retrofit Gson解析空字符串的问题]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51566536</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51566536</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/6/2 13:40:00</pubDate>
        <description><![CDATA[
            <p>在实际开发项目中，服务器经常会用空字符串 “” 作为返回结果表示空值 ，但这在Gson当中就会遇到问题，如果这项数据的类型不是字符串，Gson解析就会报错  <br>
我们希望程序可以自动将空字符串解析为对应类型的空值，比如整型就解析为0，List型就解析为一个Empty List</p>

<p>这个问题可以说是我用Retrofit+Gson以来最大的一个坑，以至于我在研究时差不多都要把源码看完了</p>

<blockquote>
  <p>提一件离奇的事是，Gson在用整型解析空字符串时，报的居然是”Inavalid double”的错误  <br>
  经过研究源码后发现，Gson会优先尝试解析为整型，解析失败并不会报错误，  <br>
  继续尝试解析为double型，再失败才会报错，所以得到了”Inavalid double”</p>
</blockquote>

<p><strong>解决方案：</strong>  <br>
针对整型的解析，先写一个解析适配器，实现JsonSerializer, JsonDeserializer  <br>
重写解析方法，先尝试用String类型解析，如果等于空字符串”“，则返回0值  <br>
否则再尝试用整型解析，并且catch数字格式异常转成Json解析异常抛出</p>

<pre class="prettyprint"><code class=" hljs php"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">IntegerDefault0Adapter</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">JsonSerializer</span>&lt;<span class="hljs-title">Integer</span>&gt;, <span class="hljs-title">JsonDeserializer</span>&lt;<span class="hljs-title">Integer</span>&gt; {</span>
    @Override
    <span class="hljs-keyword">public</span> Integer deserialize(JsonElement json, Type typeOfT, 
                            JsonDeserializationContext context) 
                             throws JsonParseException {
        <span class="hljs-keyword">try</span> {
            <span class="hljs-keyword">if</span> (json.getAsString().equals(<span class="hljs-string">""</span>)){
                <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;
            }
        } <span class="hljs-keyword">catch</span> (<span class="hljs-keyword">Exception</span> ignore){
        }
        <span class="hljs-keyword">try</span> {
            <span class="hljs-keyword">return</span> json.getAsInt();
        } <span class="hljs-keyword">catch</span> (NumberFormatException e) {
            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> JsonSyntaxException(e);
        }
    }

    @Override
    <span class="hljs-keyword">public</span> JsonElement serialize(Integer src, Type typeOfSrc, JsonSerializationContext context) {
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> JsonPrimitive(src);
    }
}</code></pre>

<p>然后在GsonBuilder里注册适配器到类型Integer与类型int</p>



<pre class="prettyprint"><code class=" hljs cs"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Gson <span class="hljs-title">buildGson</span>() {
       <span class="hljs-keyword">if</span> (gson == <span class="hljs-keyword">null</span>) {
           gson = <span class="hljs-keyword">new</span> GsonBuilder()
                   .setDateFormat(<span class="hljs-string">"yyyy-MM-dd HH:mm:ss"</span>)
                   .registerTypeAdapter(Integer.class, <span class="hljs-keyword">new</span> IntegerDefault0Adapter())
                   .registerTypeAdapter(<span class="hljs-keyword">int</span>.class, <span class="hljs-keyword">new</span> IntegerDefault0Adapter())
                   .create();
       }
       <span class="hljs-keyword">return</span> gson;
   }</code></pre>

<p>再在构建Retrofit时用这个自定义的Gson替换掉原生的</p>



<pre class="prettyprint"><code class=" hljs avrasm">Retrofit = new Retrofit<span class="hljs-preprocessor">.Builder</span>()
                <span class="hljs-preprocessor">.baseUrl</span>(API_SERVER + <span class="hljs-string">"/"</span>)
                //传入buildGson生成的自定义Gson
                <span class="hljs-preprocessor">.addConverterFactory</span>(ResponseConverterFactory<span class="hljs-preprocessor">.create</span>(buildGson()))
                <span class="hljs-preprocessor">.addCallAdapterFactory</span>(RxJavaCallAdapterFactory<span class="hljs-preprocessor">.create</span>())
                <span class="hljs-preprocessor">.client</span>(mOkHttpClient)
                <span class="hljs-preprocessor">.build</span>()<span class="hljs-comment">;</span></code></pre>

<p>这样Gson在遇到整型解析时可以将空字符串解析为0了</p>

<p>然后我打算用同样的方式解决List的解析问题，但没想到情况没有这么简单。 </p>

<p>因为List并不像整形一样是一个基本类型，List本身在数据解析的时候是要带泛型的  <br>
我不可能在构建的时候就定好集合里的数据类型。 </p>

<p>而如果不定泛型里的数据类型，重写适配器就得根据运行时遇到的类型分别进行操作，这无异于把Gson的工作重新做一遍。 </p>

<p>经过研究源码后发现Gson对待List也并非当做一个类型去解析的  <br>
而是在初始化时带有一个CollectionTypeAdapterFactory，在遇到JsonArray类型的数据就会调用集合类型的解析器，然后再适配集合里的对应数据类型。总之一句话就是，挺复杂，并且不怎么能扩展。</p>

<p>经过研究后我找到的解决方案是：</p>

<p>通过注解方式@JsonAdapter可以指定对应的适配器，优先级是高于默认的CollectionTypeAdapterFactory，和通过GsonBuilder传入的适配器的。  <br>
然后还是拷贝CollectionTypeAdapterFactory出来，改一份ListTypeAdapterFactory出来</p>

<pre class="prettyprint"><code class=" hljs cs"><span class="hljs-comment">/**
 * 列表解析类适配器的工厂类
 * 必须通过注解@JsonAdapter方式才能优先于默认的CollectionTypeAdapterFactory
 */</span>
<span class="hljs-keyword">public</span> final <span class="hljs-keyword">class</span> ListTypeAdapterFactory implements TypeAdapterFactory {

    <span class="hljs-keyword">public</span> &lt;T&gt; TypeAdapter&lt;T&gt; <span class="hljs-title">create</span>(Gson gson, TypeToken&lt;T&gt; typeToken) {
        Type type = typeToken.getType();

        Class&lt;? super T&gt; rawType = typeToken.getRawType();
        <span class="hljs-keyword">if</span> (!List.class.isAssignableFrom(rawType)) {
            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;
        }

        Type elementType = $Gson$Types.getCollectionElementType(type, rawType);
        TypeAdapter&lt;?&gt; elementTypeAdapter = gson.getAdapter(TypeToken.<span class="hljs-keyword">get</span>(elementType));

        @SuppressWarnings({<span class="hljs-string">"unchecked"</span>, <span class="hljs-string">"rawtypes"</span>}) <span class="hljs-comment">// create() doesn't define a type parameter</span>
        TypeAdapter&lt;T&gt; result = <span class="hljs-keyword">new</span> Adapter(gson, elementType, elementTypeAdapter);
        <span class="hljs-keyword">return</span> result;
    }

    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> final <span class="hljs-keyword">class</span> Adapter&lt;E&gt; extends TypeAdapter&lt;List&lt;E&gt;&gt; {
        <span class="hljs-keyword">private</span> final TypeAdapter&lt;E&gt; elementTypeAdapter;

        <span class="hljs-keyword">public</span> <span class="hljs-title">Adapter</span>(Gson context, Type elementType,
                       TypeAdapter&lt;E&gt; elementTypeAdapter) {
            <span class="hljs-keyword">this</span>.elementTypeAdapter = <span class="hljs-keyword">new</span> TypeAdapterRuntimeTypeWrapper&lt;E&gt;(
                                        context, elementTypeAdapter, elementType);
        }

        <span class="hljs-comment">//关键部分是这里，重写解析方法</span>
        <span class="hljs-keyword">public</span> List&lt;E&gt; <span class="hljs-title">read</span>(JsonReader <span class="hljs-keyword">in</span>) throws IOException {
            <span class="hljs-comment">//null值返回null</span>
            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">in</span>.peek() == JsonToken.NULL) {
                <span class="hljs-keyword">in</span>.nextNull();
                <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;
            }
            <span class="hljs-comment">//新建一个空的列表</span>
            List&lt;E&gt; list = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();
            <span class="hljs-keyword">try</span> {
                <span class="hljs-keyword">in</span>.beginArray();
                <span class="hljs-keyword">while</span> (<span class="hljs-keyword">in</span>.hasNext()) {
                    E instance = elementTypeAdapter.read(<span class="hljs-keyword">in</span>);
                    list.add(instance);
                }
                <span class="hljs-keyword">in</span>.endArray();
                <span class="hljs-comment">//正常解析成为列表</span>
            } <span class="hljs-keyword">catch</span> (IllegalStateException e){ <span class="hljs-comment">//如果是空字符串，会有BEGIN_ARRAY报错</span>
                <span class="hljs-comment">//此时尝试解析成字符串，如果不是空字符串，则依旧抛出异常</span>
                <span class="hljs-comment">//如果是空字符串，则不抛出异常，使最终返回一个空的列表</span>
                <span class="hljs-keyword">if</span> (!<span class="hljs-string">""</span>.equals(<span class="hljs-keyword">in</span>.nextString())){
                    <span class="hljs-keyword">throw</span> e;
                }
            }

            <span class="hljs-keyword">return</span> list;
        }

        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">write</span>(JsonWriter <span class="hljs-keyword">out</span>, List&lt;E&gt; list) throws IOException {
            <span class="hljs-keyword">if</span> (list == <span class="hljs-keyword">null</span>) {
                <span class="hljs-keyword">out</span>.nullValue();
                <span class="hljs-keyword">return</span>;
            }

            <span class="hljs-keyword">out</span>.beginArray();
            <span class="hljs-keyword">for</span> (E element : list) {
                elementTypeAdapter.write(<span class="hljs-keyword">out</span>, element);
            }
            <span class="hljs-keyword">out</span>.endArray();
        }
    }
}</code></pre>

<p>最后就是Model类里面注解指定</p>



<pre class="prettyprint"><code class=" hljs cs"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> UserListModel{
    @JsonAdapter(ListTypeAdapterFactory.class)
    List&lt;UserProfileModel&gt; users;
}</code></pre>

<p>这样Gson就能将空字符串解析成为空列表了。</p>

<p>转自：<a href="http://blog.csdn.net/efan006/article/details/50544509">http://blog.csdn.net/efan006/article/details/50544509</a></p>
            <div>
                作者：jdsjlzx 发表于2016/6/2 13:40:00 <a href="http://blog.csdn.net/jdsjlzx/article/details/51566536">原文链接</a>
            </div>
            <div>
            阅读：879 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51566536#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]Retrofit 自定义Cookies]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51565256</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51565256</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/6/2 11:40:45</pubDate>
        <description><![CDATA[
            <p>自定义Cookies拦截器：</p>

<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CookiesInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Interceptor</span>{</span>
    <span class="hljs-keyword">private</span> Context context;

    <span class="hljs-keyword">public</span> <span class="hljs-title">CookiesInterceptor</span>(Context context) {
        <span class="hljs-keyword">this</span>.context = context;
    }
    <span class="hljs-comment">//重写拦截方法，处理自定义的Cookies信息</span>
    <span class="hljs-annotation">@Override</span>
    <span class="hljs-keyword">public</span> Response <span class="hljs-title">intercept</span>(Chain chain) <span class="hljs-keyword">throws</span> IOException {
        Request request = chain.request();
        Request compressedRequest = request.newBuilder()
                .header(<span class="hljs-string">"cookie"</span>, CookieUtil.getCookies(context))
                .build();
        Response response = chain.proceed(compressedRequest);
        CookieUtil.saveCookies(response.headers(), context);
        <span class="hljs-keyword">return</span> response;
    }
}</code></pre>

<p>CookieUtil则是一些自定义解析和生成方法以及SharedPreferences的存取，代码略 <br>
使用：</p>



<pre class="prettyprint"><code class=" hljs oxygene"><span class="hljs-comment">//设置拦截器，以用于自定义Cookies的设置</span>
                mOkHttpClient.networkInterceptors()
                            .<span class="hljs-keyword">add</span>(<span class="hljs-keyword">new</span> CookiesInterceptor(context));</code></pre>

<p>详细设置：</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BaseApi</span> {</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String API_SERVER = <span class="hljs-string">"服务器地址"</span>
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> OkHttpClient mOkHttpClient = <span class="hljs-keyword">new</span> OkHttpClient();
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Retrofit mRetrofit;

    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">static</span> Retrofit <span class="hljs-title">getRetrofit</span>() {
            <span class="hljs-keyword">if</span> (Retrofit == <span class="hljs-keyword">null</span>) {
                Context context = Application.getInstance().getApplicationContext();
                <span class="hljs-comment">//设定30秒超时</span>
                mOkHttpClient.setConnectTimeout(<span class="hljs-number">30</span>, TimeUnit.SECONDS);
                <span class="hljs-comment">//设置拦截器，以用于自定义Cookies的设置</span>
                mOkHttpClient.networkInterceptors()
                            .add(<span class="hljs-keyword">new</span> CookiesInterceptor(context));
                <span class="hljs-comment">//设置缓存目录</span>
                File cacheDirectory = <span class="hljs-keyword">new</span> File(context.getCacheDir()
                                        .getAbsolutePath(), <span class="hljs-string">"HttpCache"</span>);
                Cache cache = <span class="hljs-keyword">new</span> Cache(cacheDirectory, <span class="hljs-number">20</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>);
                mOkHttpClient.setCache(cache);
                <span class="hljs-comment">//构建Retrofit</span>
                mRetrofit = <span class="hljs-keyword">new</span> Retrofit.Builder()
                        <span class="hljs-comment">//配置服务器路径</span>
                        .baseUrl(API_SERVER + <span class="hljs-string">"/"</span>)  
                        <span class="hljs-comment">//设置日期解析格式，这样可以直接解析Date类型</span>
                        .setDateFormat(<span class="hljs-string">"yyyy-MM-dd HH:mm:ss"</span>)  
                        <span class="hljs-comment">//配置转化库，默认是Gson</span>
                        .addConverterFactory(ResponseConverterFactory.create())
                        <span class="hljs-comment">//配置回调库，采用RxJava</span>
                        .addCallAdapterFactory(RxJavaCallAdapterFactory.create())
                        <span class="hljs-comment">//设置OKHttpClient为网络客户端</span>
                        .client(mOkHttpClient)
                        .build();
            }
            <span class="hljs-keyword">return</span> mRetrofit;
        }
}</code></pre>
            <div>
                作者：jdsjlzx 发表于2016/6/2 11:40:45 <a href="http://blog.csdn.net/jdsjlzx/article/details/51565256">原文链接</a>
            </div>
            <div>
            阅读：832 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51565256#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]Android ViewPager多页面滑动切换以及底部滑动导航]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51560133</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51560133</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/6/1 23:48:49</pubDate>
        <description><![CDATA[
            <p>APP基本框架：</p>

<p>使用Retrofit+RxJava！ <br>
底部滑动导航！ <br>
RecyclerView上拉刷新，滑动底部自动加载更多。</p>

<p>下载：<a href="https://github.com/jdsjlzx/Community">https://github.com/jdsjlzx/Community</a></p>

<p><img src="https://github.com/jdsjlzx/Community/raw/master/pic/app.gif?raw=true" alt="这里写图片描述" title=""></p>
            <div>
                作者：jdsjlzx 发表于2016/6/1 23:48:49 <a href="http://blog.csdn.net/jdsjlzx/article/details/51560133">原文链接</a>
            </div>
            <div>
            阅读：451 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51560133#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[转]Retrofit实现App更新]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51550459</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51550459</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/6/1 0:07:26</pubDate>
        <description><![CDATA[
            <p>Github代码：<a href="https://github.com/SpikeKing/wcl-update-request-demo">https://github.com/SpikeKing/wcl-update-request-demo</a></p>

<p><img src="http://img.blog.csdn.net/20160107135752597" alt="这里写图片描述" title=""></p>



<h2 id="逻辑">逻辑</h2>

<p>访问服务器, 根据是否包含新版本, 判断是否需要更新.  <br>
下载Apk, 下载完成后, 自动安装, 高版本会覆盖低版本.</p>

<p>逻辑:</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> {</span>

    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String APP_NAME = <span class="hljs-string">"Ped_android"</span>;
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String VERSION = <span class="hljs-string">"1.0.0"</span>;
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String INFO_NAME = <span class="hljs-string">"计步器"</span>;
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String STORE_APK = <span class="hljs-string">"chunyu_apk"</span>;

    <span class="hljs-annotation">@Bind</span>(R.id.main_b_install_apk) Button mBInstallApk;

    <span class="hljs-keyword">private</span> UpdateAppUtils.UpdateCallback mUpdateCallback; <span class="hljs-comment">// 更新回调</span>

    <span class="hljs-annotation">@Override</span>
    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span>(Bundle savedInstanceState) {
        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ButterKnife.bind(<span class="hljs-keyword">this</span>);

        mUpdateCallback = <span class="hljs-keyword">new</span> UpdateAppUtils.UpdateCallback() {
            <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onSuccess</span>(UpdateInfo updateInfo) {
                Toast.makeText(MainActivity.<span class="hljs-keyword">this</span>, <span class="hljs-string">"有更新"</span>, Toast.LENGTH_SHORT).show();
                UpdateAppUtils.downloadApk(MainActivity.<span class="hljs-keyword">this</span>, updateInfo, INFO_NAME, STORE_APK);
            }

            <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onError</span>() {
                Toast.makeText(MainActivity.<span class="hljs-keyword">this</span>, <span class="hljs-string">"无更新"</span>, Toast.LENGTH_SHORT).show();
            }
        };

        mBInstallApk.setOnClickListener(<span class="hljs-keyword">new</span> View.OnClickListener() {
            <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span>(View v) {
                UpdateAppUtils.checkUpdate(APP_NAME, VERSION, mUpdateCallback);
            }
        });
    }
}</code></pre>

<p>UpdateAppUtils是核心下载类. 输入App的代号, 版本号, 异步回调, 发送到服务器, 判断是否需要更新. 如果存在新版本, 则下载Apk, 并自动安装更新.</p>



<h2 id="网络请求">网络请求</h2>

<p>更新请求, 参数是App代号和当前版本号.</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-javadoc">/**
 * 更新服务
 * &lt;p&gt;
 * Created by wangchenlong on 16/1/4.
 */</span>
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">UpdateService</span> {</span>
    String ENDPOINT = <span class="hljs-string">"http://www.chunyuyisheng.com"</span>;

    <span class="hljs-comment">// 获取App版本信息</span>
    <span class="hljs-annotation">@GET</span>(<span class="hljs-string">"/cmsapi/app/update"</span>)
    Observable&lt;UpdateInfo&gt; getUpdateInfo(
            <span class="hljs-annotation">@Query</span>(<span class="hljs-string">"appName"</span>) String appName,
            <span class="hljs-annotation">@Query</span>(<span class="hljs-string">"version"</span>) String version);
}</code></pre>

<p>创建服务的工厂类.</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-javadoc">/**
 * 创建Retrofit服务
 * &lt;p&gt;
 * Created by wangchenlong on 16/1/4.
 */</span>
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ServiceFactory</span> {</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; T <span class="hljs-title">createServiceFrom</span>(<span class="hljs-keyword">final</span> Class&lt;T&gt; serviceClass, String endpoint) {
        Retrofit adapter = <span class="hljs-keyword">new</span> Retrofit.Builder()
                .baseUrl(endpoint)
                .addCallAdapterFactory(RxJavaCallAdapterFactory.create()) <span class="hljs-comment">// 添加Rx适配器</span>
                .addConverterFactory(GsonConverterFactory.create()) <span class="hljs-comment">// 添加Gson转换器</span>
                .build();
        <span class="hljs-keyword">return</span> adapter.create(serviceClass);
    }
}</code></pre>

<p>更新信息的实体类.</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-javadoc">/**
 * 更新信息
 * &lt;p&gt;
 * Created by wangchenlong on 16/1/4.
 */</span>
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UpdateInfo</span> {</span>
    <span class="hljs-keyword">public</span> Data data; <span class="hljs-comment">// 信息</span>
    <span class="hljs-keyword">public</span> Integer error_code; <span class="hljs-comment">// 错误代码</span>
    <span class="hljs-keyword">public</span> String error_msg; <span class="hljs-comment">// 错误信息</span>

    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Data</span> {</span>
        <span class="hljs-keyword">public</span> String curVersion; <span class="hljs-comment">// 当前版本</span>
        <span class="hljs-keyword">public</span> String appURL; <span class="hljs-comment">// 下载地址</span>
        <span class="hljs-keyword">public</span> String description; <span class="hljs-comment">// 描述</span>
        <span class="hljs-keyword">public</span> String minVersion; <span class="hljs-comment">// 最低版本</span>
        <span class="hljs-keyword">public</span> String appName; <span class="hljs-comment">// 应用名称</span>
    }

    <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">public</span> String <span class="hljs-title">toString</span>() {
        <span class="hljs-keyword">return</span> <span class="hljs-string">"当前版本: "</span> + data.curVersion + <span class="hljs-string">", 下载地址: "</span> + data.appURL + <span class="hljs-string">", 描述信息: "</span> + data.description
                + <span class="hljs-string">", 最低版本: "</span> + data.minVersion + <span class="hljs-string">", 应用代称: "</span> + data.appName
                + <span class="hljs-string">", 错误代码: "</span> + error_code + <span class="hljs-string">", 错误信息: "</span> + error_msg;
    }
}</code></pre>



<h2 id="请求和下载">请求和下载</h2>

<p>更新库的主类, 包含检查更新(checkUpdate)和下载Apk(downloadApk)两个重要方法.</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-javadoc">/**
 * 更新管理器
 * &lt;p&gt;
 * Created by wangchenlong on 16/1/6.
 */</span>
<span class="hljs-annotation">@SuppressWarnings</span>(<span class="hljs-string">"unused"</span>)
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UpdateAppUtils</span> {</span>

    <span class="hljs-annotation">@SuppressWarnings</span>(<span class="hljs-string">"unused"</span>)
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String TAG = <span class="hljs-string">"DEBUG-WCL: "</span> + UpdateAppUtils.class.getSimpleName();

    <span class="hljs-javadoc">/**
     * 检查更新
     */</span>
    <span class="hljs-annotation">@SuppressWarnings</span>(<span class="hljs-string">"unused"</span>)
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">checkUpdate</span>(String appCode, String curVersion, UpdateCallback updateCallback) {
        UpdateService updateService =
                ServiceFactory.createServiceFrom(UpdateService.class, UpdateService.ENDPOINT);

        updateService.getUpdateInfo(appCode, curVersion)
                .subscribeOn(Schedulers.newThread())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(updateInfo -&gt; onNext(updateInfo, updateCallback),
                        throwable -&gt; onError(throwable, updateCallback));
    }

    <span class="hljs-comment">// 显示信息</span>
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onNext</span>(UpdateInfo updateInfo, UpdateCallback updateCallback) {
        Log.e(TAG, <span class="hljs-string">"返回数据: "</span> + updateInfo.toString());
        <span class="hljs-keyword">if</span> (updateInfo.error_code != <span class="hljs-number">0</span> || updateInfo.data == <span class="hljs-keyword">null</span> ||
                updateInfo.data.appURL == <span class="hljs-keyword">null</span>) {
            updateCallback.onError(); <span class="hljs-comment">// 失败</span>
        } <span class="hljs-keyword">else</span> {
            updateCallback.onSuccess(updateInfo);
        }
    }

    <span class="hljs-comment">// 错误信息</span>
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onError</span>(Throwable throwable, UpdateCallback updateCallback) {
        updateCallback.onError();
    }

    <span class="hljs-javadoc">/**
     * 下载Apk, 并设置Apk地址,
     * 默认位置: /storage/sdcard0/Download
     *
     *<span class="hljs-javadoctag"> @param</span> context    上下文
     *<span class="hljs-javadoctag"> @param</span> updateInfo 更新信息
     *<span class="hljs-javadoctag"> @param</span> infoName   通知名称
     *<span class="hljs-javadoctag"> @param</span> storeApk   存储的Apk
     */</span>
    <span class="hljs-annotation">@SuppressWarnings</span>(<span class="hljs-string">"unused"</span>)
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">downloadApk</span>(
            Context context, UpdateInfo updateInfo,
            String infoName, String storeApk
    ) {
        <span class="hljs-keyword">if</span> (!isDownloadManagerAvailable()) {
            <span class="hljs-keyword">return</span>;
        }

        String description = updateInfo.data.description;
        String appUrl = updateInfo.data.appURL;

        <span class="hljs-keyword">if</span> (appUrl == <span class="hljs-keyword">null</span> || appUrl.isEmpty()) {
            Log.e(TAG, <span class="hljs-string">"请填写\"App下载地址\""</span>);
            <span class="hljs-keyword">return</span>;
        }

        appUrl = appUrl.trim(); <span class="hljs-comment">// 去掉首尾空格</span>

        <span class="hljs-keyword">if</span> (!appUrl.startsWith(<span class="hljs-string">"http"</span>)) {
            appUrl = <span class="hljs-string">"http://"</span> + appUrl; <span class="hljs-comment">// 添加Http信息</span>
        }

        Log.e(TAG, <span class="hljs-string">"appUrl: "</span> + appUrl);

        DownloadManager.Request request;
        <span class="hljs-keyword">try</span> {
            request = <span class="hljs-keyword">new</span> DownloadManager.Request(Uri.parse(appUrl));
        } <span class="hljs-keyword">catch</span> (Exception e) {
            e.printStackTrace();
            <span class="hljs-keyword">return</span>;
        }
        request.setTitle(infoName);
        request.setDescription(description);
        <span class="hljs-keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {
            request.allowScanningByMediaScanner();
            request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED);
        }
        request.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, storeApk);

        Context appContext = context.getApplicationContext();
        DownloadManager manager = (DownloadManager)
                appContext.getSystemService(Context.DOWNLOAD_SERVICE);

        <span class="hljs-comment">// 存储下载Key</span>
        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(appContext);
        sp.edit().putLong(PrefsConsts.DOWNLOAD_APK_ID_PREFS, manager.enqueue(request)).apply();
    }

    <span class="hljs-comment">// 最小版本号大于9</span>
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isDownloadManagerAvailable</span>() {
        <span class="hljs-keyword">return</span> Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.GINGERBREAD;
    }

    <span class="hljs-comment">// 错误回调</span>
    <span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">UpdateCallback</span> {</span>
        <span class="hljs-keyword">void</span> onSuccess(UpdateInfo updateInfo);

        <span class="hljs-keyword">void</span> onError();
    }
}</code></pre>

<p>检查更新: 创建服务, 在新线程中发送请求, 在主线程中接收数据, 判断成功和失败.</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-javadoc">/**
     * 检查更新
     */</span>
    <span class="hljs-annotation">@SuppressWarnings</span>(<span class="hljs-string">"unused"</span>)
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">checkUpdate</span>(String appCode, String curVersion, UpdateCallback updateCallback) {
        UpdateService updateService =
                ServiceFactory.createServiceFrom(UpdateService.class, UpdateService.ENDPOINT);

        updateService.getUpdateInfo(appCode, curVersion)
                .subscribeOn(Schedulers.newThread())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(updateInfo -&gt; onNext(updateInfo, updateCallback),
                        throwable -&gt; onError(throwable, updateCallback));
    }</code></pre>

<p>下载Apk: 转换和解析Url, 设置通知信息和存储位置, 存储下载Id, 自动安装更新.</p>



<pre class="prettyprint"><code class=" hljs avrasm"><span class="hljs-comment">/**
     * 下载Apk, 并设置Apk地址,
     * 默认位置: /storage/sdcard0/Download
     *
     * @param context    上下文
     * @param updateInfo 更新信息
     * @param infoName   通知名称
     * @param storeApk   存储的Apk
     */</span>
    @SuppressWarnings(<span class="hljs-string">"unused"</span>)
    public static void downloadApk(
            Context context, UpdateInfo updateInfo,
            String infoName, String storeApk
    ) {
        if (!isDownloadManagerAvailable()) {
            return<span class="hljs-comment">;</span>
        }

        String description = updateInfo<span class="hljs-preprocessor">.data</span><span class="hljs-preprocessor">.description</span><span class="hljs-comment">;</span>
        String appUrl = updateInfo<span class="hljs-preprocessor">.data</span><span class="hljs-preprocessor">.appURL</span><span class="hljs-comment">;</span>

        if (appUrl == null || appUrl<span class="hljs-preprocessor">.isEmpty</span>()) {
            Log<span class="hljs-preprocessor">.e</span>(TAG, <span class="hljs-string">"请填写\"App下载地址\""</span>)<span class="hljs-comment">;</span>
            return<span class="hljs-comment">;</span>
        }

        appUrl = appUrl<span class="hljs-preprocessor">.trim</span>()<span class="hljs-comment">; // 去掉首尾空格</span>

        if (!appUrl<span class="hljs-preprocessor">.startsWith</span>(<span class="hljs-string">"http"</span>)) {
            appUrl = <span class="hljs-string">"http://"</span> + appUrl<span class="hljs-comment">; // 添加Http信息</span>
        }

        Log<span class="hljs-preprocessor">.e</span>(TAG, <span class="hljs-string">"appUrl: "</span> + appUrl)<span class="hljs-comment">;</span>

        DownloadManager<span class="hljs-preprocessor">.Request</span> request<span class="hljs-comment">;</span>
        try {
            request = new DownloadManager<span class="hljs-preprocessor">.Request</span>(Uri<span class="hljs-preprocessor">.parse</span>(appUrl))<span class="hljs-comment">;</span>
        } catch (Exception e) {
            e<span class="hljs-preprocessor">.printStackTrace</span>()<span class="hljs-comment">;</span>
            return<span class="hljs-comment">;</span>
        }
        request<span class="hljs-preprocessor">.setTitle</span>(infoName)<span class="hljs-comment">;</span>
        request<span class="hljs-preprocessor">.setDescription</span>(description)<span class="hljs-comment">;</span>
        if (Build<span class="hljs-preprocessor">.VERSION</span><span class="hljs-preprocessor">.SDK</span>_INT &gt;= Build<span class="hljs-preprocessor">.VERSION</span>_CODES<span class="hljs-preprocessor">.HONEYCOMB</span>) {
            request<span class="hljs-preprocessor">.allowScanningByMediaScanner</span>()<span class="hljs-comment">;</span>
            request<span class="hljs-preprocessor">.setNotificationVisibility</span>(DownloadManager<span class="hljs-preprocessor">.Request</span><span class="hljs-preprocessor">.VISIBILITY</span>_VISIBLE_NOTIFY_COMPLETED)<span class="hljs-comment">;</span>
        }
        request<span class="hljs-preprocessor">.setDestinationInExternalPublicDir</span>(Environment<span class="hljs-preprocessor">.DIRECTORY</span>_DOWNLOADS, storeApk)<span class="hljs-comment">;</span>

        Context appContext = context<span class="hljs-preprocessor">.getApplicationContext</span>()<span class="hljs-comment">;</span>
        DownloadManager manager = (DownloadManager)
                appContext<span class="hljs-preprocessor">.getSystemService</span>(Context<span class="hljs-preprocessor">.DOWNLOAD</span>_SERVICE)<span class="hljs-comment">;</span>

        // 存储下载Key
        SharedPreferences sp = PreferenceManager<span class="hljs-preprocessor">.getDefaultSharedPreferences</span>(appContext)<span class="hljs-comment">;</span>
        sp<span class="hljs-preprocessor">.edit</span>()<span class="hljs-preprocessor">.putLong</span>(PrefsConsts<span class="hljs-preprocessor">.DOWNLOAD</span>_APK_ID_PREFS, manager<span class="hljs-preprocessor">.enqueue</span>(request))<span class="hljs-preprocessor">.apply</span>()<span class="hljs-comment">;</span>
    }</code></pre>

<blockquote>
  <p>使用DownloadManager下载文件是Android的推荐方式.  <br>
  存储下载Id(manager.enqueue(request))是为了在安装应用时, 找到Apk.  <br>
  默认存储地址/storage/sdcard0/Download.</p>
</blockquote>



<h2 id="自动安装">自动安装</h2>

<p>注册广播接收器, 接收消息ACTION_DOWNLOAD_COMPLETE, 下载完成会发送广播. 获取下载文件的Uri, 进行匹配, 发送安装消息, 自动安装.</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-javadoc">/**
 * 安装下载接收器
 * &lt;p&gt;
 * Created by wangchenlong on 16/1/5.
 */</span>
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">InstallReceiver</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BroadcastReceiver</span> {</span>

    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String TAG =
            <span class="hljs-string">"DEBUG-WCL: "</span> + InstallReceiver.class.getSimpleName();

    <span class="hljs-comment">// 安装下载接收器</span>
    <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onReceive</span>(Context context, Intent intent) {
        <span class="hljs-keyword">if</span> (intent.getAction().equals(DownloadManager.ACTION_DOWNLOAD_COMPLETE)) {
            <span class="hljs-keyword">long</span> downloadApkId = intent.getLongExtra(DownloadManager.EXTRA_DOWNLOAD_ID, -<span class="hljs-number">1</span>);
            installApk(context, downloadApkId);
        }
    }

    <span class="hljs-comment">// 安装Apk</span>
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">installApk</span>(Context context, <span class="hljs-keyword">long</span> downloadApkId) {
        <span class="hljs-comment">// 获取存储ID</span>
        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(context);
        <span class="hljs-keyword">long</span> id = sp.getLong(PrefsConsts.DOWNLOAD_APK_ID_PREFS, -<span class="hljs-number">1</span>L);

        <span class="hljs-keyword">if</span> (downloadApkId == id) {
            DownloadManager dManager = (DownloadManager) context.getSystemService(Context.DOWNLOAD_SERVICE);
            Intent install = <span class="hljs-keyword">new</span> Intent(Intent.ACTION_VIEW);
            Uri downloadFileUri = dManager.getUriForDownloadedFile(downloadApkId);
            <span class="hljs-keyword">if</span> (downloadFileUri != <span class="hljs-keyword">null</span>) {
                install.setDataAndType(downloadFileUri, <span class="hljs-string">"application/vnd.android.package-archive"</span>);
                install.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                context.startActivity(install);
            } <span class="hljs-keyword">else</span> {
                Log.e(TAG, <span class="hljs-string">"下载失败"</span>);
            }
        }
    }
}</code></pre>

<blockquote>
  <p>安装本应用下载的Apk, 不安装其他Apk, 存储下载Id, 与广播Id进行匹配.  <br>
  下载失败, 也会发送下载完成(ACTION_DOWNLOAD_COMPLETE)广播, Uri可能为空, 需要判断, 否则发生崩溃.</p>
</blockquote>

<p>Github<a href="https://github.com/SpikeKing/wcl-update-request-demo">下载地址</a> <br>
转自：<a href="http://blog.csdn.net//caroline_wendy/article/details/50475854">http://blog.csdn.net//caroline_wendy/article/details/50475854</a></p>
            <div>
                作者：jdsjlzx 发表于2016/6/1 0:07:26 <a href="http://blog.csdn.net/jdsjlzx/article/details/51550459">原文链接</a>
            </div>
            <div>
            阅读：807 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51550459#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[转]Retrofit缓存网络数据--RxJava和数据库]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51550400</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51550400</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/31 23:58:16</pubDate>
        <description><![CDATA[
            <p>RxJava是响应式编程, 在异步处理网络数据时, 使用广泛.  <br>
我们也可以使用一些Rx的特性, 优雅地缓存网络数据.</p>

<p>缓存模式: 读取数据库, 显示, 请求数据, 存储到数据库, 再更新页面.</p>

<p>SpikeKing 大神git地址：<a href="https://github.com/SpikeKing">https://github.com/SpikeKing</a> <br>
代码：<a href="https://github.com/SpikeKing/wcl-rx-cache-demo">https://github.com/SpikeKing/wcl-rx-cache-demo</a></p>

<p><img src="http://img.blog.csdn.net/20160119085940808" alt="这里写图片描述" title=""></p>

<p>使用Dagger2+Retrofit+Rx的标准组合, 我来讲解一下如何使用. <br>
<img src="http://img.blog.csdn.net/20160119085857735" alt="这里写图片描述" title=""></p>

<ol>
<li>框架</li>
</ol>

<p>常规项目, 包含跳转缓存和非缓存页面, 为了模拟慢速环境, 延迟3秒加载数据.</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> {</span>

    <span class="hljs-annotation">@Override</span>
    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span>(Bundle savedInstanceState) {
        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }

    <span class="hljs-comment">// 跳转无缓存</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">gotoNoCache</span>(View view) {
        startActivity(<span class="hljs-keyword">new</span> Intent(<span class="hljs-keyword">this</span>, NocacheActivity.class));
    }

    <span class="hljs-comment">// 跳转有缓存</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">gotoCache</span>(View view) {
        startActivity(<span class="hljs-keyword">new</span> Intent(<span class="hljs-keyword">this</span>, CacheActivity.class));
    }
}</code></pre>

<ol>
<li>无缓存</li>
</ol>

<p>依赖注入三个关键部分, Application/Component/Module.</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RcApplication</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Application</span> {</span>
    <span class="hljs-keyword">private</span> ApiComponent mApiComponent;

    <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span>() {
        <span class="hljs-keyword">super</span>.onCreate();
        mApiComponent = DaggerApiComponent.builder()
                .apiModule(<span class="hljs-keyword">new</span> ApiModule(<span class="hljs-keyword">this</span>)).build();
    }

    <span class="hljs-keyword">public</span> ApiComponent <span class="hljs-title">getApiComponent</span>() {
        <span class="hljs-keyword">return</span> mApiComponent;
    }
}</code></pre>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-annotation">@Singleton</span>
<span class="hljs-annotation">@Component</span>(modules = ApiModule.class)
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">ApiComponent</span> {</span>
    <span class="hljs-keyword">void</span> inject(NocacheActivity activity);

    <span class="hljs-keyword">void</span> inject(CacheActivity activity);
}</code></pre>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-annotation">@Module</span>
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ApiModule</span> {</span>
    <span class="hljs-keyword">private</span> Application mApplication;

    <span class="hljs-keyword">public</span> <span class="hljs-title">ApiModule</span>(Application application) {
        mApplication = application;
    }

    <span class="hljs-annotation">@Provides</span>
    <span class="hljs-annotation">@Singleton</span>
    <span class="hljs-keyword">public</span> Application <span class="hljs-title">provideApplication</span>() {
        <span class="hljs-keyword">return</span> mApplication;
    }

    <span class="hljs-annotation">@Provides</span>
    <span class="hljs-annotation">@Singleton</span> GitHubClient provideGitHubClient() {
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> GitHubClient();
    }

    <span class="hljs-annotation">@Provides</span> ObservableRepoDb provideObservableRepoDb() {
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> ObservableRepoDb(mApplication);
    }
}</code></pre>

<blockquote>
  <p>模块提供应用信息, GitHub的网络请求, 数据库.  <br>
  @Singleton表示单例模式, 全部注入拥有一个实例.</p>
</blockquote>

<p>页面, 使用RecyclerView显示列表信息, 在加载时显示ProgressBar.</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-javadoc">/**
 * 无缓存Activity
 * &lt;p&gt;
 * Created by wangchenlong on 16/1/18.
 */</span>
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NocacheActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Activity</span> {</span>

    <span class="hljs-annotation">@Bind</span>(R.id.nocache_rv_list) RecyclerView mRvList;
    <span class="hljs-annotation">@Bind</span>(R.id.nocache_pb_progress) ProgressBar mPbProgress;

    <span class="hljs-annotation">@Inject</span> Application mApplication;
    <span class="hljs-annotation">@Inject</span> GitHubClient mGitHubClient;

    <span class="hljs-keyword">private</span> ListAdapter mListAdapter;

    <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span>(Bundle savedInstanceState) {
        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);
        setContentView(R.layout.activity_nocache);
        ButterKnife.bind(<span class="hljs-keyword">this</span>);

        ((RcApplication) getApplication()).getApiComponent().inject(<span class="hljs-keyword">this</span>);

        LinearLayoutManager layoutManager = <span class="hljs-keyword">new</span> LinearLayoutManager(mApplication);
        mRvList.setLayoutManager(layoutManager);

        mListAdapter = <span class="hljs-keyword">new</span> ListAdapter();
        mRvList.setAdapter(mListAdapter);
    }

    <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onResume</span>() {
        <span class="hljs-keyword">super</span>.onResume();

        <span class="hljs-comment">// 延迟3秒, 模拟效果</span>
        mGitHubClient.getRepos(<span class="hljs-string">"SpikeKing"</span>)
                .delay(<span class="hljs-number">3</span>, TimeUnit.SECONDS)
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(<span class="hljs-keyword">this</span>::onSuccess, <span class="hljs-keyword">this</span>::onError);

        mPbProgress.setVisibility(View.VISIBLE);
    }

    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onSuccess</span>(ArrayList&lt;Repo&gt; repos) {
        mListAdapter.setRepos(repos);
        mPbProgress.setVisibility(View.INVISIBLE);
    }

    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onError</span>(Throwable throwable) {
        mPbProgress.setVisibility(View.INVISIBLE);
    }
}</code></pre>

<p>通过观察可以发现, 长时间显示白屏会降低用户体验. 我来看看缓存模式.</p>



<h2 id="缓存">缓存</h2>

<p>缓存模式: 读取数据库, 显示, 请求数据, 存储到数据库, 再更新页面.  <br>
推荐使用脚本生成数据库处理类, 使用方式参考, 自动生成DbHelper的脚本.</p>

<p>主页逻辑.</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CacheActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Activity</span> {</span>

    <span class="hljs-annotation">@Bind</span>(R.id.cache_rv_list) RecyclerView mRvList; <span class="hljs-comment">// 列表</span>
    <span class="hljs-annotation">@Bind</span>(R.id.cache_srl_swipe) SwipeRefreshLayout mSrlSwipe; <span class="hljs-comment">// 刷新</span>

    <span class="hljs-annotation">@Inject</span> Application mApplication;
    <span class="hljs-annotation">@Inject</span> ObservableRepoDb mRepoDb;
    <span class="hljs-annotation">@Inject</span> GitHubClient mGitHubClient;

    <span class="hljs-keyword">private</span> ListAdapter mListAdapter; <span class="hljs-comment">// RecyclerView适配器</span>

    <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span>(Bundle savedInstanceState) {
        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);
        setContentView(R.layout.activity_cache);
        ButterKnife.bind(<span class="hljs-keyword">this</span>);

        <span class="hljs-comment">// 注入类</span>
        ((RcApplication) getApplication()).getApiComponent().inject(<span class="hljs-keyword">this</span>);

        LinearLayoutManager layoutManager = <span class="hljs-keyword">new</span> LinearLayoutManager(mApplication);
        mRvList.setLayoutManager(layoutManager);

        mListAdapter = <span class="hljs-keyword">new</span> ListAdapter();
        mRvList.setAdapter(mListAdapter);

        mSrlSwipe.setOnRefreshListener(<span class="hljs-keyword">this</span>::fetchUpdates);
    }

    <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onResume</span>() {
        <span class="hljs-keyword">super</span>.onResume();
        mRepoDb.getObservable()
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(<span class="hljs-keyword">this</span>::setData);

        fetchUpdates();
        Toast.makeText(mApplication, <span class="hljs-string">"正在更新"</span>, Toast.LENGTH_SHORT).show();
    }

    <span class="hljs-comment">// 设置数据, 更新完成会调用</span>
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setData</span>(ArrayList&lt;Repo&gt; repos) {
        mListAdapter.setRepos(repos);
        Toast.makeText(mApplication, <span class="hljs-string">"更新完成"</span>, Toast.LENGTH_SHORT).show();
    }

    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">fetchUpdates</span>() {
        <span class="hljs-comment">// 延迟3秒, 模拟效果</span>
        mGitHubClient.getRepos(<span class="hljs-string">"SpikeKing"</span>)
                .delay(<span class="hljs-number">3</span>, TimeUnit.SECONDS)
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(mRepoDb::insertRepoList, <span class="hljs-keyword">this</span>::fetchError, <span class="hljs-keyword">this</span>::fetchComplete);
    }

    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">fetchError</span>(Throwable throwable) {
        mSrlSwipe.setRefreshing(<span class="hljs-keyword">false</span>);
    }

    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">fetchComplete</span>() {
        mSrlSwipe.setRefreshing(<span class="hljs-keyword">false</span>);
    }
}</code></pre>

<p>数据库的观察者</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-javadoc">/**
 * Redo的观察者
 * &lt;p&gt;
 * Created by wangchenlong on 16/1/18.
 */</span>
<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ObservableRepoDb</span> {</span>
    <span class="hljs-keyword">private</span> PublishSubject&lt;ArrayList&lt;Repo&gt;&gt; mPublishSubject; <span class="hljs-comment">// 发表主题</span>
    <span class="hljs-keyword">private</span> RepoDbHelper mDbHelper; <span class="hljs-comment">// 数据库</span>

    <span class="hljs-keyword">public</span> <span class="hljs-title">ObservableRepoDb</span>(Context context) {
        mDbHelper = <span class="hljs-keyword">new</span> RepoDbHelper(context);
        mPublishSubject = PublishSubject.create();
    }

    <span class="hljs-comment">// 返回观察者</span>
    <span class="hljs-keyword">public</span> Observable&lt;ArrayList&lt;Repo&gt;&gt; <span class="hljs-title">getObservable</span>() {
        Observable&lt;ArrayList&lt;Repo&gt;&gt; firstObservable = Observable.fromCallable(<span class="hljs-keyword">this</span>::getRepoList);
        <span class="hljs-keyword">return</span> firstObservable.concatWith(mPublishSubject); <span class="hljs-comment">// 连接发表主题</span>
    }

    <span class="hljs-comment">// 从数据库获得数据</span>
    <span class="hljs-keyword">private</span> ArrayList&lt;Repo&gt; <span class="hljs-title">getRepoList</span>() {
        mDbHelper.openForRead();
        ArrayList&lt;Repo&gt; repos = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();
        Cursor c = mDbHelper.getAllRepo();
        <span class="hljs-keyword">if</span> (!c.moveToFirst()) {
            <span class="hljs-keyword">return</span> repos; <span class="hljs-comment">// 返回空</span>
        }

        do {
            <span class="hljs-comment">// 添加数据</span>
            repos.add(<span class="hljs-keyword">new</span> Repo(
                    c.getString(RepoDbHelper.REPO_ID_COLUMN_POSITION),
                    c.getString(RepoDbHelper.REPO_NAME_COLUMN_POSITION),
                    c.getString(RepoDbHelper.REPO_DESCRIPTION_COLUMN_POSITION),
                    <span class="hljs-keyword">new</span> Repo.Owner(c.getString(RepoDbHelper.REPO_OWNER_COLUMN_POSITION), <span class="hljs-string">""</span>, <span class="hljs-string">""</span>, <span class="hljs-string">""</span>)));
        } <span class="hljs-keyword">while</span> (c.moveToNext());
        c.close();
        mDbHelper.close();
        <span class="hljs-keyword">return</span> repos;
    }

    <span class="hljs-comment">// 插入Repo列表</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">insertRepoList</span>(ArrayList&lt;Repo&gt; repos) {
        mDbHelper.open();
        mDbHelper.removeAllRepo();
        <span class="hljs-keyword">for</span> (Repo repo : repos) {
            mDbHelper.addRepo(
                    repo.getId(),
                    repo.getName(),
                    repo.getDescription(),
                    repo.getOwner().getLogin()
            );
        }
        mDbHelper.close();
        mPublishSubject.onNext(repos); <span class="hljs-comment">// 会调用更新数据</span>
    }
}</code></pre>

<blockquote>
  <p>这一部分是关键, 实现网络请求同步插入数据库和更新页面.  <br>
  关联PublishSubject, 在插入数据完成后, 调用绑定观察者, 更新页面.  <br>
  即.concatWith(mPublishSubject)和mPublishSubject.onNext(repos).</p>
</blockquote>

<p>Rx在处理网络请求方面, 确实非常优雅, 值得喜欢完美的人使用.</p>

<p>最后感谢作者分享，深夜看到好文章，心中窃喜。 <br>
原文链接：<a href="http://blog.csdn.net/caroline_wendy/article/details/50540272">http://blog.csdn.net/caroline_wendy/article/details/50540272</a></p>

<p>代码：<a href="https://github.com/SpikeKing/wcl-rx-cache-demo">https://github.com/SpikeKing/wcl-rx-cache-demo</a></p>
            <div>
                作者：jdsjlzx 发表于2016/5/31 23:58:16 <a href="http://blog.csdn.net/jdsjlzx/article/details/51550400">原文链接</a>
            </div>
            <div>
            阅读：720 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51550400#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]Retrofit  实现离线缓存]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51550269</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51550269</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/31 23:38:46</pubDate>
        <description><![CDATA[
            <p>Retrofit 2.0开始，底层的网络连接全都依赖于OkHttp,故要设置缓存，必须从OkHttp下手。</p>

<p>特别要说明的是，retrofit 2.0已经默认支持缓存，OkHttp版本不同，配置方法也不同。</p>



<h2 id="okhttp30版本">OkHttp3.0版本</h2>

<p>接口方法加上@UseCache,即可实现Cache.  <br>
Why？Retrofit 2.0,为Observable提供了Cache支持.</p>

<p>cache的一些表现: <br>
Cache获取与网络获取是异步进行的. <br>
若网络获取比Cache获取速度快,Cache不会发射出去. <br>
网络获取完毕后,异步进行保存Cache操作,不阻塞结果的发射.</p>

<p>优秀Demo：<a href="https://github.com/cpoopc/RetrofitRxCache">https://github.com/cpoopc/RetrofitRxCache</a></p>



<h2 id="okhttp26版本">OkHttp2.6版本</h2>

<p>开启OkHttp缓存</p>



<pre class="prettyprint"><code class=" hljs vhdl"><span class="hljs-keyword">File</span> httpCacheDirectory = <span class="hljs-keyword">new</span> <span class="hljs-keyword">File</span>(UIUtils.getContext().getExternalCacheDir(), <span class="hljs-string">"responses"</span>);
client.setCache(<span class="hljs-keyword">new</span> Cache(httpCacheDirectory,<span class="hljs-number">10</span> * <span class="hljs-number">1024</span> * <span class="hljs-number">1024</span>));</code></pre>

<p>我们可以看到 先获取系统外部存储的缓存路径，命名为response,此文件夹可以在android/data/&lt;包名&gt;/cache/resposes看到里面的内容，具体OkHttp是如何做到离线缓存的呢？</p>

<p>我们进入Cache类，有重大发现，首先是它的注释，极其详细。</p>



<pre class="prettyprint"><code class=" hljs fsharp">Caches HTTP <span class="hljs-keyword">and</span> HTTPS responses <span class="hljs-keyword">to</span> the filesystem so they may be reused, saving time <span class="hljs-keyword">and</span> bandwidth.
Cache Optimization
To measure cache effectiveness, this <span class="hljs-keyword">class</span> tracks three statistics:
Request Count: the number <span class="hljs-keyword">of</span> HTTP requests issued since this cache was created.
Network Count: the number <span class="hljs-keyword">of</span> those requests that required network <span class="hljs-keyword">use</span>.
Hit Count: the number <span class="hljs-keyword">of</span> those requests whose responses were served by the cache.
Sometimes a request will result <span class="hljs-keyword">in</span> a conditional cache hit. If the cache contains a stale copy <span class="hljs-keyword">of</span> the response, the client will issue a conditional GET. The server will <span class="hljs-keyword">then</span> send either the updated response <span class="hljs-keyword">if</span> it has changed, <span class="hljs-keyword">or</span> a short 'not modified' response <span class="hljs-keyword">if</span> the client's copy is still valid. Such responses increment both the network count <span class="hljs-keyword">and</span> hit count.
The best way <span class="hljs-keyword">to</span> improve the cache hit rate is by configuring the web server <span class="hljs-keyword">to</span> <span class="hljs-keyword">return</span> cacheable responses. Although this client honors all HTTP/<span class="hljs-number">1.1</span> (RFC <span class="hljs-number">7234</span>) cache headers, it doesn't cache partial responses.
Force a Network Response
In some situations, such <span class="hljs-keyword">as</span> after a user clicks a 'refresh' button, it may be necessary <span class="hljs-keyword">to</span> skip the cache, <span class="hljs-keyword">and</span> fetch data directly from the server. To force a full refresh, add the no-cache directive:

Request request = <span class="hljs-keyword">new</span> Request.Builder()
    .cacheControl(<span class="hljs-keyword">new</span> CacheControl.Builder().noCache().build())
    .url(<span class="hljs-string">"http://publicobject.com/helloworld.txt"</span>)
    .build();

If it is only necessary <span class="hljs-keyword">to</span> force a cached response <span class="hljs-keyword">to</span> be validated by the server, <span class="hljs-keyword">use</span> the more efficient max-age=<span class="hljs-number">0</span> directive instead:

    Request request = <span class="hljs-keyword">new</span> Request.Builder()
        .cacheControl(<span class="hljs-keyword">new</span> CacheControl.Builder()
            .maxAge(<span class="hljs-number">0</span>, TimeUnit.SECONDS)
            .build())
        .url(<span class="hljs-string">"http://publicobject.com/helloworld.txt"</span>)
        .build();

Force a Cache Response
Sometimes you'll want <span class="hljs-keyword">to</span> show resources <span class="hljs-keyword">if</span> they are available immediately, but not otherwise. This can be used so your application can show something <span class="hljs-keyword">while</span> waiting <span class="hljs-keyword">for</span> the latest data <span class="hljs-keyword">to</span> be downloaded. To restrict a request <span class="hljs-keyword">to</span> locally-cached resources, add the only-<span class="hljs-keyword">if</span>-cached directive:

      Request request = <span class="hljs-keyword">new</span> Request.Builder()
          .cacheControl(<span class="hljs-keyword">new</span> CacheControl.Builder()
              .onlyIfCached()
              .build())
          .url(<span class="hljs-string">"http://publicobject.com/helloworld.txt"</span>)
          .build();
      Response forceCacheResponse = client.newCall(request).execute();
      <span class="hljs-keyword">if</span> (forceCacheResponse.code() != <span class="hljs-number">504</span>) {
        <span class="hljs-comment">// The resource was cached! Show it.</span>
      } <span class="hljs-keyword">else</span> {
        <span class="hljs-comment">// The resource was not cached.</span>
      }

This technique works even better <span class="hljs-keyword">in</span> situations where a stale response is better than no response. To permit stale cached responses, <span class="hljs-keyword">use</span> the max-stale directive <span class="hljs-keyword">with</span> the maximum staleness <span class="hljs-keyword">in</span> seconds:

    Request request = <span class="hljs-keyword">new</span> Request.Builder()
        .cacheControl(<span class="hljs-keyword">new</span> CacheControl.Builder()
            .maxStale(<span class="hljs-number">365</span>, TimeUnit.DAYS)
            .build())
        .url(<span class="hljs-string">"http://publicobject.com/helloworld.txt"</span>)
        .build();

The CacheControl <span class="hljs-keyword">class</span> can configure request caching directives <span class="hljs-keyword">and</span> parse response caching directives. It even offers convenient constants CacheControl.FORCE_NETWORK <span class="hljs-keyword">and</span> CacheControl.FORCE_CACHE that address the <span class="hljs-keyword">use</span> cases above.</code></pre>

<p>文档详细说明了此类的作用，支持Http缓存使用，然后具体的用法，可惜的是我们这里使用的是Retrofit,无法直接用OkHttp，如果直接用OkHttp的童鞋们，可以根据上面的提示，完成具体的缓存操作。</p>

<p>通过阅读文档，我们知道还有一个类，CacheControl类，只要负责缓存策略的管理，其中，支持一下策略</p>

<blockquote>
  <ol>
  <li>noCache  不使用缓存，全部走网络</li>
  <li>noStore   不使用缓存，也不存储缓存</li>
  <li>onlyIfCached 只使用缓存</li>
  <li>maxAge  设置最大失效时间，失效则不使用 需要服务器配合</li>
  <li>maxStale 设置最大失效时间，失效则不使用 需要服务器配合 感觉这两个类似 还没怎么弄清楚，清楚的同学欢迎留言</li>
  <li>minFresh 设置有效时间，依旧如上</li>
  <li>FORCE_NETWORK 只走网络</li>
  <li>FORCE_CACHE 只走缓存</li>
  </ol>
</blockquote>

<p>通过上面的CacheControl类,我们很快就能指定详细的策略</p>

<p>首先，判断网络，有网络，则从网络获取，并保存到缓存中，无网络，则从缓存中获取</p>

<p>所以，最终的代码如下</p>

<p>-首先，给OkHttp设置拦截器</p>

<p>client.interceptors().add(interceptor);</p>

<p>-然后，在拦截器内做Request拦截操作</p>



<pre class="prettyprint"><code class=" hljs avrasm">Request request = chain<span class="hljs-preprocessor">.request</span>()<span class="hljs-comment">;</span>
                if (！AppUtil<span class="hljs-preprocessor">.isNetworkReachable</span>(UIUtils<span class="hljs-preprocessor">.getContext</span>())) {
                    request = request<span class="hljs-preprocessor">.newBuilder</span>()
                            <span class="hljs-preprocessor">.cacheControl</span>(CacheControl<span class="hljs-preprocessor">.FORCE</span>_CACHE)
                            <span class="hljs-preprocessor">.url</span>(path)<span class="hljs-preprocessor">.build</span>()<span class="hljs-comment">;</span>
                    UIUtils<span class="hljs-preprocessor">.showToastSafe</span>(<span class="hljs-string">"暂无网络"</span>)<span class="hljs-comment">;</span>
                }</code></pre>

<p>其中，AppUtil.isNetworkReachable(UIUtils.getContext())是判断网络是否连接的方法，具体逻辑如下</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-javadoc">/**
 * 判断网络是否可用
 *
 *<span class="hljs-javadoctag"> @param</span> context Context对象
 */</span>
<span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Boolean <span class="hljs-title">isNetworkReachable</span>(Context context) {
    ConnectivityManager cm = (ConnectivityManager) context
            .getSystemService(Context.CONNECTIVITY_SERVICE);
    NetworkInfo current = cm.getActiveNetworkInfo();
    <span class="hljs-keyword">if</span> (current == <span class="hljs-keyword">null</span>) {
        <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;
    }
    <span class="hljs-keyword">return</span> (current.isAvailable());
}</code></pre>

<p>在每个请求发出前，判断一下网络状况，如果没问题继续访问，如果有问题，则设置从本地缓存中读取</p>

<p>-接下来是设置Response</p>



<pre class="prettyprint"><code class=" hljs avrasm"> Response response = chain<span class="hljs-preprocessor">.proceed</span>(request)<span class="hljs-comment">;</span>
                if (AppUtil<span class="hljs-preprocessor">.isNetworkReachable</span>(UIUtils<span class="hljs-preprocessor">.getContext</span>())) {
                    int maxAge = <span class="hljs-number">60</span>*<span class="hljs-number">60</span><span class="hljs-comment">; // read from cache for 60 minute</span>
                    response<span class="hljs-preprocessor">.newBuilder</span>()
                            <span class="hljs-preprocessor">.removeHeader</span>(<span class="hljs-string">"Pragma"</span>)
                            <span class="hljs-preprocessor">.header</span>(<span class="hljs-string">"Cache-Control"</span>, <span class="hljs-string">"public, max-age="</span> + maxAge)
                            <span class="hljs-preprocessor">.build</span>()<span class="hljs-comment">;</span>
                } else {
                    int maxStale = <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">28</span><span class="hljs-comment">; // tolerate 4-weeks stale</span>
                    response<span class="hljs-preprocessor">.newBuilder</span>()
                            <span class="hljs-preprocessor">.removeHeader</span>(<span class="hljs-string">"Pragma"</span>)
                            <span class="hljs-preprocessor">.header</span>(<span class="hljs-string">"Cache-Control"</span>, <span class="hljs-string">"public, only-if-cached, max-stale="</span> + maxStale)
                            <span class="hljs-preprocessor">.build</span>()<span class="hljs-comment">;</span>
                }</code></pre>

<p>先判断网络，网络好的时候，移除header后添加haunch失效时间为1小时，网络未连接的情况下设置缓存时间为4周</p>

<p>-最后，拦截器全部代码</p>



<pre class="prettyprint"><code class=" hljs avrasm">Interceptor interceptor = new Interceptor() {
            @Override
            public Response intercept(Chain chain) throws IOException {
                Request request = chain<span class="hljs-preprocessor">.request</span>()<span class="hljs-comment">;</span>
                if (!AppUtil<span class="hljs-preprocessor">.isNetworkReachable</span>(UIUtils<span class="hljs-preprocessor">.getContext</span>())) {
                    request = request<span class="hljs-preprocessor">.newBuilder</span>()
                            <span class="hljs-preprocessor">.cacheControl</span>(CacheControl<span class="hljs-preprocessor">.FORCE</span>_CACHE)
                            <span class="hljs-preprocessor">.url</span>(path)<span class="hljs-preprocessor">.build</span>()<span class="hljs-comment">;</span>
                    UIUtils<span class="hljs-preprocessor">.showToastSafe</span>(<span class="hljs-string">"暂无网络"</span>)<span class="hljs-comment">;</span>
                }

                Response response = chain<span class="hljs-preprocessor">.proceed</span>(request)<span class="hljs-comment">;</span>
                if (AppUtil<span class="hljs-preprocessor">.isNetworkReachable</span>(UIUtils<span class="hljs-preprocessor">.getContext</span>())) {
                    int maxAge = <span class="hljs-number">60</span> * <span class="hljs-number">60</span><span class="hljs-comment">; // read from cache for 1 minute</span>
                    response<span class="hljs-preprocessor">.newBuilder</span>()
                            <span class="hljs-preprocessor">.removeHeader</span>(<span class="hljs-string">"Pragma"</span>)
                            <span class="hljs-preprocessor">.header</span>(<span class="hljs-string">"Cache-Control"</span>, <span class="hljs-string">"public, max-age="</span> + maxAge)
                            <span class="hljs-preprocessor">.build</span>()<span class="hljs-comment">;</span>
                } else {
                    int maxStale = <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">28</span><span class="hljs-comment">; // tolerate 4-weeks stale</span>
                    response<span class="hljs-preprocessor">.newBuilder</span>()
                            <span class="hljs-preprocessor">.removeHeader</span>(<span class="hljs-string">"Pragma"</span>)
                            <span class="hljs-preprocessor">.header</span>(<span class="hljs-string">"Cache-Control"</span>, <span class="hljs-string">"public, only-if-cached, max-stale="</span> + maxStale)
                            <span class="hljs-preprocessor">.build</span>()<span class="hljs-comment">;</span>
                }
                return response<span class="hljs-comment">;</span>
            }
        }<span class="hljs-comment">;</span></code></pre>

<p>参考：<a href="http://www.cnblogs.com/Android-MR-wang/p/5133925.html">http://www.cnblogs.com/Android-MR-wang/p/5133925.html</a></p>



<h2 id="不用拦截器获取缓存">不用拦截器获取缓存</h2>

<blockquote>
  <p>POST方法没有缓存；  <br>
  头部Cache-Control设为max-age=0时则不会使用缓存而请求服务器；  <br>
  为if-only-cache时只查询缓存而不会请求服务器，max-stale可以配合设置缓存失效时间</p>
</blockquote>

<p>设置Cache-Control</p>

<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BaseApi</span> {</span>
    <span class="hljs-comment">//设缓存有效期为两个星期</span>
    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">long</span> CACHE_STALE_SEC = <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span> * <span class="hljs-number">14</span>;
    <span class="hljs-comment">//查询缓存的Cache-Control设置</span>
    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String CACHE_CONTROL_CACHE = <span class="hljs-string">"only-if-cached, max-stale="</span> + CACHE_STALE_SEC;
    <span class="hljs-comment">//查询网络的Cache-Control设置</span>
    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String CACHE_CONTROL_NETWORK = <span class="hljs-string">"max-age=0"</span>;
}</code></pre>

<p>接口中使用：</p>

<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserApi</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BaseApi</span>{</span>
    <span class="hljs-comment">//定义接口</span>
    <span class="hljs-keyword">private</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">UserService</span> {</span>
        <span class="hljs-comment">//POST方法没有缓存，适用于更新操作的接口</span>
        <span class="hljs-annotation">@FormUrlEncoded</span>
        <span class="hljs-annotation">@POST</span>(<span class="hljs-string">"user/user_updateUserName"</span>)
        Observable&lt;BaseResp&gt; updateUserName(<span class="hljs-annotation">@Field</span>(<span class="hljs-string">"userName"</span>) String userName);

        <span class="hljs-comment">//用@Header设置Cache-Control</span>
        <span class="hljs-annotation">@GET</span>(<span class="hljs-string">"user/user_queryProfile"</span>)
        Observable&lt;UserProfileResp&gt; queryProfile(<span class="hljs-annotation">@Header</span>(<span class="hljs-string">"Cache-Control"</span>) String cacheControl,
                                                 <span class="hljs-annotation">@Query</span>(<span class="hljs-string">"userId"</span>) <span class="hljs-keyword">int</span> userId);


    }
    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> UserService service = getRetrofit().create(UserService.class);

    <span class="hljs-comment">//更新用户名接口</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Observable&lt;BaseResp&gt; <span class="hljs-title">updateUserName</span>(String userName){
        <span class="hljs-keyword">return</span> service.updateUserName(userName);
    }
    <span class="hljs-comment">//查询用户信息网络接口</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Observable&lt;UserProfileResp&gt; <span class="hljs-title">queryProfile</span>(<span class="hljs-keyword">int</span> userId){
        <span class="hljs-keyword">return</span> service.queryProfile(CACHE_CONTROL_NETWORK, userId);
    }
    <span class="hljs-comment">//查询用户信息缓存接口</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Observable&lt;UserProfileResp&gt; <span class="hljs-title">queryProfileCache</span>(<span class="hljs-keyword">int</span> userId){
        <span class="hljs-keyword">return</span> service.queryProfile(CACHE_CONTROL_CACHE, userId);
    }
}</code></pre>

<p>如此在需要查询缓存的时候调用queryProfileCache，在需要网络数据时调用queryProfile即可。</p>
            <div>
                作者：jdsjlzx 发表于2016/5/31 23:38:46 <a href="http://blog.csdn.net/jdsjlzx/article/details/51550269">原文链接</a>
            </div>
            <div>
            阅读：702 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51550269#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[转]Android5.0改变support中AlertDialog的样式]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51547384</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51547384</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/31 17:12:28</pubDate>
        <description><![CDATA[
            <p>android support库提供了AlertDialog，可以让我们在低于5.0的系统使用到跟5.0系统一样的Material Design风格的对话框，但是使用了一段时间想到一些办法去改变对话框按钮字体的颜色，都不生效。 <br>
最近在网上找到了改变的方法，首先来说一下。</p>



<h2 id="改变alertdialog的样式">改变AlertDialog的样式</h2>

<p>在xml中定义一个主题：</p>



<pre class="prettyprint"><code class=" hljs applescript">&lt;style <span class="hljs-property">name</span>=<span class="hljs-string">"MyAlertDialogStyle"</span> parent=<span class="hljs-string">"Theme.AppCompat.Light.Dialog.Alert"</span>&gt;
    &lt;!<span class="hljs-comment">-- Used for the buttons --&gt;</span>
    &lt;<span class="hljs-property">item</span> <span class="hljs-property">name</span>=<span class="hljs-string">"colorAccent"</span>&gt;<span class="hljs-comment">#FFC107&lt;/item&gt;</span>
    &lt;!<span class="hljs-comment">-- Used for the title and text --&gt;</span>
    &lt;<span class="hljs-property">item</span> <span class="hljs-property">name</span>=<span class="hljs-string">"android:textColorPrimary"</span>&gt;<span class="hljs-comment">#FFFFFF&lt;/item&gt;</span>
    &lt;!<span class="hljs-comment">-- Used for the background --&gt;</span>
    &lt;<span class="hljs-property">item</span> <span class="hljs-property">name</span>=<span class="hljs-string">"android:background"</span>&gt;<span class="hljs-comment">#4CAF50&lt;/item&gt;</span>
&lt;/style&gt;</code></pre>

<p>样式如下图所示： <br>
<img src="http://7mj53c.com1.z0.glb.clouddn.com/2015/modify_dialog_style.jpg" alt="这里写图片描述" title=""></p>

<p>在创建的对话框的时候，这样创建就可以了。</p>



<pre class="prettyprint"><code class=" hljs avrasm">AlertDialog<span class="hljs-preprocessor">.Builder</span> builder = new AlertDialog<span class="hljs-preprocessor">.Builder</span>(this, R<span class="hljs-preprocessor">.style</span><span class="hljs-preprocessor">.MyAlertDialogStyle</span>)<span class="hljs-comment">;</span>
builder<span class="hljs-preprocessor">.setTitle</span>(<span class="hljs-string">"AppCompatDialog"</span>)<span class="hljs-comment">;</span>
builder<span class="hljs-preprocessor">.setMessage</span>(<span class="hljs-string">"Lorem ipsum dolor..."</span>)<span class="hljs-comment">;</span>
builder<span class="hljs-preprocessor">.setPositiveButton</span>(<span class="hljs-string">"OK"</span>, null)<span class="hljs-comment">;</span>
builder<span class="hljs-preprocessor">.setNegativeButton</span>(<span class="hljs-string">"Cancel"</span>, null)<span class="hljs-comment">;</span>
builder<span class="hljs-preprocessor">.show</span>()<span class="hljs-comment">;</span></code></pre>

<p>这样的方法是每个地方使用的时候，都要在构造函数传我们的这个Dialog的Theme，我们也可以全局的定义对话框的样式。</p>



<pre class="prettyprint"><code class=" hljs applescript">&lt;style <span class="hljs-property">name</span>=<span class="hljs-string">"MyTheme"</span> parent=<span class="hljs-string">"Base.Theme.AppCompat.Light"</span>&gt;
    &lt;<span class="hljs-property">item</span> <span class="hljs-property">name</span>=<span class="hljs-string">"alertDialogTheme"</span>&gt;@style/MyAlertDialogStyle&lt;/<span class="hljs-property">item</span>&gt;
    &lt;<span class="hljs-property">item</span> <span class="hljs-property">name</span>=<span class="hljs-string">"colorAccent"</span>&gt;@color/accent&lt;/<span class="hljs-property">item</span>&gt;
&lt;/style&gt;</code></pre>

<p>在我们的AndroidManifest.xml文件中声明application或者activity的时候设置theme为MyTheme即可，不过需要注意的一点是，我们的Activity需要继承自AppCompatActivity。</p>

<p>其他</p>

<p>从上面改变对话框的样式，可以想到用同样的思路来实现应用的换肤，应用主题之类的功能。</p>

<p>原文地址：<a href="http://blog.isming.me/2015/08/31/modify-alert-style/">http://blog.isming.me/2015/08/31/modify-alert-style/</a></p>
            <div>
                作者：jdsjlzx 发表于2016/5/31 17:12:28 <a href="http://blog.csdn.net/jdsjlzx/article/details/51547384">原文链接</a>
            </div>
            <div>
            阅读：490 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51547384#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]Android 5.0+ 自定义普通按钮的ripple波纹效果]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51547328</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51547328</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/31 17:05:44</pubDate>
        <description><![CDATA[
            <p>在Android L5.0中加入了触摸反馈动画。</p>

<p>其中最明显，最具代表性的就是波纹动画，比如当点击按钮时会从点击的位置产生类似于波纹的扩散效果。</p>

<p>波纹效果（Ripple）：</p>

<p>当你使用了Material主题后，波纹动画会自动应用在所有的控件上，我们当然可以来设置其属性来调整到我们需要的效果。</p>

<p>可以通过如下代码设置波纹的背景：</p>

<p>android:background=”?android:attr/selectableItemBackground”波纹有边界</p>

<p>android:background=”?android:attr/selectableItemBackgroundBorderless”波纹超出边界</p>

<p>使用效果如下：</p>

<p>B1是不设任何背景的按钮</p>

<p>B2设置了?android:attr/selectableItemBackground</p>

<p>B3设置了?android:attr/selectableItemBackgroundBorderless</p>

<p><img src="http://static.open-open.com/lib/uploadImg/20141122/20141122214256_785.gif" alt="这里写图片描述" title=""></p>

<p>设置颜色</p>

<p>我们也可以通过设置xml属性来调节动画颜色，从而可以适应不同的主题：</p>

<p>android:colorControlHighlight：设置波纹颜色</p>

<p>android:colorAccent：设置checkbox等控件的选中颜色</p>

<p>比如下面这个比较粉嫩的主题，就需要修改动画颜色来匹配(如何设置主题颜色请参考该系列<a href="http://www.open-open.com/lib/view/open1416664325648.html">第一篇文章</a>)： <br>
<img src="http://static.open-open.com/lib/uploadImg/20141122/20141122214257_848.gif" alt="这里写图片描述" title=""></p>

<p>上面说了这么多，好像都没有说怎么自定义，下面进入正题。</p>

<p>styles.xml中配置：</p>



<pre class="prettyprint"><code class=" hljs applescript">&lt;!<span class="hljs-comment">-- Base application theme. --&gt;</span>
    &lt;style <span class="hljs-property">name</span>=<span class="hljs-string">"AppTheme"</span> parent=<span class="hljs-string">"Theme.AppCompat.Light.NoActionBar"</span>&gt;
        &lt;!<span class="hljs-comment">-- Customize your theme here. --&gt;</span>
        &lt;<span class="hljs-property">item</span> <span class="hljs-property">name</span>=<span class="hljs-string">"colorPrimary"</span>&gt;@color/colorPrimary&lt;/<span class="hljs-property">item</span>&gt;
        &lt;<span class="hljs-property">item</span> <span class="hljs-property">name</span>=<span class="hljs-string">"colorPrimaryDark"</span>&gt;@color/colorPrimaryDark&lt;/<span class="hljs-property">item</span>&gt;
        &lt;<span class="hljs-property">item</span> <span class="hljs-property">name</span>=<span class="hljs-string">"colorAccent"</span>&gt;@color/colorAccent&lt;/<span class="hljs-property">item</span>&gt;
        &lt;<span class="hljs-property">item</span> <span class="hljs-property">name</span>=<span class="hljs-string">"colorControlHighlight"</span>&gt;@color/colorPrimary&lt;/<span class="hljs-property">item</span>&gt;
    &lt;/style&gt;</code></pre>

<p>定义colorControlHighlight属性就可以了。</p>

<p>注意：这里只是改变了波纹的颜色，形状并没有改变。</p>
            <div>
                作者：jdsjlzx 发表于2016/5/31 17:05:44 <a href="http://blog.csdn.net/jdsjlzx/article/details/51547328">原文链接</a>
            </div>
            <div>
            阅读：448 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51547328#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]Android 5.0以上版本去掉Button自带阴影效果的方法]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51546895</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51546895</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/31 16:29:09</pubDate>
        <description><![CDATA[
            <p>关键代码：</p>



<pre class="prettyprint"><code class=" hljs fix"><span class="hljs-attribute">style</span>=<span class="hljs-string">”?android:attr/borderlessButtonStyle” </span></code></pre>

<p>参考文章： <br>
<a href="http://stackoverflow.com/questions/28756035/how-to-remove-button-shadow-android">http://stackoverflow.com/questions/28756035/how-to-remove-button-shadow-android</a> </p>

<p>具体配置：</p>

<pre class="prettyprint"><code class=" hljs avrasm">&lt;Button
<span class="hljs-label">android:</span>layout_width=<span class="hljs-string">"wrap_content"</span>
<span class="hljs-label">android:</span>layout_height=<span class="hljs-string">"wrap_content"</span>
<span class="hljs-label">android:</span>text=<span class="hljs-string">"@string/button_send"</span>
<span class="hljs-label">android:</span>onClick=<span class="hljs-string">"sendMessage"</span>
style=<span class="hljs-string">"?android:attr/borderlessButtonStyle"</span> /&gt;</code></pre>

<p>设置该属性就可以去掉自带的阴影。  <br>
该属性在API 11及以上可用。</p>
            <div>
                作者：jdsjlzx 发表于2016/5/31 16:29:09 <a href="http://blog.csdn.net/jdsjlzx/article/details/51546895">原文链接</a>
            </div>
            <div>
            阅读：410 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51546895#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]Android 5.0设置全屏无标题]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51545693</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51545693</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/31 14:48:00</pubDate>
        <description><![CDATA[
            <p>在style.xml中定义：</p>



<pre class="prettyprint"><code class=" hljs applescript">&lt;style <span class="hljs-property">name</span>=<span class="hljs-string">"FullScreenTheme"</span> parent=<span class="hljs-string">"Theme.AppCompat.Light.NoActionBar"</span>&gt;
        &lt;!<span class="hljs-comment">-- Customize your theme here. --&gt;</span>
        &lt;<span class="hljs-property">item</span> <span class="hljs-property">name</span>=<span class="hljs-string">"android:windowFullscreen"</span>&gt;<span class="hljs-constant">true</span>&lt;/<span class="hljs-property">item</span>&gt;
    &lt;/style&gt;</code></pre>

<p>使用：</p>



<pre class="prettyprint"><code class=" hljs xml"><span class="hljs-tag">&lt;<span class="hljs-title">activity</span> <span class="hljs-attribute">android:name</span>=<span class="hljs-value">".ui.SplashActivity"</span> <span class="hljs-attribute">android:screenOrientation</span>=<span class="hljs-value">"portrait"</span>
                  <span class="hljs-attribute">android:theme</span>=<span class="hljs-value">"@style/FullScreenTheme"</span> /&gt;</span></code></pre>
            <div>
                作者：jdsjlzx 发表于2016/5/31 14:48:00 <a href="http://blog.csdn.net/jdsjlzx/article/details/51545693">原文链接</a>
            </div>
            <div>
            阅读：289 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51545693#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]RxJava Subscription 自动取消订阅]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51542003</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51542003</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/30 23:09:21</pubDate>
        <description><![CDATA[
            <p>在<a href="http://blog.csdn.net/jdsjlzx/article/details/51534504">RxJava Observer与Subscriber的关系</a> 一文中，我们提到：</p>

<blockquote>
  <p>subscribe(mObserver)和subscribe(mSubscriber)执行结果就会有区别：</p>
  
  <ul>
  <li>subscribe(mSubscriber)这种订阅方式在第二次请求数据时就不会执行了，原因就是第一次onNext后自动取消了订阅；</li>
  <li>subscribe(mObserver)则不出现此问题。</li>
  </ul>
</blockquote>

<p>今天我们分析下原因。</p>

<p>先来看看源码。</p>

<p>Subscription <br>
RxJava中有个叫做Subscription的接口,可以用来取消订阅.</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">Subscription</span> {</span>
    <span class="hljs-javadoc">/**
     * Stops the receipt of notifications on the {@link Subscriber} that was registered when this Subscription
     * was received.
     * &lt;p&gt;
     * This allows unregistering an {@link Subscriber} before it has finished receiving all events (i.e. before
     * onCompleted is called).
     */</span>
    <span class="hljs-keyword">void</span> unsubscribe();

    <span class="hljs-javadoc">/**
     * Indicates whether this {@code Subscription} is currently unsubscribed.
     *
     *<span class="hljs-javadoctag"> @return</span> {@code true} if this {@code Subscription} is currently unsubscribed, {@code false} otherwise
     */</span>
    <span class="hljs-keyword">boolean</span> isUnsubscribed();
}</code></pre>

<p>从上面可以看到,我们只需要调用unsubscribe就可以取消订阅,那么如何得到一个Subscription对象呢?</p>

<p>其实很简单: <br>
Observable.subscribe()方法可以返回一个Subscription的对象,即我们每次订阅都会返回. <br>
感觉Subscription就像一个订单,你下单了就会生成一个订单,而你也可以用这个订单取消订单.</p>



<h2 id="实战">实战</h2>

<p>我先写了以下代码来测试:</p>



<pre class="prettyprint"><code class=" hljs avrasm">Subscription subscription = Observable<span class="hljs-preprocessor">.just</span>(<span class="hljs-string">"Hello subscription"</span>)
        <span class="hljs-preprocessor">.subscribe</span>(new Action1&lt;String&gt;() {
            @Override
            public void <span class="hljs-keyword">call</span>(String s) {
                System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(s)<span class="hljs-comment">;</span>
            }
        })<span class="hljs-comment">;</span>
System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(subscription<span class="hljs-preprocessor">.isUnsubscribed</span>())<span class="hljs-comment">;</span>
subscription<span class="hljs-preprocessor">.unsubscribe</span>()<span class="hljs-comment">;</span>
System<span class="hljs-preprocessor">.out</span><span class="hljs-preprocessor">.println</span>(subscription<span class="hljs-preprocessor">.isUnsubscribed</span>())<span class="hljs-comment">;</span></code></pre>

<p>在我想来输出的日志应该是这样的:</p>



<pre class="prettyprint"><code class=" hljs bash">Hello subscription
<span class="hljs-literal">false</span>
<span class="hljs-literal">true</span></code></pre>

<p>但是,结果出乎我的意料,我运行之后是这样的:</p>



<pre class="prettyprint"><code class=" hljs bash">Hello subscription
<span class="hljs-literal">true</span>
<span class="hljs-literal">true</span></code></pre>

<p>明明我没有取消订阅啊，怎么就true了呢?</p>

<p>接下去我进源码探索了一下发现: <br>
在Observable.subscribe()源码：</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> Subscription <span class="hljs-title">subscribe</span>(Subscriber&lt;? <span class="hljs-keyword">super</span> T&gt; subscriber) {
        <span class="hljs-keyword">return</span> Observable.subscribe(subscriber, <span class="hljs-keyword">this</span>);
    }

    <span class="hljs-keyword">static</span> &lt;T&gt; Subscription subscribe(Subscriber&lt;? <span class="hljs-keyword">super</span> T&gt; subscriber, Observable&lt;T&gt; observable) {
     <span class="hljs-comment">// validate and proceed</span>
        <span class="hljs-keyword">if</span> (subscriber == <span class="hljs-keyword">null</span>) {
            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalArgumentException(<span class="hljs-string">"observer can not be null"</span>);
        }
        <span class="hljs-keyword">if</span> (observable.onSubscribe == <span class="hljs-keyword">null</span>) {
            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"onSubscribe function can not be null."</span>);
            <span class="hljs-comment">/*
             * the subscribe function can also be overridden but generally that's not the appropriate approach
             * so I won't mention that in the exception
             */</span>
        }

        <span class="hljs-comment">// new Subscriber so onStart it</span>
        subscriber.onStart();

        <span class="hljs-comment">/*
         * See https://github.com/ReactiveX/RxJava/issues/216 for discussion on "Guideline 6.4: Protect calls
         * to user code from within an Observer"
         */</span>
        <span class="hljs-comment">// if not already wrapped</span>
        <span class="hljs-keyword">if</span> (!(subscriber <span class="hljs-keyword">instanceof</span> SafeSubscriber)) {
            <span class="hljs-comment">// assign to `observer` so we return the protected version</span>
            subscriber = <span class="hljs-keyword">new</span> SafeSubscriber&lt;T&gt;(subscriber);
        }

        <span class="hljs-comment">// The code below is exactly the same an unsafeSubscribe but not used because it would </span>
        <span class="hljs-comment">// add a significant depth to already huge call stacks.</span>
        <span class="hljs-keyword">try</span> {
            <span class="hljs-comment">// allow the hook to intercept and/or decorate</span>
            hook.onSubscribeStart(observable, observable.onSubscribe).call(subscriber);
            <span class="hljs-keyword">return</span> hook.onSubscribeReturn(subscriber);
        } <span class="hljs-keyword">catch</span> (Throwable e) {
            <span class="hljs-comment">// special handling for certain Throwable/Error/Exception types</span>
            Exceptions.throwIfFatal(e);
            <span class="hljs-comment">// in case the subscriber can't listen to exceptions anymore</span>
            <span class="hljs-keyword">if</span> (subscriber.isUnsubscribed()) {
                RxJavaPluginUtils.handleException(hook.onSubscribeError(e));
            } <span class="hljs-keyword">else</span> {
                <span class="hljs-comment">// if an unhandled error occurs executing the onSubscribe we will propagate it</span>
                <span class="hljs-keyword">try</span> {
                    subscriber.onError(hook.onSubscribeError(e));
                } <span class="hljs-keyword">catch</span> (Throwable e2) {
                    Exceptions.throwIfFatal(e2);
                    <span class="hljs-comment">// if this happens it means the onError itself failed (perhaps an invalid function implementation)</span>
                    <span class="hljs-comment">// so we are unable to propagate the error correctly and will just throw</span>
                    RuntimeException r = <span class="hljs-keyword">new</span> OnErrorFailedException(<span class="hljs-string">"Error occurred attempting to subscribe ["</span> + e.getMessage() + <span class="hljs-string">"] and then again while trying to pass to onError."</span>, e2);
                    <span class="hljs-comment">// TODO could the hook be the cause of the error in the on error handling.</span>
                    hook.onSubscribeError(r);
                    <span class="hljs-comment">// TODO why aren't we throwing the hook's return value.</span>
                    <span class="hljs-keyword">throw</span> r;
                }
            }
            <span class="hljs-keyword">return</span> Subscriptions.unsubscribed();
        }
    }</code></pre>

<p>关键代码：</p>



<pre class="prettyprint"><code class=" hljs coffeescript"><span class="hljs-keyword">if</span> (!(subscriber <span class="hljs-keyword">instanceof</span> SafeSubscriber)) {
    <span class="hljs-regexp">//</span> assign to `<span class="javascript">observer</span>` so we <span class="hljs-keyword">return</span> the protected version
    subscriber = <span class="hljs-keyword">new</span> SafeSubscriber&lt;T&gt;(subscriber);
}</code></pre>

<p>它会把我们传递的subscriber转成SafeSubscriber，SafeSubcriber源码如下：</p>



<pre class="prettyprint"><code class=" hljs scala">public <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SafeSubscriber</span>&lt;<span class="hljs-title">T</span>&gt; <span class="hljs-keyword">extends</span> <span class="hljs-title">Subscriber</span>&lt;<span class="hljs-title">T</span>&gt; {</span>

    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Subscriber&lt;? <span class="hljs-keyword">super</span> T&gt; actual;

    boolean done = <span class="hljs-keyword">false</span>;

    public SafeSubscriber(Subscriber&lt;? <span class="hljs-keyword">super</span> T&gt; actual) {
        <span class="hljs-keyword">super</span>(actual);
        <span class="hljs-keyword">this</span>.actual = actual;
    }

    <span class="hljs-javadoc">/**
     * Notifies the Subscriber that the {<span class="hljs-javadoctag">@code</span> Observable} has finished sending push-based notifications.
     * &lt;p&gt;
     * The {<span class="hljs-javadoctag">@code</span> Observable} will not call this method if it calls {<span class="hljs-javadoctag">@link</span> #onError}.
     */</span>
    <span class="hljs-annotation">@Override</span>
    public void onCompleted() {
        <span class="hljs-keyword">if</span> (!done) {
            done = <span class="hljs-keyword">true</span>;
            <span class="hljs-keyword">try</span> {
                actual.onCompleted();
            } <span class="hljs-keyword">catch</span> (Throwable e) {
                <span class="hljs-comment">// we handle here instead of another method so we don't add stacks to the frame</span>
                <span class="hljs-comment">// which can prevent it from being able to handle StackOverflow</span>
                Exceptions.throwIfFatal(e);
                RxJavaPluginUtils.handleException(e);
                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> OnCompletedFailedException(e.getMessage(), e);
            } <span class="hljs-keyword">finally</span> {
                <span class="hljs-keyword">try</span> {
                    <span class="hljs-comment">// Similarly to onError if failure occurs in unsubscribe then Rx contract is broken</span>
                    <span class="hljs-comment">// and we throw an UnsubscribeFailureException.</span>
                    unsubscribe();
                } <span class="hljs-keyword">catch</span> (Throwable e) {
                    RxJavaPluginUtils.handleException(e);
                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> UnsubscribeFailedException(e.getMessage(), e);
                }
            }
        }
    }

    <span class="hljs-javadoc">/**
     * Notifies the Subscriber that the {<span class="hljs-javadoctag">@code</span> Observable} has experienced an error condition.
     * &lt;p&gt;
     * If the {<span class="hljs-javadoctag">@code</span> Observable} calls this method, it will not thereafter call {<span class="hljs-javadoctag">@link</span> #onNext} or
     * {<span class="hljs-javadoctag">@link</span> #onCompleted}.
     * 
     * <span class="hljs-javadoctag">@param</span> e
     *          the exception encountered by the Observable
     */</span>
    <span class="hljs-annotation">@Override</span>
    public void onError(Throwable e) {
        <span class="hljs-comment">// we handle here instead of another method so we don't add stacks to the frame</span>
        <span class="hljs-comment">// which can prevent it from being able to handle StackOverflow</span>
        Exceptions.throwIfFatal(e);
        <span class="hljs-keyword">if</span> (!done) {
            done = <span class="hljs-keyword">true</span>;
            _onError(e);
        }
    }

    <span class="hljs-javadoc">/**
     * Provides the Subscriber with a new item to observe.
     * &lt;p&gt;
     * The {<span class="hljs-javadoctag">@code</span> Observable} may call this method 0 or more times.
     * &lt;p&gt;
     * The {<span class="hljs-javadoctag">@code</span> Observable} will not call this method again after it calls either {<span class="hljs-javadoctag">@link</span> #onCompleted} or
     * {<span class="hljs-javadoctag">@link</span> #onError}.
     * 
     * <span class="hljs-javadoctag">@param</span> args
     *          the item emitted by the Observable
     */</span>
    <span class="hljs-annotation">@Override</span>
    public void onNext(T args) {
        <span class="hljs-keyword">try</span> {
            <span class="hljs-keyword">if</span> (!done) {
                actual.onNext(args);
            }
        } <span class="hljs-keyword">catch</span> (Throwable e) {
            <span class="hljs-comment">// we handle here instead of another method so we don't add stacks to the frame</span>
            <span class="hljs-comment">// which can prevent it from being able to handle StackOverflow</span>
            Exceptions.throwOrReport(e, <span class="hljs-keyword">this</span>);
        }
    }

    <span class="hljs-javadoc">/**
     * The logic for {<span class="hljs-javadoctag">@code</span> onError} without the {<span class="hljs-javadoctag">@code</span> isFinished} check so it can be called from within
     * {<span class="hljs-javadoctag">@code</span> onCompleted}.
     * 
     * <span class="hljs-javadoctag">@see</span> &lt;a href="https://github.com/ReactiveX/RxJava/issues/630"&gt;the report of this bug&lt;/a&gt;
     */</span>
    <span class="hljs-keyword">protected</span> void _onError(Throwable e) {
        RxJavaPluginUtils.handleException(e);
        <span class="hljs-keyword">try</span> {
            actual.onError(e);
        } <span class="hljs-keyword">catch</span> (Throwable e2) {
            <span class="hljs-keyword">if</span> (e2 instanceof OnErrorNotImplementedException) {
                <span class="hljs-comment">/*
                 * onError isn't implemented so throw
                 * 
                 * https://github.com/ReactiveX/RxJava/issues/198
                 * 
                 * Rx Design Guidelines 5.2
                 * 
                 * "when calling the Subscribe method that only has an onNext argument, the OnError behavior
                 * will be to rethrow the exception on the thread that the message comes out from the observable
                 * sequence. The OnCompleted behavior in this case is to do nothing."
                 */</span>
                <span class="hljs-keyword">try</span> {
                    unsubscribe();
                } <span class="hljs-keyword">catch</span> (Throwable unsubscribeException) {
                    RxJavaPluginUtils.handleException(unsubscribeException);
                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> RuntimeException(<span class="hljs-string">"Observer.onError not implemented and error while unsubscribing."</span>, <span class="hljs-keyword">new</span> CompositeException(Arrays.asList(e, unsubscribeException)));
                }
                <span class="hljs-keyword">throw</span> (OnErrorNotImplementedException) e2;
            } <span class="hljs-keyword">else</span> {
                <span class="hljs-comment">/*
                 * throw since the Rx contract is broken if onError failed
                 * 
                 * https://github.com/ReactiveX/RxJava/issues/198
                 */</span>
                RxJavaPluginUtils.handleException(e2);
                <span class="hljs-keyword">try</span> {
                    unsubscribe();
                } <span class="hljs-keyword">catch</span> (Throwable unsubscribeException) {
                    RxJavaPluginUtils.handleException(unsubscribeException);
                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> OnErrorFailedException(<span class="hljs-string">"Error occurred when trying to propagate error to Observer.onError and during unsubscription."</span>, <span class="hljs-keyword">new</span> CompositeException(Arrays.asList(e, e2, unsubscribeException)));
                }

                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> OnErrorFailedException(<span class="hljs-string">"Error occurred when trying to propagate error to Observer.onError"</span>, <span class="hljs-keyword">new</span> CompositeException(Arrays.asList(e, e2)));
            }
        }
        <span class="hljs-comment">// if we did not throw above we will unsubscribe here, if onError failed then unsubscribe happens in the catch</span>
        <span class="hljs-keyword">try</span> {
            unsubscribe();
        } <span class="hljs-keyword">catch</span> (RuntimeException unsubscribeException) {
            RxJavaPluginUtils.handleException(unsubscribeException);
            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> OnErrorFailedException(unsubscribeException);
        }
    }

    <span class="hljs-javadoc">/**
     * Returns the {<span class="hljs-javadoctag">@link</span> Subscriber} underlying this {<span class="hljs-javadoctag">@code</span> SafeSubscriber}.
     *
     * <span class="hljs-javadoctag">@return</span> the {<span class="hljs-javadoctag">@link</span> Subscriber} that was used to create this {<span class="hljs-javadoctag">@code</span> SafeSubscriber}
     */</span>
    public Subscriber&lt;? <span class="hljs-keyword">super</span> T&gt; getActual() {
        <span class="hljs-keyword">return</span> actual;
    }
}
</code></pre>

<p>从源码中不能发现：</p>



<pre class="prettyprint"><code class=" hljs cs"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCompleted</span>() {
    <span class="hljs-keyword">if</span> (!done) {
        done = <span class="hljs-keyword">true</span>;
        <span class="hljs-keyword">try</span> {
            actual.onCompleted();
        } <span class="hljs-keyword">catch</span> (Throwable e) {
            <span class="hljs-comment">// we handle here instead of another method so we don't add stacks to the frame</span>
            <span class="hljs-comment">// which can prevent it from being able to handle StackOverflow</span>
            Exceptions.throwIfFatal(e);
            <span class="hljs-comment">// handle errors if the onCompleted implementation fails, not just if the Observable fails</span>
            _onError(e);
        } <span class="hljs-keyword">finally</span> {
            <span class="hljs-comment">// auto-unsubscribe</span>
            unsubscribe();
        }
    }
}</code></pre>

<p>原来它在finally里自动取消了订阅!!</p>

<p>同样，在出现error时，也会自动取消订阅。</p>

<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">_onError</span>(Throwable e) {
        RxJavaPluginUtils.handleException(e);
        <span class="hljs-keyword">try</span> {
            actual.onError(e);
        } <span class="hljs-keyword">catch</span> (Throwable e2) {
            <span class="hljs-keyword">if</span> (e2 <span class="hljs-keyword">instanceof</span> OnErrorNotImplementedException) {
                <span class="hljs-comment">/*
                 * onError isn't implemented so throw
                 * 
                 * https://github.com/ReactiveX/RxJava/issues/198
                 * 
                 * Rx Design Guidelines 5.2
                 * 
                 * "when calling the Subscribe method that only has an onNext argument, the OnError behavior
                 * will be to rethrow the exception on the thread that the message comes out from the observable
                 * sequence. The OnCompleted behavior in this case is to do nothing."
                 */</span>
                <span class="hljs-keyword">try</span> {
                    unsubscribe();
                } <span class="hljs-keyword">catch</span> (Throwable unsubscribeException) {
                    RxJavaPluginUtils.handleException(unsubscribeException);
                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> RuntimeException(<span class="hljs-string">"Observer.onError not implemented and error while unsubscribing."</span>, <span class="hljs-keyword">new</span> CompositeException(Arrays.asList(e, unsubscribeException)));
                }
                <span class="hljs-keyword">throw</span> (OnErrorNotImplementedException) e2;
            } <span class="hljs-keyword">else</span> {
                <span class="hljs-comment">/*
                 * throw since the Rx contract is broken if onError failed
                 * 
                 * https://github.com/ReactiveX/RxJava/issues/198
                 */</span>
                RxJavaPluginUtils.handleException(e2);
                <span class="hljs-keyword">try</span> {
                    unsubscribe();
                } <span class="hljs-keyword">catch</span> (Throwable unsubscribeException) {
                    RxJavaPluginUtils.handleException(unsubscribeException);
                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> OnErrorFailedException(<span class="hljs-string">"Error occurred when trying to propagate error to Observer.onError and during unsubscription."</span>, <span class="hljs-keyword">new</span> CompositeException(Arrays.asList(e, e2, unsubscribeException)));
                }

                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> OnErrorFailedException(<span class="hljs-string">"Error occurred when trying to propagate error to Observer.onError"</span>, <span class="hljs-keyword">new</span> CompositeException(Arrays.asList(e, e2)));
            }
        }
        <span class="hljs-comment">// if we did not throw above we will unsubscribe here, if onError failed then unsubscribe happens in the catch</span>
        <span class="hljs-keyword">try</span> {
            unsubscribe();
        } <span class="hljs-keyword">catch</span> (RuntimeException unsubscribeException) {
            RxJavaPluginUtils.handleException(unsubscribeException);
            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> OnErrorFailedException(unsubscribeException);
        }
    }</code></pre>

<p>本文参考了<a href="http://www.jianshu.com/p/c26f96c0ab81">http://www.jianshu.com/p/c26f96c0ab81</a></p>

<p>困扰我了好久的问题终于解决了，呜呼！</p>

<p>可以结合下面文章来看： <br>
<a href="http://blog.csdn.net/jdsjlzx/article/details/51534504">http://blog.csdn.net/jdsjlzx/article/details/51534504</a></p>
            <div>
                作者：jdsjlzx 发表于2016/5/30 23:09:21 <a href="http://blog.csdn.net/jdsjlzx/article/details/51542003">原文链接</a>
            </div>
            <div>
            阅读：1001 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51542003#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[转]Android端 WebP图片压缩与传输的一点探索]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51541808</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51541808</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/30 22:42:17</pubDate>
        <description><![CDATA[
            <h2 id="简介">简介 </h2>

<p>直到4g时代，流量依然是宝贵的东西。而移动网络传输中，最占流量的一种载体：图片，成为了我们移动开发者不得不关注的一个问题。  <br>
我们关注的问题，无非是图片体积和质量如何达到一个比较和谐的平衡，希望得到质量不错的图片同时体积还不能太大。  <br>
走在时代前列的谷歌给出了一个不错的答案——WebP。  <br>
WebP是一种图片文件格式，在相同的压缩指标下，webp的有损压缩能比jpg小 25-34%。而在我自己的测试里，有时候能小50%。</p>



<h2 id="大企业背书">大企业背书 </h2>

<p>WebP在2010年发布第一个版本，到现在已经6年了，谷歌旗下的各种网站G+、以及非常有代表性的YouTube，他的视频文件格式WebM就是基于WebP构造的。  <br>
据说腾讯、淘宝、美团也有部分应用。</p>

<h2 id="android-端-jpg-转换-webp">Android 端 JPG 转换 WebP</h2>

<p>RxJava线程转换:</p>

<pre class="prettyprint"><code class=" hljs avrasm">String[] imgs = new String[]{<span class="hljs-string">"1.jpg"</span>, <span class="hljs-string">"2.jpg"</span>, <span class="hljs-string">"3.jpg"</span>, <span class="hljs-string">"4.jpg"</span>, <span class="hljs-string">"5.jpg"</span>}<span class="hljs-comment">;</span>
    String path = Environment<span class="hljs-preprocessor">.getExternalStorageDirectory</span>()<span class="hljs-preprocessor">.getAbsolutePath</span>() + <span class="hljs-string">"/Pictures/test/"</span><span class="hljs-comment">;</span>
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super<span class="hljs-preprocessor">.onCreate</span>(savedInstanceState)<span class="hljs-comment">;</span>
        setContentView(R<span class="hljs-preprocessor">.layout</span><span class="hljs-preprocessor">.activity</span>_main)<span class="hljs-comment">;</span>
//      test = Api<span class="hljs-preprocessor">.getBuilder</span>()<span class="hljs-preprocessor">.create</span>(Test<span class="hljs-preprocessor">.class</span>)<span class="hljs-comment">;</span>
        String[] permissions = {Manifest<span class="hljs-preprocessor">.permission</span><span class="hljs-preprocessor">.WRITE</span>_EXTERNAL_STORAGE
                , Manifest<span class="hljs-preprocessor">.permission</span><span class="hljs-preprocessor">.READ</span>_PHONE_STATE
                , Manifest<span class="hljs-preprocessor">.permission</span><span class="hljs-preprocessor">.CAMERA</span>}<span class="hljs-comment">;</span>
        if (Build<span class="hljs-preprocessor">.VERSION</span><span class="hljs-preprocessor">.SDK</span>_INT &gt;= Build<span class="hljs-preprocessor">.VERSION</span>_CODES<span class="hljs-preprocessor">.M</span>) {
            requestPermissions(permissions, <span class="hljs-number">0</span>)<span class="hljs-comment">;</span>
        }
        compress()<span class="hljs-comment">;</span>
    }
    private void compress() {
        Observable<span class="hljs-preprocessor">.from</span>(imgs)
                <span class="hljs-preprocessor">.subscribeOn</span>(Schedulers<span class="hljs-preprocessor">.io</span>())
                <span class="hljs-preprocessor">.doOnNext</span>(new Action1&lt;String&gt;() {
                    @Override
                    public void <span class="hljs-keyword">call</span>(String imgName) {
                        compress(imgName)<span class="hljs-comment">;</span>
                    }
                })
                <span class="hljs-preprocessor">.subscribe</span>()<span class="hljs-comment">;</span>
    }
    private void compress(String imgName) {
        try {
            File file = new File(path, imgName)<span class="hljs-comment">;</span>
            Log<span class="hljs-preprocessor">.i</span>(<span class="hljs-string">"compress"</span>, <span class="hljs-string">"jpg start"</span>)<span class="hljs-comment">;</span>
            byte[] bytes = BitmapUtil<span class="hljs-preprocessor">.compressBitmapToBytes</span>(file<span class="hljs-preprocessor">.getPath</span>(), <span class="hljs-number">600</span>, <span class="hljs-number">0</span>, <span class="hljs-number">60</span>, Bitmap<span class="hljs-preprocessor">.CompressFormat</span><span class="hljs-preprocessor">.JPEG</span>)<span class="hljs-comment">;</span>
            File jpg = new File(path, imgName + <span class="hljs-string">"compress.jpg"</span>)<span class="hljs-comment">;</span>
            FileUtils<span class="hljs-preprocessor">.writeByteArrayToFile</span>(jpg, bytes)<span class="hljs-comment">;</span>
            Log<span class="hljs-preprocessor">.i</span>(<span class="hljs-string">"compress"</span>, <span class="hljs-string">"jpg finish"</span>)<span class="hljs-comment">;</span>
            Log<span class="hljs-preprocessor">.i</span>(<span class="hljs-string">"compress"</span>, <span class="hljs-string">"----------------------------------------------------"</span>)<span class="hljs-comment">;</span>
            Log<span class="hljs-preprocessor">.i</span>(<span class="hljs-string">"compress"</span>, <span class="hljs-string">"webp start"</span>)<span class="hljs-comment">;</span>
            byte[] bytes1 = BitmapUtil<span class="hljs-preprocessor">.compressBitmapToBytes</span>(file<span class="hljs-preprocessor">.getPath</span>(), <span class="hljs-number">600</span>, <span class="hljs-number">0</span>, <span class="hljs-number">60</span>, Bitmap<span class="hljs-preprocessor">.CompressFormat</span><span class="hljs-preprocessor">.WEBP</span>)<span class="hljs-comment">;//分别是图片路径，宽度高度，质量，和图片类型，重点在这里。</span>
            File webp = new File(path, imgName + <span class="hljs-string">"compress.webp"</span>)<span class="hljs-comment">;</span>
            FileUtils<span class="hljs-preprocessor">.writeByteArrayToFile</span>(webp, bytes1)<span class="hljs-comment">;</span>
            Log<span class="hljs-preprocessor">.i</span>(<span class="hljs-string">"compress"</span>, <span class="hljs-string">"webp finish"</span>)<span class="hljs-comment">;</span>
        } catch (IOException e) {
            e<span class="hljs-preprocessor">.printStackTrace</span>()<span class="hljs-comment">;</span>
        }
    }</code></pre>

<p>我的测试机器也是Oneplus 1 ，CM13，所以需要获取相应的权限。  <br>
利用RxJava来做线程操作，在io线程里做了耗时操作。</p>

<pre class="prettyprint"><code class=" hljs cs"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">byte</span>[] <span class="hljs-title">compressBitmapToBytes</span>(String filePath, <span class="hljs-keyword">int</span> reqWidth, <span class="hljs-keyword">int</span> reqHeight, <span class="hljs-keyword">int</span> quality, Bitmap.CompressFormat format) {
        Bitmap bitmap = getSmallBitmap(filePath, reqWidth, reqHeight);
        ByteArrayOutputStream baos = <span class="hljs-keyword">new</span> ByteArrayOutputStream();
        bitmap.compress(format, quality, baos);
        <span class="hljs-keyword">byte</span>[] bytes = baos.toByteArray();
        bitmap.recycle();
        Log.i(TAG, <span class="hljs-string">"Bitmap compressed success, size: "</span> + bytes.length);
        <span class="hljs-keyword">return</span> bytes;
    }


    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Bitmap <span class="hljs-title">getSmallBitmap</span>(String filePath, <span class="hljs-keyword">int</span> reqWidth, <span class="hljs-keyword">int</span> reqHeight) {
        BitmapFactory.Options options = <span class="hljs-keyword">new</span> BitmapFactory.Options();
        options.inJustDecodeBounds = <span class="hljs-keyword">true</span>;
        BitmapFactory.decodeFile(filePath, options);
        options.inSampleSize = calculateInSampleSize(options, reqWidth, reqHeight);
        options.inJustDecodeBounds = <span class="hljs-keyword">false</span>;
<span class="hljs-comment">//      options.inPreferQualityOverSpeed = true;</span>
        <span class="hljs-keyword">return</span> BitmapFactory.decodeFile(filePath, options);
    }   

    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">calculateInSampleSize</span>(BitmapFactory.Options options, <span class="hljs-keyword">int</span> reqWidth, <span class="hljs-keyword">int</span> reqHeight) {
        <span class="hljs-keyword">int</span> h = options.outHeight;
        <span class="hljs-keyword">int</span> w = options.outWidth;
        <span class="hljs-keyword">int</span> inSampleSize = <span class="hljs-number">0</span>;
        <span class="hljs-keyword">if</span> (h &gt; reqHeight || w &gt; reqWidth) {
            <span class="hljs-keyword">float</span> ratioW = (<span class="hljs-keyword">float</span>) w / reqWidth;
            <span class="hljs-keyword">float</span> ratioH = (<span class="hljs-keyword">float</span>) h / reqHeight;
            inSampleSize = (<span class="hljs-keyword">int</span>) Math.min(ratioH, ratioW);
        }
        inSampleSize = Math.max(<span class="hljs-number">1</span>, inSampleSize);
        <span class="hljs-keyword">return</span> inSampleSize;
    } </code></pre>

<p>根据输入的宽高值计算分辨率的缩小比例，再根据输入的压缩质量数值，压缩图片，获得压缩后bitmap，然后再将其保存成本地文件。  <br>
这是非常常见的图片压缩手段。</p>



<h2 id="webp对比">WebP对比 </h2>

<p>我用我日常生活里拍下的照片来做简单的对比测试，不是特别严谨，仅供简单的参考。  <br>
拍照设备是刷了CM13的 一加 1 。拍照场景都是日常生活特别常见的。</p>

<p>以下是原图预览，就不一个个放出来了，太大。 <br>
<img src="http://img.blog.csdn.net/20160525152704917" alt="这里写图片描述" title=""></p>

<p>缩小分辨率，同时压缩质量</p>

<table>
<thead>
<tr>
  <th>文件名</th>
  <th align="center">照片原图</th>
  <th align="right">压缩后jpg</th>
  <th align="right">压缩后webp</th>
  <th>压缩比</th>
</tr>
</thead>
<tbody><tr>
  <td>1.jpg</td>
  <td align="center">5760 kb</td>
  <td align="right">98  kb</td>
  <td align="right">74 kb</td>
  <td>24.49%</td>
</tr>
<tr>
  <td>2.jpg</td>
  <td align="center">4534 kb</td>
  <td align="right">64  kb</td>
  <td align="right">35 kb</td>
  <td>45.31%</td>
</tr>
<tr>
  <td>3.jpg</td>
  <td align="center">4751 kb</td>
  <td align="right">93  kb</td>
  <td align="right">68 kb</td>
  <td>26.88%</td>
</tr>
<tr>
  <td>4.jpg</td>
  <td align="center">7002 kb</td>
  <td align="right">121 kb</td>
  <td align="right">95 kb</td>
  <td>21.49%</td>
</tr>
<tr>
  <td>5.jpg</td>
  <td align="center">5493 kb</td>
  <td align="right">111 kb</td>
  <td align="right">91 kb</td>
  <td>18.02%</td>
</tr>
</tbody></table>

<p><br>
平均压缩比是：27.24% <br>
按照原图大小，不缩小分辨率，仅压缩质量。</p>

<table>
<thead>
<tr>
  <th>文件名</th>
  <th align="center">照片原图</th>
  <th align="right">压缩后jpg</th>
  <th align="right">压缩后webp</th>
  <th>压缩比</th>
</tr>
</thead>
<tbody><tr>
  <td>3.jpg</td>
  <td align="center">4751 kb</td>
  <td align="right">796 kb</td>
  <td align="right">426 kb</td>
  <td>46.48%</td>
</tr>
</tbody></table>

<p><br>
至此，我们就非常方便的使用了webp来对图片进行更加极致的压缩，兼顾了图片体积和质量。</p>

<p>睁大眼睛对比一下有啥区别，不缩小分辨率，仅压缩质量，这个3.jpg可是有46.48%的压缩比噢。  <br>
这个场景是晚上在灯光充足的室内吃饭拍的。 <br>
<img src="http://img.blog.csdn.net/20160525155847973" alt="这里写图片描述" title=""></p>

<p><img src="http://img.blog.csdn.net/20160525155750612" alt="这里写图片描述" title=""></p>



<h2 id="用gzip再压缩">用Gzip再压缩</h2>

<p>刚刚是针对本地图片的压缩，接下来，我们需要将图片传输到服务器。这个过程依然有优化空间，就是利用Gzip。</p>

<p>Gzip的作用对象是整个请求体，具体来说是对请求体中的内容进行可逆的压缩，类似pc上zip的那种。</p>

<p>Gzip压缩的请求体，需要加入相应的header: 「Content-Encoding:gzip」。  <br>
这事情Retrofit会帮你做好。</p>

<p>后台服务器接收到在此类型的请求，就会对请求体解压，因此需要后端的支持。</p>

<p>另外要注意的是，Gzip针对比较大的请求体压缩效果不错，尤其是未经过压缩的纯文本类型。</p>

<p>如果请求本来就很小，那么就不要使用gzip压缩了，压缩包自己的元数据可能比你的请求体还大，得不偿失。你可以自己测试一下，我估计zip和gzip的压缩字典比较类似，可以直接在pc上做测试。</p>

<h2 id="retrofit对请求gzip压缩">Retrofit对请求Gzip压缩</h2>

<p>网络请求方面，我项目里使用Retrofit (OKHttp) + RxJava。</p>

<p>Retrofit的Gzip压缩，本质上是通过OKHttp的拦截器来完成的。  <br>
0拦截请求  <br>
1加入header  <br>
2压缩请求  <br>
3发送出去</p>

<p>搞定，方便。</p>

<p><a href="https://github.com/square/okhttp/wiki/Interceptors">https://github.com/square/okhttp/wiki/Interceptors</a></p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-javadoc">/** This interceptor compresses the HTTP request body. Many webservers can't handle this! */</span>
<span class="hljs-keyword">final</span> class GzipRequestInterceptor implements Interceptor {
  <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">public</span> Response <span class="hljs-title">intercept</span>(Interceptor.Chain chain) <span class="hljs-keyword">throws</span> IOException {
    Request originalRequest = chain.request();
    <span class="hljs-keyword">if</span> (originalRequest.body() == <span class="hljs-keyword">null</span> || originalRequest.header(<span class="hljs-string">"Content-Encoding"</span>) != <span class="hljs-keyword">null</span>) {
      <span class="hljs-keyword">return</span> chain.proceed(originalRequest);
    }
    Request compressedRequest = originalRequest.newBuilder()
        .header(<span class="hljs-string">"Content-Encoding"</span>, <span class="hljs-string">"gzip"</span>)
        .method(originalRequest.method(), gzip(originalRequest.body()))
        .build();
    <span class="hljs-keyword">return</span> chain.proceed(compressedRequest);
  }
  <span class="hljs-keyword">private</span> RequestBody <span class="hljs-title">gzip</span>(<span class="hljs-keyword">final</span> RequestBody body) {
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> RequestBody() {
      <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">public</span> MediaType <span class="hljs-title">contentType</span>() {
        <span class="hljs-keyword">return</span> body.contentType();
      }
      <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">long</span> <span class="hljs-title">contentLength</span>() {
        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>; <span class="hljs-comment">// We don't know the compressed length in advance!</span>
      }
      <span class="hljs-annotation">@Override</span> <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">writeTo</span>(BufferedSink sink) <span class="hljs-keyword">throws</span> IOException {
        BufferedSink gzipSink = Okio.buffer(<span class="hljs-keyword">new</span> GzipSink(sink));
        body.writeTo(gzipSink);
        gzipSink.close();
      }
    };
  }
}</code></pre>



<h2 id="请求体抓包对比">请求体抓包对比</h2>

<p>我会用Fiddler4 监测整个请求过程，以方便我们得知实际传输了多大的数据。</p>

<p>上传的具体代码就不发了，这个不是重点。  <br>
我把请求抓包之后，把request这个保存下来。  <br>
<img src="http://img.blog.csdn.net/20160525154827976" alt="这里写图片描述" title=""></p>

<p>这是同时上传两张图片的大小</p>

<table>
<thead>
<tr>
  <th>文件名</th>
  <th align="center">请求体大小</th>
</tr>
</thead>
<tbody><tr>
  <td>WebP+Gzip</td>
  <td align="center">169kb</td>
</tr>
<tr>
  <td>WebP</td>
  <td align="center">222kb</td>
</tr>
</tbody></table>

<p><br>
用Gzip压缩 比不加Gzip 又小 23% ! jpg我就不发了，可以按照前面的估算一下~</p>

<p>WebP比Jpg小27%，然后gzip+webp又比单纯的webp小23%，节省下来的流量多可观啊！</p>



<h2 id="最后">最后 </h2>

<p>WebP默认只支持Android 4.0以上，现在项目最低支持的版本是16，所以没什么问题。如果你的项目最低要支持到2.0，好像也有第三方支持，但是我建议你抓产品出去打一顿。</p>

<p>根据下面的参考链接的数据以及我本人测试数据来看，WebP不仅大大的节省了用户的流量，同时还可以加速图片传输速度。就照片传输的角度来看，是非常有利的。 </p>

<p>相关参考:</p>

<p><a href="http://isux.tencent.com/introduction-of-webp.html">http://isux.tencent.com/introduction-of-webp.html</a>（产品经理看这个）</p>

<p><a href="http://blog.csdn.net/GeekLei/article/details/41147479">http://blog.csdn.net/GeekLei/article/details/41147479</a> （后台需要看这个）</p>

<p><a href="https://developers.google.com/speed/webp/">https://developers.google.com/speed/webp/</a>  <br>
<a href="http://www.infoq.com/cn/articles/sdk-optimazation?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term">http://www.infoq.com/cn/articles/sdk-optimazation?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term</a> （他们表示IOS也没有用上）  <br>
<a href="http://blog.csdn.net/mingchunhu/article/details/8155742">http://blog.csdn.net/mingchunhu/article/details/8155742</a></p>

<p>（Android全部都要看）</p>

<p>转自：<a href="http://blog.csdn.net/a405942873/article/details/51498833">http://blog.csdn.net/a405942873/article/details/51498833</a></p>
            <div>
                作者：jdsjlzx 发表于2016/5/30 22:42:17 <a href="http://blog.csdn.net/jdsjlzx/article/details/51541808">原文链接</a>
            </div>
            <div>
            阅读：574 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51541808#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[转]Retrofit + RxJava 业务状态重定向及分离]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51541625</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51541625</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/30 22:15:33</pubDate>
        <description><![CDATA[
            <h2 id="问题">问题</h2>

<p>本文主要介绍了在 Retrofit + RxJava 环境下更优雅的解决了以下两个问题：</p>

<ol>
<li>将接口业务上的失败重定向到 onError(Throwable e) 输出；</li>
<li>业务成功时分离出 data 数据由 onNext(T t) 输出；</li>
</ol>



<h2 id="场景">场景</h2>

<p>一般来说，一个友好的接口返回 json 应该是这样的：</p>



<pre class="prettyprint"><code class=" hljs json">{
    "<span class="hljs-attribute">code</span>":<span class="hljs-value"><span class="hljs-number">200</span></span>,
    "<span class="hljs-attribute">codeMsg</span>":<span class="hljs-value"><span class="hljs-string">"查询成功!"</span></span>,
    "<span class="hljs-attribute">data</span>":<span class="hljs-value">{
        "<span class="hljs-attribute">city</span>":<span class="hljs-value"><span class="hljs-string">"北京"</span></span>,
        "<span class="hljs-attribute">temperature</span>":<span class="hljs-value"><span class="hljs-string">"8℃~20℃"</span></span>,
        "<span class="hljs-attribute">weather</span>":<span class="hljs-value"><span class="hljs-string">"晴转霾"</span>
    </span>}
</span>}</code></pre>

<p>或者这样的：</p>



<pre class="prettyprint"><code class=" hljs json">{
    "<span class="hljs-attribute">code</span>":<span class="hljs-value"><span class="hljs-number">200</span></span>,
    "<span class="hljs-attribute">codeMsg</span>":<span class="hljs-value"><span class="hljs-string">"查询成功!"</span></span>,
    "<span class="hljs-attribute">data</span>":<span class="hljs-value">[
        {
            "<span class="hljs-attribute">city</span>":<span class="hljs-value"><span class="hljs-string">"北京"</span></span>,
            "<span class="hljs-attribute">temperature</span>":<span class="hljs-value"><span class="hljs-string">"8℃~20℃"</span></span>,
            "<span class="hljs-attribute">weather</span>":<span class="hljs-value"><span class="hljs-string">"晴转霾"</span>
        </span>},
        {
            "<span class="hljs-attribute">city</span>":<span class="hljs-value"><span class="hljs-string">"南京"</span></span>,
            "<span class="hljs-attribute">temperature</span>":<span class="hljs-value"><span class="hljs-string">"12℃~21℃"</span></span>,
            "<span class="hljs-attribute">weather</span>":<span class="hljs-value"><span class="hljs-string">"晴"</span>
        </span>}
    ]
</span>}</code></pre>

<p>如果约定好，code == 200，表示业务成功。其他表示业务失败，codeMsg 更详细地描述业务状态信息。例如：</p>



<pre class="prettyprint"><code class=" hljs json">{
    "<span class="hljs-attribute">code</span>":<span class="hljs-value"><span class="hljs-string">"400"</span></span>,
    "<span class="hljs-attribute">codeMsg</span>":<span class="hljs-value"><span class="hljs-string">"未知的城市"</span>
</span>}</code></pre>



<h2 id="实现">实现</h2>

<p>要知道，利用 Retrofit + Gson (或者其他 Converter ) 可以将返回的 Json 的转换为对象的，那么可以定义以下返回通用类 Model ：</p>



<pre class="prettyprint"><code class=" hljs cs"><span class="hljs-comment">/**
 * CommonResponse - 通用类
 * 泛型 T 可以为 List&lt;object&gt; , 也可以是 Object , 也可以为空。
 */</span>
<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> CommonResponse&lt;T&gt; {
    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> code;
    <span class="hljs-keyword">private</span> String codeMsg;
    <span class="hljs-keyword">private</span> T data;

    <span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getCode</span>() {
        <span class="hljs-keyword">return</span> code;
    }

    <span class="hljs-keyword">public</span> String <span class="hljs-title">getCodeMsg</span>() {
        <span class="hljs-keyword">return</span> codeMsg;
    }

    <span class="hljs-keyword">public</span> T <span class="hljs-title">getData</span>() {
        <span class="hljs-keyword">return</span> data;
    }

    <span class="hljs-comment">/**
     * 根据 code 码判断业务状态
     * code == 2xx，表示业务成功。其他表示业务失败，codeMsg 进一步描述业务状态。
     */</span>
    <span class="hljs-keyword">public</span> boolean <span class="hljs-title">isSuccess</span>() {
        <span class="hljs-keyword">return</span> code / <span class="hljs-number">100</span> == <span class="hljs-number">2</span>;
    }
}</code></pre>

<p>为了解决上面提出的两个问题，这里可以使用 RxJava 中的 lift() 来自定义操作：</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-javadoc">/**
 * 这里为了示例，简化了Retrofit Service、Api 创建的过程。 
 */</span>
JKApi mApi = JKService.createJKService();
mApi.getWeatherForCity(<span class="hljs-string">"北京"</span>).lift(<span class="hljs-keyword">new</span> Observable.Operator&lt;T, CommonResponse&lt;T&gt;&gt;() {
            <span class="hljs-annotation">@Override</span>
            <span class="hljs-keyword">public</span> Subscriber&lt;? <span class="hljs-keyword">super</span> CommonResponse&lt;T&gt;&gt; <span class="hljs-title">call</span>(<span class="hljs-keyword">final</span> Subscriber&lt;? <span class="hljs-keyword">super</span> T&gt; subscriber) {
                <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Subscriber&lt;CommonResponse&lt;T&gt;&gt;() {
                    <span class="hljs-annotation">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCompleted</span>() {
                        subscriber.onCompleted();
                    }

                    <span class="hljs-annotation">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onError</span>(Throwable e) {
                        subscriber.onError(e);
                    }

                    <span class="hljs-annotation">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onNext</span>(CommonResponse&lt;T&gt; tCommonResponse) {

                        <span class="hljs-keyword">if</span> (tCommonResponse.isSuccess())
                            subscriber.onNext(tCommonResponse.getData());
                        <span class="hljs-keyword">else</span>
                            subscriber.onError(<span class="hljs-keyword">new</span> Throwable(tCommonResponse.getCodeMsg()));
                    }
                };
            }
        });</code></pre>

<p>上面的 lift() 操作想要对每一个符合这样标准的接口都通用，并且顺便对线程指定进行封装。可以 implements Observable.Transformer</p>

<pre class="prettyprint"><code class=" hljs axapta"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RedirectResponseTransformer</span>&lt;<span class="hljs-title">T</span>&gt; <span class="hljs-inheritance"><span class="hljs-keyword">implements</span></span> <span class="hljs-title">Observable</span>.<span class="hljs-title">Transformer</span>&lt;<span class="hljs-title">CommonResponse</span>&lt;<span class="hljs-title">T</span>&gt;, <span class="hljs-title">T</span>&gt; {</span>
    @Override
    <span class="hljs-keyword">public</span> Observable&lt;T&gt; call(
        Observable&lt;CommonResponse&lt;T&gt;&gt; CommonResponseObservable) {
        <span class="hljs-keyword">return</span> CommonResponseObservable.subscribeOn(Schedulers.io())
                                       .observeOn(AndroidSchedulers.mainThread())
                                       .lift(<span class="hljs-keyword">new</span> Observable.Operator&lt;T, CommonResponse&lt;T&gt;&gt;() {
                @Override
                <span class="hljs-keyword">public</span> Subscriber&lt;?<span class="hljs-keyword">super</span> CommonResponse&lt;T&gt;&gt; call(
                    <span class="hljs-keyword">final</span> Subscriber&lt;?<span class="hljs-keyword">super</span> T&gt; subscriber) {
                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> Subscriber&lt;CommonResponse&lt;T&gt;&gt;() {
                            @Override
                            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> onCompleted() {
                                subscriber.onCompleted();
                            }

                            @Override
                            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> onError(Throwable e) {
                                subscriber.onError(e);
                            }

                            @Override
                            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> onNext(
                                CommonResponse&lt;T&gt; tCommonResponse) {
                                <span class="hljs-keyword">if</span> (tCommonResponse.isSuccess()) {
                                    subscriber.onNext(tCommonResponse.getData());
                                } <span class="hljs-keyword">else</span> {
                                    subscriber.onError(<span class="hljs-keyword">new</span> Throwable(
                                            tCommonResponse.getCodeMsg()));
                                }
                            }
                        };
                }
            });
    }
}</code></pre>

<p>最后我们使用 Observable.compose(Transformer transformer) 方法将以上的封装加入到 Rx-Chain 中去：</p>

<pre class="prettyprint"><code class=" hljs java"><span class="hljs-javadoc">/**
 * 这里为了示例，简化了Retrofit Service、Api 创建的过程。 
 */</span>
JKApi mApi = JKService.createJKService();
mApi.getWeatherForCity(<span class="hljs-string">"北京"</span>)
    .compose(<span class="hljs-keyword">new</span> RedirectResponseTransformer&lt;WeatherModel&gt;())
    .subscribe(<span class="hljs-keyword">new</span> Subscriber&lt;WeatherModel&gt;() {
                    <span class="hljs-annotation">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCompleted</span>() {

                    }

                    <span class="hljs-annotation">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onError</span>(Throwable e) {
                        showShortToast(e.toString());
                    }

                    <span class="hljs-annotation">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onNext</span>(WeatherModel weatherModel) {
                        <span class="hljs-comment">// do something like refresh ui</span>

                    }
                });</code></pre>

<p>到这里，针对上文提出的两个问题已经做了封装。其实利用 RxJava 强大的运算符还可以做很多封装。例如：针对特定异常显示Toast、onComplete() 回调中 dismiss loadingDialog 等。</p>

<p>来自：<a href="http://jkyeo.com/2016/03/01/Retrofit-RxJava-">http://jkyeo.com/2016/03/01/Retrofit-RxJava-</a>业务状态重定向及分离/</p>
            <div>
                作者：jdsjlzx 发表于2016/5/30 22:15:33 <a href="http://blog.csdn.net/jdsjlzx/article/details/51541625">原文链接</a>
            </div>
            <div>
            阅读：850 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51541625#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]RxJava   Observer与Subscriber的关系]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51534504</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51534504</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/29 22:37:57</pubDate>
        <description><![CDATA[
            <p>在说Observer与Subscriber的关系之前，我们下重温下相关概念。</p>



<h2 id="rxjava-的观察者模式">RxJava 的观察者模式</h2>

<p>RxJava 有四个基本概念：Observable (可观察者，即被观察者)、 Observer (观察者)、 subscribe (订阅)、事件。Observable 和 Observer 通过 subscribe() 方法实现订阅关系，从而 Observable 可以在需要的时候发出事件来通知 Observer。</p>

<p>与传统观察者模式不同， RxJava 的事件回调方法除了普通事件 onNext() （相当于 onClick() / onEvent()）之外，还定义了两个特殊的事件：onCompleted() 和 onError()。</p>

<ul>
<li>onCompleted(): 事件队列完结。RxJava 不仅把每个事件单独处理，还会把它们看做一个队列。RxJava 规定，当不会再有新的 onNext() 发出时，需要触发 onCompleted() 方法作为标志。</li>
<li>onError(): 事件队列异常。在事件处理过程中出异常时，onError() 会被触发，同时队列自动终止，不允许再有事件发出。</li>
<li>在一个正确运行的事件序列中, onCompleted() 和 onError() 有且只有一个，并且是事件序列中的最后一个。需要注意的是，onCompleted() 和 onError() 二者也是互斥的，即在队列中调用了其中一个，就不应该再调用另一个。</li>
</ul>

<p>RxJava 的观察者模式大致如下图： <br>
<img src="http://ww3.sinaimg.cn/mw1024/52eb2279jw1f2rx46dspqj20gn04qaad.jpg" alt="这里写图片描述" title=""></p>



<h2 id="rxjava的实现">RxJava的实现</h2>

<p>基于以上的概念， RxJava 的基本实现主要有三点：</p>

<p><strong>1) 创建 Observer</strong></p>

<p>Observer 即观察者，它决定事件触发的时候将有怎样的行为。 RxJava 中的 Observer 接口的实现方式：</p>



<pre class="prettyprint"><code class=" hljs java">Observer&lt;Apps&gt; observer = <span class="hljs-keyword">new</span> Observer&lt;Apps&gt;() {
        <span class="hljs-annotation">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCompleted</span>() {
            listView.onRefreshComplete();
        }

        <span class="hljs-annotation">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onError</span>(Throwable e) {
            listView.onRefreshComplete();
        }

        <span class="hljs-annotation">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onNext</span>(Apps appsList) {
            listView.onRefreshComplete();
            appLists.addAll(appsList.apps);
            adapter.notifyDataSetChanged();
        }
    };</code></pre>

<p>除了 Observer 接口之外，RxJava 还内置了一个实现了 Observer 的抽象类：Subscriber。 Subscriber 对 Observer 接口进行了一些扩展，但他们的基本使用方式是完全一样的：</p>



<pre class="prettyprint"><code class=" hljs java">Subscriber subscriber = <span class="hljs-keyword">new</span> Subscriber&lt;Apps&gt;() {
        <span class="hljs-annotation">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCompleted</span>() {
            listView.onRefreshComplete();
        }

        <span class="hljs-annotation">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onError</span>(Throwable e) {
            listView.onRefreshComplete();
        }

        <span class="hljs-annotation">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onNext</span>(Apps appsList) {
            listView.onRefreshComplete();
            appLists.addAll(appsList.apps);
            adapter.notifyDataSetChanged();
        }
    };</code></pre>

<p>不仅基本使用方式一样，实质上，在 RxJava 的 subscribe 过程中，Observer 也总是会先被转换成一个 Subscriber 再使用。所以如果你只想使用基本功能，选择 Observer 和 Subscriber 是完全一样的。</p>



<h2 id="subscriber是observer的实现类">Subscriber是Observer的实现类</h2>



<pre class="prettyprint"><code class=" hljs php"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Subscriber</span>&lt;<span class="hljs-title">T</span>&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title">Observer</span>&lt;<span class="hljs-title">T</span>&gt;, <span class="hljs-title">Subscription</span> </span></code></pre>

<p>而onStart()方法是Subscriber中的一个方法。它也属于回调级别的。</p>

<p>subscribe(Subscriber)方法中有如下代码：</p>



<pre class="prettyprint"><code class=" hljs coffeescript"><span class="hljs-regexp">//</span> <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> already wrapped   包裹一层
        <span class="hljs-keyword">if</span> (!(subscriber <span class="hljs-keyword">instanceof</span> SafeSubscriber)) {
            <span class="hljs-regexp">//</span> assign to `<span class="javascript">observer</span>` so we <span class="hljs-keyword">return</span> the protected version
            subscriber = <span class="hljs-keyword">new</span> SafeSubscriber&lt;T&gt;(subscriber);
        }</code></pre>

<p>他将subscriber包装起来，这个具体什么意思有待研究，继续下看。</p>



<pre class="prettyprint"><code class=" hljs avrasm">hook<span class="hljs-preprocessor">.onSubscribeStart</span>(observable, observable<span class="hljs-preprocessor">.onSubscribe</span>)<span class="hljs-preprocessor">.call</span>(subscriber)<span class="hljs-comment">;</span>
   return hook<span class="hljs-preprocessor">.onSubscribeReturn</span>(subscriber)<span class="hljs-comment">;</span></code></pre>

<p>hook是什么呢？</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> RxJavaObservableExecutionHook hook = RxJavaPlugins.getInstance().getObservableExecutionHook();</code></pre>

<p>RxJavaObservableExecutionHook.java源码：</p>



<pre class="prettyprint"><code class=" hljs coffeescript">/**
 * Copyright <span class="hljs-number">2014</span> Netflix, Inc.
 * 
 * Licensed under the Apache License, Version <span class="hljs-number">2.0</span> (the <span class="hljs-string">"License"</span>);
 * you may <span class="hljs-keyword">not</span> use <span class="hljs-keyword">this</span> file except <span class="hljs-keyword">in</span> compliance <span class="hljs-reserved">with</span> the License.
 * You may obtain a copy <span class="hljs-keyword">of</span> the License at
 * 
 * <span class="hljs-attribute">http</span>:<span class="hljs-regexp">//</span>www.apache.org/licenses/LICENSE-<span class="hljs-number">2.0</span>
 * 
 * Unless required <span class="hljs-keyword">by</span> applicable law <span class="hljs-keyword">or</span> agreed to <span class="hljs-keyword">in</span> writing, software
 * distributed under the License <span class="hljs-keyword">is</span> distributed <span class="hljs-literal">on</span> an <span class="hljs-string">"AS IS"</span> BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express <span class="hljs-keyword">or</span> implied.
 * See the License <span class="hljs-keyword">for</span> the specific language governing permissions <span class="hljs-keyword">and</span>
 * limitations under the License.
 */
package rx.plugins;

<span class="hljs-reserved">import</span> rx.Observable;
<span class="hljs-reserved">import</span> rx.Observable.OnSubscribe;
<span class="hljs-reserved">import</span> rx.Observable.Operator;
<span class="hljs-reserved">import</span> rx.Subscriber;
<span class="hljs-reserved">import</span> rx.Subscription;
<span class="hljs-reserved">import</span> rx.functions.Func1;

/**
 * Abstract ExecutionHook <span class="hljs-reserved">with</span> invocations at different lifecycle points <span class="hljs-keyword">of</span> {<span class="hljs-property">@link</span> Observable} execution <span class="hljs-reserved">with</span> a
 * <span class="hljs-reserved">default</span> <span class="hljs-literal">no</span>-op implementation.
 * &lt;p&gt;
 * See {<span class="hljs-property">@link</span> RxJavaPlugins} <span class="hljs-keyword">or</span> the RxJava GitHub Wiki <span class="hljs-keyword">for</span> information <span class="hljs-literal">on</span> configuring <span class="hljs-attribute">plugins</span>:
 * &lt;a href=<span class="hljs-string">"https://github.com/ReactiveX/RxJava/wiki/Plugins"</span>&gt;<span class="hljs-attribute">https</span>:<span class="hljs-regexp">//gi</span>thub.com/ReactiveX/RxJava/wiki/Plugins&lt;/a&gt;.
 * &lt;p&gt;
 * &lt;b&gt;Note <span class="hljs-literal">on</span> thread-safety <span class="hljs-keyword">and</span> <span class="hljs-attribute">performance</span>:&lt;/b&gt;
 * &lt;p&gt;
 * A single implementation <span class="hljs-keyword">of</span> <span class="hljs-keyword">this</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">will</span> <span class="hljs-title">be</span> <span class="hljs-title">used</span> <span class="hljs-title">globally</span> <span class="hljs-title">so</span> <span class="hljs-title">methods</span> <span class="hljs-title">on</span> <span class="hljs-title">this</span> <span class="hljs-title">class</span> <span class="hljs-title">will</span> <span class="hljs-title">be</span> <span class="hljs-title">invoked</span></span>
 * concurrently from multiple threads so all functionality must be thread-safe.
 * &lt;p&gt;
 * Methods are also invoked synchronously <span class="hljs-keyword">and</span> will add to execution time <span class="hljs-keyword">of</span> the observable so all behavior
 * should be fast. If anything time-consuming <span class="hljs-keyword">is</span> to be done it should be spawned asynchronously onto separate
 * worker threads.
 * 
 */
public abstract <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RxJavaObservableExecutionHook</span> {</span>
    /**
     * Invoked during the construction <span class="hljs-keyword">by</span> {<span class="hljs-property">@link</span> Observable<span class="hljs-comment">#create(OnSubscribe)}</span>
     * &lt;p&gt;
     * This can be used to decorate <span class="hljs-keyword">or</span> replace the &lt;code&gt;onSubscribe&lt;/code&gt; <span class="hljs-reserved">function</span> <span class="hljs-keyword">or</span> just perform extra
     * logging, metrics <span class="hljs-keyword">and</span> other such things <span class="hljs-keyword">and</span> pass-thru the <span class="hljs-reserved">function</span>.
     * 
     * <span class="hljs-property">@param</span> f
     *            original {<span class="hljs-property">@link</span> OnSubscribe}&lt;{<span class="hljs-property">@code</span> T}&gt; to be executed
     * <span class="hljs-property">@return</span> {<span class="hljs-property">@link</span> OnSubscribe}&lt;{<span class="hljs-property">@code</span> T}&gt; <span class="hljs-reserved">function</span> that can be modified, decorated, replaced <span class="hljs-keyword">or</span> just
     *         returned as a pass-thru
     */
    public &lt;T&gt; OnSubscribe&lt;T&gt; onCreate(OnSubscribe&lt;T&gt; f) {
        <span class="hljs-keyword">return</span> f;
    }

    /**
     * Invoked before {<span class="hljs-property">@link</span> Observable<span class="hljs-comment">#subscribe(rx.Subscriber)} is about to be executed.</span>
     * &lt;p&gt;
     * This can be used to decorate <span class="hljs-keyword">or</span> replace the &lt;code&gt;onSubscribe&lt;/code&gt; <span class="hljs-reserved">function</span> <span class="hljs-keyword">or</span> just perform extra
     * logging, metrics <span class="hljs-keyword">and</span> other such things <span class="hljs-keyword">and</span> pass-thru the <span class="hljs-reserved">function</span>.
     * 
     * <span class="hljs-property">@param</span> onSubscribe
     *            original {<span class="hljs-property">@link</span> OnSubscribe}&lt;{<span class="hljs-property">@code</span> T}&gt; to be executed
     * <span class="hljs-property">@return</span> {<span class="hljs-property">@link</span> OnSubscribe}&lt;{<span class="hljs-property">@code</span> T}&gt; <span class="hljs-reserved">function</span> that can be modified, decorated, replaced <span class="hljs-keyword">or</span> just
     *         returned as a pass-thru
     */
    public &lt;T&gt; OnSubscribe&lt;T&gt; onSubscribeStart(Observable&lt;? extends T&gt; observableInstance, final OnSubscribe&lt;T&gt; onSubscribe) {
        <span class="hljs-regexp">//</span> pass-thru <span class="hljs-keyword">by</span> <span class="hljs-reserved">default</span>
        <span class="hljs-keyword">return</span> onSubscribe;
    }

    /**
     * Invoked after successful execution <span class="hljs-keyword">of</span> {<span class="hljs-property">@link</span> Observable<span class="hljs-comment">#subscribe(rx.Subscriber)} with returned</span>
     * {<span class="hljs-property">@link</span> Subscription}.
     * &lt;p&gt;
     * This can be used to decorate <span class="hljs-keyword">or</span> replace the {<span class="hljs-property">@link</span> Subscription} instance <span class="hljs-keyword">or</span> just perform extra logging,
     * metrics <span class="hljs-keyword">and</span> other such things <span class="hljs-keyword">and</span> pass-thru the subscription.
     * 
     * <span class="hljs-property">@param</span> subscription
     *            original {<span class="hljs-property">@link</span> Subscription}
     * <span class="hljs-property">@return</span> {<span class="hljs-property">@link</span> Subscription} subscription that can be modified, decorated, replaced <span class="hljs-keyword">or</span> just returned as a
     *         pass-thru
     */
    public &lt;T&gt; Subscription onSubscribeReturn(Subscription subscription) {
        <span class="hljs-regexp">//</span> pass-thru <span class="hljs-keyword">by</span> <span class="hljs-reserved">default</span>
        <span class="hljs-keyword">return</span> subscription;
    }

    /**
     * Invoked after failed execution <span class="hljs-keyword">of</span> {<span class="hljs-property">@link</span> Observable<span class="hljs-comment">#subscribe(Subscriber)} with thrown Throwable.</span>
     * &lt;p&gt;
     * This <span class="hljs-keyword">is</span> &lt;em&gt;<span class="hljs-keyword">not</span>&lt;/em&gt; errors emitted via {<span class="hljs-property">@link</span> Subscriber<span class="hljs-comment">#onError(Throwable)} but exceptions thrown when</span>
     * attempting to subscribe to a {<span class="hljs-property">@link</span> Func1}&lt;{<span class="hljs-property">@link</span> Subscriber}{<span class="hljs-property">@code</span> &lt;T&gt;}, {<span class="hljs-property">@link</span> Subscription}&gt;.
     * 
     * <span class="hljs-property">@param</span> e
     *            Throwable thrown <span class="hljs-keyword">by</span> {<span class="hljs-property">@link</span> Observable<span class="hljs-comment">#subscribe(Subscriber)}</span>
     * <span class="hljs-property">@return</span> Throwable that can be decorated, replaced <span class="hljs-keyword">or</span> just returned as a pass-thru
     */
    public &lt;T&gt; Throwable onSubscribeError(Throwable e) {
        <span class="hljs-regexp">//</span> pass-thru <span class="hljs-keyword">by</span> <span class="hljs-reserved">default</span>
        <span class="hljs-keyword">return</span> e;
    }

    /**
     * Invoked just as the operator functions <span class="hljs-keyword">is</span> called to bind two operations together into a <span class="hljs-keyword">new</span>
     * {<span class="hljs-property">@link</span> Observable} <span class="hljs-keyword">and</span> the <span class="hljs-keyword">return</span> value <span class="hljs-keyword">is</span> used as the lifted <span class="hljs-reserved">function</span>
     * &lt;p&gt;
     * This can be used to decorate <span class="hljs-keyword">or</span> replace the {<span class="hljs-property">@link</span> Operator} instance <span class="hljs-keyword">or</span> just perform extra
     * logging, metrics <span class="hljs-keyword">and</span> other such things <span class="hljs-keyword">and</span> pass-thru the onSubscribe.
     * 
     * <span class="hljs-property">@param</span> lift
     *            original {<span class="hljs-property">@link</span> Operator}{<span class="hljs-property">@code</span> &lt;R, T&gt;}
     * <span class="hljs-property">@return</span> {<span class="hljs-property">@link</span> Operator}{<span class="hljs-property">@code</span> &lt;R, T&gt;} <span class="hljs-reserved">function</span> that can be modified, decorated, replaced <span class="hljs-keyword">or</span> just
     *         returned as a pass-thru
     */
    public &lt;T, R&gt; Operator&lt;? extends R, ? <span class="hljs-keyword">super</span> T&gt; onLift(final Operator&lt;? extends R, ? <span class="hljs-keyword">super</span> T&gt; lift) {
        <span class="hljs-keyword">return</span> lift;
    }
}</code></pre>

<p>RxJavaObservableExecutionHook类的作用很特殊，似乎没有什么太大的作用，传进去什么（类型）参数，返回什么（类型）参数。</p>

<p>如下代码所示：</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> &lt;T&gt; OnSubscribe&lt;T&gt; <span class="hljs-title">onCreate</span>(OnSubscribe&lt;T&gt; f) {
        <span class="hljs-keyword">return</span> f;
    }

<span class="hljs-keyword">public</span> &lt;T&gt; OnSubscribe&lt;T&gt; <span class="hljs-title">onSubscribeStart</span>(Observable&lt;? extends T&gt; observableInstance, <span class="hljs-keyword">final</span> OnSubscribe&lt;T&gt; onSubscribe) {
        <span class="hljs-comment">// pass-thru by default</span>
        <span class="hljs-keyword">return</span> onSubscribe;
    }</code></pre>

<p>至于最后关键的返回结果：</p>



<pre class="prettyprint"><code class=" hljs cs"><span class="hljs-keyword">public</span> &lt;T&gt; Subscription <span class="hljs-title">onSubscribeReturn</span>(Subscription subscription) {
        <span class="hljs-comment">// pass-thru by default</span>
        <span class="hljs-keyword">return</span> subscription;
    }</code></pre>

<p>说白了，就是返回订阅的Observer对象。</p>

<hr>



<h2 id="observer与subscriber的区别">Observer与Subscriber的区别</h2>

<p>它们的区别对于使用者来说主要有两点：</p>

<blockquote>
  <ol>
  <li>onStart(): 这是 Subscriber 增加的方法。它会在 subscribe 刚开始，而事件还未发送之前被调用，可以用于做一些准备工作，例如数据的清零或重置。这是一个可选方法，默认情况下它的实现为空。需要注意的是，如果对准备工作的线程有要求（例如弹出一个显示进度的对话框，这必须在主线程执行）， onStart() 就不适用了，因为它总是在 subscribe 所发生的线程被调用，而不能指定线程。要在指定的线程来做准备工作，可以使用 doOnSubscribe() 方法，具体可以在后面的文中看到。</li>
  <li>unsubscribe(): 这是 Subscriber 所实现的另一个接口 Subscription 的方法，用于取消订阅。在这个方法被调用后，Subscriber 将不再接收事件。一般在这个方法调用前，可以使用 isUnsubscribed() 先判断一下状态。 unsubscribe() 这个方法很重要，因为在 subscribe() 之后， Observable 会持有 Subscriber 的引用，这个引用如果不能及时被释放，将有内存泄露的风险。所以最好保持一个原则：要在不再使用的时候尽快在合适的地方（例如 onPause() onStop() 等方法中）调用 unsubscribe() 来解除引用关系，以避免内存泄露的发生。</li>
  </ol>
</blockquote>

<p><strong>2) 创建 Observable</strong></p>

<p>Observable 即被观察者，它决定什么时候触发事件以及触发怎样的事件。 RxJava 使用 create() 方法来创建一个 Observable ，并为它定义事件触发规则：</p>



<pre class="prettyprint"><code class=" hljs java">Observable observable = Observable.create(<span class="hljs-keyword">new</span> Observable.OnSubscribe&lt;String&gt;() {
    <span class="hljs-annotation">@Override</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>(Subscriber&lt;? <span class="hljs-keyword">super</span> String&gt; subscriber) {
        subscriber.onNext(<span class="hljs-string">"Hello"</span>);
        subscriber.onNext(<span class="hljs-string">"John"</span>);
        subscriber.onCompleted();
    }
});</code></pre>

<p>可以看到，这里传入了一个 OnSubscribe 对象作为参数。OnSubscribe 会被存储在返回的 Observable 对象中，它的作用相当于一个计划表，当 Observable 被订阅的时候，OnSubscribe 的 call() 方法会自动被调用，事件序列就会依照设定依次触发（对于上面的代码，就是观察者Subscriber 将会被调用两次 onNext() 和一次 onCompleted()）。这样，由被观察者调用了观察者的回调方法，就实现了由被观察者向观察者的事件传递，即观察者模式。</p>

<p>create() 是 RxJava 最基本的创造事件序列的操作符。基于这个操作符， RxJava 还提供了一些方法用来快捷创建事件队列，详见RxJava操作符系列文章：<a href="http://blog.csdn.net/jdsjlzx/article/details/51485861">http://blog.csdn.net/jdsjlzx/article/details/51485861</a></p>

<p><strong>3) Subscribe (订阅)</strong> <br>
创建了 Observable 和 Observer 之后，再用 subscribe() 方法将它们联结起来，整条链子就可以工作了。代码形式很简单：</p>



<pre class="prettyprint"><code class=" hljs avrasm">observable<span class="hljs-preprocessor">.subscribe</span>(observer)<span class="hljs-comment">;</span>
// 或者：
observable<span class="hljs-preprocessor">.subscribe</span>(subscriber)<span class="hljs-comment">;</span></code></pre>

<p>Observable.subscribe(Subscriber) 的内部实现是这样的（仅核心代码）：</p>



<pre class="prettyprint"><code class=" hljs coffeescript">public final Subscription subscribe(Subscriber&lt;? <span class="hljs-keyword">super</span> T&gt; subscriber) {
        <span class="hljs-keyword">return</span> Observable.subscribe(subscriber, <span class="hljs-keyword">this</span>);
    }

    private static &lt;T&gt; Subscription subscribe(Subscriber&lt;? <span class="hljs-keyword">super</span> T&gt; subscriber, Observable&lt;T&gt; observable) {
     <span class="hljs-regexp">//</span> validate <span class="hljs-keyword">and</span> proceed
        <span class="hljs-keyword">if</span> (subscriber == <span class="hljs-literal">null</span>) {
            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalArgumentException(<span class="hljs-string">"observer can not be null"</span>);
        }
        <span class="hljs-keyword">if</span> (observable.onSubscribe == <span class="hljs-literal">null</span>) {
            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalStateException(<span class="hljs-string">"onSubscribe function can not be null."</span>);
            /*
             * the subscribe <span class="hljs-reserved">function</span> can also be overridden but generally that<span class="hljs-string">'s not the appropriate approach
             * so I won'</span>t mention that <span class="hljs-keyword">in</span> the exception
             */
        }

        <span class="hljs-regexp">//</span> <span class="hljs-keyword">new</span> Subscriber so onStart it
        subscriber.onStart();

        /*
         * See <span class="hljs-attribute">https</span>:<span class="hljs-regexp">//gi</span>thub.com/ReactiveX/RxJava/issues/<span class="hljs-number">216</span> <span class="hljs-keyword">for</span> discussion <span class="hljs-literal">on</span> <span class="hljs-string">"Guideline 6.4: Protect calls
         * to user code from within an Observer"</span>
         */
        <span class="hljs-regexp">//</span> <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> already wrapped
        <span class="hljs-keyword">if</span> (!(subscriber <span class="hljs-keyword">instanceof</span> SafeSubscriber)) {
            <span class="hljs-regexp">//</span> assign to `<span class="javascript">observer</span>` so we <span class="hljs-keyword">return</span> the protected version
            subscriber = <span class="hljs-keyword">new</span> SafeSubscriber&lt;T&gt;(subscriber);
        }

        <span class="hljs-regexp">//</span> The code below <span class="hljs-keyword">is</span> exactly the same an unsafeSubscribe but <span class="hljs-keyword">not</span> used because it would 
        <span class="hljs-regexp">//</span> add a significant depth to already huge call stacks.
        <span class="hljs-keyword">try</span> {
            <span class="hljs-regexp">//</span> allow the hook to intercept <span class="hljs-keyword">and</span>/<span class="hljs-keyword">or</span> decorate
            hook.onSubscribeStart(observable, observable.onSubscribe).call(subscriber);
            <span class="hljs-keyword">return</span> hook.onSubscribeReturn(subscriber);
        } <span class="hljs-keyword">catch</span> (Throwable e) {
            <span class="hljs-regexp">//</span> special handling <span class="hljs-keyword">for</span> certain Throwable/Error/Exception types
            Exceptions.throwIfFatal(e);
            <span class="hljs-regexp">//</span> <span class="hljs-keyword">if</span> an unhandled error occurs executing the onSubscribe we will propagate it
            <span class="hljs-keyword">try</span> {
                subscriber.onError(hook.onSubscribeError(e));
            } <span class="hljs-keyword">catch</span> (Throwable e2) {
                Exceptions.throwIfFatal(e2);
                <span class="hljs-regexp">//</span> <span class="hljs-keyword">if</span> <span class="hljs-keyword">this</span> happens it means the onError itself failed (perhaps an invalid <span class="hljs-reserved">function</span> implementation)
                <span class="hljs-regexp">//</span> so we are unable to propagate the error correctly <span class="hljs-keyword">and</span> will just <span class="hljs-keyword">throw</span>
                RuntimeException r = <span class="hljs-keyword">new</span> RuntimeException(<span class="hljs-string">"Error occurred attempting to subscribe ["</span> + e.getMessage() + <span class="hljs-string">"] and then again while trying to pass to onError."</span>, e2);
                <span class="hljs-regexp">//</span> TODO could the hook be the cause <span class="hljs-keyword">of</span> the error <span class="hljs-keyword">in</span> the <span class="hljs-literal">on</span> error handling.
                hook.onSubscribeError(r);
                <span class="hljs-regexp">//</span> TODO why aren<span class="hljs-string">'t we throwing the hook'</span>s <span class="hljs-keyword">return</span> value.
                <span class="hljs-keyword">throw</span> r;
            }
            <span class="hljs-keyword">return</span> Subscriptions.unsubscribed();
        }
    }</code></pre>

<p>可以看到，subscriber() 做了3件事：</p>

<ol>
<li>调用 Subscriber.onStart() 。这个方法在前面已经介绍过，是一个可选的准备方法。</li>
<li>调用 Observable 中的 OnSubscribe.call(Subscriber) 。在这里，事件发送的逻辑开始运行。从这也可以看出，在 RxJava 中， Observable 并不是在创建的时候就立即开始发送事件，而是在它被订阅的时候，即当 subscribe() 方法执行的时候。</li>
<li>将传入的 Subscriber 作为 Subscription 返回。这是为了方便 unsubscribe().</li>
</ol>

<p>整个过程中对象间的关系如下图： <br>
<img src="http://ww4.sinaimg.cn/mw1024/52eb2279jw1f2rx489robj20lk0a8my2.jpg" alt="这里写图片描述" title=""></p>

<p>除了 subscribe(Observer) 和 subscribe(Subscriber) ，subscribe() 还支持不完整定义的回调，RxJava 会自动根据定义创建出 Subscriber 。形式如下：</p>



<pre class="prettyprint"><code class=" hljs java">Action1&lt;String&gt; onNextAction = <span class="hljs-keyword">new</span> Action1&lt;String&gt;() {
    <span class="hljs-comment">// onNext()</span>
    <span class="hljs-annotation">@Override</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>(String s) {
        Log.d(tag, s);
    }
};
Action1&lt;Throwable&gt; onErrorAction = <span class="hljs-keyword">new</span> Action1&lt;Throwable&gt;() {
    <span class="hljs-comment">// onError()</span>
    <span class="hljs-annotation">@Override</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>(Throwable throwable) {
        <span class="hljs-comment">// Error handling</span>
    }
};
Action0 onCompletedAction = <span class="hljs-keyword">new</span> Action0() {
    <span class="hljs-comment">// onCompleted()</span>
    <span class="hljs-annotation">@Override</span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>() {
        Log.d(tag, <span class="hljs-string">"completed"</span>);
    }
};

<span class="hljs-comment">// 自动创建 Subscriber ，并使用 onNextAction 来定义 onNext()</span>
observable.subscribe(onNextAction);
<span class="hljs-comment">// 自动创建 Subscriber ，并使用 onNextAction 和 onErrorAction 来定义 onNext() 和 onError()</span>
observable.subscribe(onNextAction, onErrorAction);
<span class="hljs-comment">// 自动创建 Subscriber ，并使用 onNextAction、 onErrorAction 和 onCompletedAction 来定义 onNext()、 onError() 和 onCompleted()</span>
observable.subscribe(onNextAction, onErrorAction, onCompletedAction);</code></pre>

<blockquote>
  <p>注：正如前面所提到的，Observer 和 Subscriber 具有相同的角色，而且 Observer 在 subscribe() 过程中最终会被转换成 Subscriber 对象，因此，从某种程度上来说用 Subscriber 来代替 Observer ，这样会更加严谨。</p>
</blockquote>

<p>根据目前的经验来看，Observer与Subscriber的主要区别在于onNext方法执行完毕后是否取消了订阅。</p>

<p>首先，我们分别定义mSubscriber 和 mObserver 。</p>

<p>如下代码：</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">protected</span> Subscriber&lt;D&gt; mSubscriber = <span class="hljs-keyword">new</span> Subscriber&lt;D&gt;() {
        <span class="hljs-annotation">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCompleted</span>() {
            executeOnLoadFinish();
        }

        <span class="hljs-annotation">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onError</span>(Throwable e) {
            TLog.error(<span class="hljs-string">"onError "</span> + e.toString());
            executeOnLoadDataError(<span class="hljs-keyword">null</span>);
        }

        <span class="hljs-annotation">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onNext</span>(D d) {
            TLog.log(<span class="hljs-string">"onNext "</span> );
            List&lt;T&gt; list = d;
            TLog.log(<span class="hljs-string">"entity "</span> + list.size());
            executeOnLoadDataSuccess(list);

            TLog.log(<span class="hljs-string">"onSuccess totalPage "</span> + totalPage);
        }
    };
    <span class="hljs-keyword">protected</span> Observer&lt;D&gt; mObserver = <span class="hljs-keyword">new</span> Observer&lt;D&gt;() {
        <span class="hljs-annotation">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCompleted</span>() {
            executeOnLoadFinish();
        }

        <span class="hljs-annotation">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onError</span>(Throwable e) {
            TLog.error(<span class="hljs-string">"onError "</span> + e.toString());
            executeOnLoadDataError(<span class="hljs-keyword">null</span>);
        }

        <span class="hljs-annotation">@Override</span>
        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onNext</span>(D d) {
            TLog.log(<span class="hljs-string">"onNext "</span> );
            List&lt;T&gt; list = d;
            TLog.log(<span class="hljs-string">"entity "</span> + list.size());
            executeOnLoadDataSuccess(list);

            TLog.log(<span class="hljs-string">"onSuccess totalPage "</span> + totalPage);
        }
    };</code></pre>



<pre class="prettyprint"><code class=" hljs java">observable.subscribeOn(Schedulers.io())
                .map(<span class="hljs-keyword">new</span> Func1&lt;Response&lt;D&gt;,D&gt;() {

                    <span class="hljs-annotation">@Override</span>
                    <span class="hljs-keyword">public</span> D <span class="hljs-title">call</span>(Response&lt;D&gt; response) {
                        <span class="hljs-keyword">if</span>(response == <span class="hljs-keyword">null</span>){
                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ApiException(<span class="hljs-number">100</span>);
                        }
                        totalPage = response.total;
                        <span class="hljs-keyword">return</span> response.result;
                    }
                })
                .observeOn(AndroidSchedulers.mainThread())
                <span class="hljs-comment">//.subscribe(mObserver);</span>
                .subscribe(mSubscriber);</code></pre>

<p>subscribe(mObserver)和subscribe(mSubscriber)执行结果就会有区别：</p>

<ul>
<li>subscribe(mSubscriber)这种订阅方式在第二次请求数据时就不会执行了，原因就是onCompleted后自动取消了订阅 <br>
（详见文章：<a href="http://blog.csdn.net/jdsjlzx/article/details/51542003">http://blog.csdn.net/jdsjlzx/article/details/51542003</a>）；</li>
<li>subscribe(mObserver)则不出现此问题。</li>
</ul>

<p>提醒：个人以为subscribe(mObserver)这个方式更适合分页加载。</p>

<p><strong>请注意，如果你每次都使用subscribe(new Subscriber&lt; T&gt;() {｝）方式实现订阅，就不会出现上面的问题。</strong></p>

<p>如下代码：</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">toSubscribe</span>(Observable&lt;Response&lt;D&gt;&gt; observable) {
        observable.subscribeOn(Schedulers.io())
                .map(<span class="hljs-keyword">new</span> Func1&lt;Response&lt;D&gt;,D&gt;() {

                    <span class="hljs-annotation">@Override</span>
                    <span class="hljs-keyword">public</span> D <span class="hljs-title">call</span>(Response&lt;D&gt; response) {
                        <span class="hljs-keyword">if</span>(response == <span class="hljs-keyword">null</span>){
                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ApiException(<span class="hljs-number">100</span>);
                        }
                        totalPage = response.total;
                        <span class="hljs-keyword">return</span> response.result;
                    }
                })
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(<span class="hljs-keyword">new</span> Subscriber&lt;D&gt;() {
                    <span class="hljs-annotation">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCompleted</span>() {
                        executeOnLoadFinish();
                    }

                    <span class="hljs-annotation">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onError</span>(Throwable e) {
                        TLog.error(<span class="hljs-string">"onError "</span> + e.toString());
                        executeOnLoadDataError(<span class="hljs-keyword">null</span>);
                    }

                    <span class="hljs-annotation">@Override</span>
                    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onNext</span>(D d) {
                        TLog.log(<span class="hljs-string">"onNext "</span> );
                        List&lt;T&gt; list = d;
                        TLog.log(<span class="hljs-string">"entity "</span> + list.size());
                        executeOnLoadDataSuccess(list);

                        TLog.log(<span class="hljs-string">"onSuccess totalPage "</span> + totalPage);
                    }
                });
    }</code></pre>

<p>当然，这个方式实现分页加载也是可以的。至于哪个更好，还需要再验证。</p>

<p>引用：</p>

<blockquote>
  <p>Subscriber是Observer接口的一个抽象实现；推荐使用Subscriber，实际上RxJava在subscibe过程中，会先将Observer转换为一个Subscriber。</p>
</blockquote>
            <div>
                作者：jdsjlzx 发表于2016/5/29 22:37:57 <a href="http://blog.csdn.net/jdsjlzx/article/details/51534504">原文链接</a>
            </div>
            <div>
            阅读：2995 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51534504#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]Android：自定义DialogFragment]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51533347</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51533347</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/29 18:59:12</pubDate>
        <description><![CDATA[
            <h2 id="dialogfragment">DialogFragment</h2>

<p>DialogFragment是在Android3.0的时候被引入的，从其名字可以很直观的看出它是一种基于Fragment的Dialog，可以用来创建对话框，它是用来替代Dialog的。一个新事物的出现是为了解决旧事物存在的问题，那不建议使用的Dialog存在什么问题呢？下面简单的说下。</p>



<h2 id="dialog存在问题">Dialog存在问题</h2>

<ul>
<li>在手机配置发生变化后（比如：旋屏后），变化之前显示的Dialog，变化之后不会显示，更别提Dialog状态的恢复了。</li>
<li>管理自定义的Dialog和系统原生的Dialog麻烦</li>
</ul>



<h2 id="dialogfragment怎么解决dialog存在的问题">DialogFragment怎么解决Dialog存在的问题</h2>

<p>DialogFragment说到底还是一个Fragment，因此它继承了Fragment的所有特性。同理FragmentManager会管理DialogFragment。在手机配置发生变化的时候，FragmentManager可以负责现场的恢复工作。调用DialogFragment的setArguments(bundle)方法进行数据的设置，可以保证DialogFragment的数据也能恢复。</p>

<p>DialogFragment里的onCreateView和onCreateDIalog 2个方法，onCreateView可以用来创建自定义Dialog，onCreateDIalog 可以用Dialog来创建系统原生Dialog。可以在一个类中管理2种不同的dialog。</p>



<h2 id="用dialogfragment替代dialog">用DialogFragment替代Dialog</h2>

<p>既然DialogFragment有这些好处，那我们对项目中的Dialog用DialogFragment来进行替代。</p>

<p>推荐几个文章</p>

<p><a href="http://www.jianshu.com/p/af6499abd5c2">Android：我为何要封装DialogFragment？</a> <br>
git地址：<a href="https://github.com/niuxiaowei/DialogFragmentUse.git">https://github.com/niuxiaowei/DialogFragmentUse.git</a></p>

<p>自定义DialogFragment项目： <br>
<a href="https://github.com/franksunny/WeatherDemo">https://github.com/franksunny/WeatherDemo</a> <br>
<a href="https://github.com/hljwang3874149/ElephantReader">https://github.com/hljwang3874149/ElephantReader</a></p>

<p>DialogFragment虽然好，但是也不完美。</p>
            <div>
                作者：jdsjlzx 发表于2016/5/29 18:59:12 <a href="http://blog.csdn.net/jdsjlzx/article/details/51533347">原文链接</a>
            </div>
            <div>
            阅读：658 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51533347#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]Rxlifecycle使用]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51527542</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51527542</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/29 0:12:23</pubDate>
        <description><![CDATA[
            <p>Rxlifecycle使用非常方便简单,如下：</p>

<p>1.集成 <br>
build.gradle添加</p>



<pre class="prettyprint"><code class=" hljs cs"><span class="hljs-comment">//Rxlifecycle</span>
   compile <span class="hljs-string">'com.trello:rxlifecycle:0.3.1'</span>
   compile <span class="hljs-string">'com.trello:rxlifecycle-components:0.3.1'</span>

   <span class="hljs-comment">//Rxjava</span>
   compile <span class="hljs-string">'io.reactivex:rxjava:1.0.16'</span></code></pre>

<p>Components包中包含RxActivity、RxFragment等等，可以用Rxlifecycle提供的，也可以自定义。</p>

<p>2.Sample解析 <br>
官方sample源码： 两种使用方法：</p>

<p>1.手动设置取消订阅的时机，例子1、例子3</p>

<p>2.绑定生命周期，自动取消订阅，例子2</p>



<pre class="prettyprint"><code class=" hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">RxAppCompatActivity</span> {</span>

<span class="hljs-comment">//Note:Activity需要继承RxAppCompatActivity，fragment需要继承RxFragment，等等</span>
<span class="hljs-comment">//可以使用的组件在components包下面</span>

<span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String TAG = <span class="hljs-string">"RxLifecycle"</span>;

<span class="hljs-annotation">@Override</span>
<span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span>(Bundle savedInstanceState) {
    <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);
    Log.d(TAG, <span class="hljs-string">"onCreate()"</span>);
    setContentView(R.layout.activity_main);

    <span class="hljs-comment">// Specifically bind this until onPause()</span>

    <span class="hljs-comment">//Note:例子1:</span>
    Observable.interval(<span class="hljs-number">1</span>, TimeUnit.SECONDS)
            .doOnUnsubscribe(<span class="hljs-keyword">new</span> Action0() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>() {
                    Log.i(TAG, <span class="hljs-string">"Unsubscribing subscription from onCreate()"</span>);
                }
            })
            <span class="hljs-comment">//Note:手动设置在activity onPause的时候取消订阅</span>
            .compose(<span class="hljs-keyword">this</span>.&lt;Long&gt;bindUntilEvent(ActivityEvent.PAUSE))
            .subscribe(<span class="hljs-keyword">new</span> Action1&lt;Long&gt;() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>(Long num) {
                    Log.i(TAG, <span class="hljs-string">"Started in onCreate(), running until onPause(): "</span> + num);
                }
            });
}

<span class="hljs-annotation">@Override</span>
<span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onStart</span>() {
    <span class="hljs-keyword">super</span>.onStart();
    Log.d(TAG, <span class="hljs-string">"onStart()"</span>);

    <span class="hljs-comment">//Note:例子2:</span>
    <span class="hljs-comment">// Using automatic unsubscription, this should determine that the correct time to</span>
    <span class="hljs-comment">// unsubscribe is onStop (the opposite of onStart).</span>
    Observable.interval(<span class="hljs-number">1</span>, TimeUnit.SECONDS)
            .doOnUnsubscribe(<span class="hljs-keyword">new</span> Action0() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>() {
                    Log.i(TAG, <span class="hljs-string">"Unsubscribing subscription from onStart()"</span>);
                }
            })
            <span class="hljs-comment">//Note:bindToLifecycle的自动取消订阅示例，因为是在onStart的时候调用，所以在onStop的时候自动取消订阅</span>
            .compose(<span class="hljs-keyword">this</span>.&lt;Long&gt;bindToLifecycle())
            .subscribe(<span class="hljs-keyword">new</span> Action1&lt;Long&gt;() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>(Long num) {
                    Log.i(TAG, <span class="hljs-string">"Started in onStart(), running until in onStop(): "</span> + num);
                }
            });
}

<span class="hljs-annotation">@Override</span>
<span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onResume</span>() {
    <span class="hljs-keyword">super</span>.onResume();
    Log.d(TAG, <span class="hljs-string">"onResume()"</span>);

    <span class="hljs-comment">//Note:例子3:</span>
    <span class="hljs-comment">// `this.&lt;Long&gt;` is necessary if you're compiling on JDK7 or below.</span>
    <span class="hljs-comment">// If you're using JDK8+, then you can safely remove it.</span>
    Observable.interval(<span class="hljs-number">1</span>, TimeUnit.SECONDS)
            .doOnUnsubscribe(<span class="hljs-keyword">new</span> Action0() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>() {
                    Log.i(TAG, <span class="hljs-string">"Unsubscribing subscription from onResume()"</span>);
                }
            })
            <span class="hljs-comment">//Note:手动设置在activity onDestroy的时候取消订阅</span>
            .compose(<span class="hljs-keyword">this</span>.&lt;Long&gt;bindUntilEvent(ActivityEvent.DESTROY))
            .subscribe(<span class="hljs-keyword">new</span> Action1&lt;Long&gt;() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>(Long num) {
                    Log.i(TAG, <span class="hljs-string">"Started in onResume(), running until in onDestroy(): "</span> + num);
                }
            });
}
...</code></pre>



<h2 id="注意事项">注意事项</h2>

<p><strong>tip-1</strong> <br>
如下代码：</p>

<pre class="prettyprint"><code class=" hljs java">Observable.just(<span class="hljs-string">"hello world!"</span>)
            .compose(<span class="hljs-keyword">this</span>.&lt;String&gt;bindUntilEvent(ActivityEvent.PAUSE))
            .flatMap(<span class="hljs-keyword">new</span> Func1&lt;String, Observable&lt;Long&gt;&gt;() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> Observable&lt;Long&gt; <span class="hljs-title">call</span>(String s) {
                    <span class="hljs-keyword">return</span> Observable.interval(<span class="hljs-number">1</span>, TimeUnit.SECONDS);
                }
            })

            .subscribe(<span class="hljs-keyword">new</span> Action1&lt;Long&gt;() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>(Long aLong) {
                    Log.i(TAG, <span class="hljs-string">"....oh,oh,no!!..........."</span> + aLong);
                }
            });</code></pre>

<p>activity生命周期paused的时候</p>



<pre class="prettyprint"><code class=" hljs lasso"><span class="hljs-keyword">Log</span><span class="hljs-built_in">.</span>i(<span class="hljs-built_in">TAG</span>, <span class="hljs-string">"....oh,oh,no!!..........."</span> <span class="hljs-subst">+</span> aLong); </code></pre>

<p>还会执行么？？会会…</p>

<p>如果你想全部都不执行：</p>

<pre class="prettyprint"><code class=" hljs java">Observable.just(<span class="hljs-string">"hello world!"</span>)
            .flatMap(<span class="hljs-keyword">new</span> Func1&lt;String, Observable&lt;Long&gt;&gt;() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> Observable&lt;Long&gt; <span class="hljs-title">call</span>(String s) {
                    <span class="hljs-keyword">return</span> Observable.interval(<span class="hljs-number">1</span>, TimeUnit.SECONDS);
                }
            })
            <span class="hljs-comment">//fuck....here</span>
            .compose(<span class="hljs-keyword">this</span>.&lt;Long&gt;bindUntilEvent(ActivityEvent.PAUSE))
            .subscribe(<span class="hljs-keyword">new</span> Action1&lt;Long&gt;() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>(Long aLong) {
                    Log.i(TAG, <span class="hljs-string">"....oh,oh,no!!..........."</span> + aLong);
                }
            });</code></pre>

<p><strong>tip-2</strong></p>



<pre class="prettyprint"><code class=" hljs java"> Observable.interval(<span class="hljs-number">1</span>, TimeUnit.SECONDS)
            .doOnUnsubscribe(<span class="hljs-keyword">new</span> Action0() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>() {
                    Log.i(TAG, <span class="hljs-string">"Unsubscribing subscription ......"</span>);
                }
            })
            .doOnNext(<span class="hljs-keyword">new</span> Action1&lt;Long&gt;() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>(Long aLong) {
                    Log.i(TAG, <span class="hljs-string">"........fuck..........."</span> + aLong);
                }
            })
            .flatMap(<span class="hljs-keyword">new</span> Func1&lt;Long, Observable&lt;String&gt;&gt;() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> Observable&lt;String&gt; <span class="hljs-title">call</span>(Long aLong) {
                    <span class="hljs-keyword">return</span> Observable.just(aLong + <span class="hljs-string">""</span>);
                }
            })
            .compose(<span class="hljs-keyword">this</span>.&lt;String&gt;bindUntilEvent(ActivityEvent.PAUSE))
            .subscribe(<span class="hljs-keyword">new</span> Action1&lt;String&gt;() {
                <span class="hljs-annotation">@Override</span>
                <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">call</span>(String num) {
                    Log.i(TAG, <span class="hljs-string">"..........shit..........."</span> + num);
                }
            });</code></pre>

<p>activity在paused的时候，</p>



<pre class="prettyprint"><code class=" hljs lasso"><span class="hljs-keyword">Log</span><span class="hljs-built_in">.</span>i(<span class="hljs-built_in">TAG</span>, <span class="hljs-string">"........fuck..........."</span> <span class="hljs-subst">+</span> aLong);
<span class="hljs-keyword">Log</span><span class="hljs-built_in">.</span>i(<span class="hljs-built_in">TAG</span>, <span class="hljs-string">"..........shit..........."</span> <span class="hljs-subst">+</span> num);</code></pre>

<p>都不会执行…</p>

<p>而且会unsubscribe</p>
            <div>
                作者：jdsjlzx 发表于2016/5/29 0:12:23 <a href="http://blog.csdn.net/jdsjlzx/article/details/51527542">原文链接</a>
            </div>
            <div>
            阅读：679 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51527542#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[转]使用RxJava来改进用户体验]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51527516</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51527516</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/29 0:04:55</pubDate>
        <description><![CDATA[
            <p cid="c1" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">一个完美的移动世界永远不会失去连接，而服务端也永远不会返回错误。</p><p cid="c71" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">构建一个很棒的app对于用户来说是幸福的事而对于开发者来说则是痛苦的事。用户点击一个按钮就阻塞了所有操作的时代已经过去了，那是要死人的。</p><p cid="c71" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><img src="http://www.jcodecraeer.com/uploads/20151130/1448880277498781.gif" title="1448880277498781.gif" alt="1-kCcW9ytw2jQwYqmvnhGjuw.gif" style="box-sizing: border-box; border: 0px; vertical-align: middle; margin: 0px; padding: 0px; max-width: 100%; height: auto;" /></p><p cid="c73" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">让我们来创建一个更好的文本框搜索功能并关注以下需求</p><p class="runtimead" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; text-align: center; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><iframe width="728" height="90" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" id="aswift_0" name="aswift_0" style="box-sizing: border-box; border-width: 0px; margin: 0px; padding: 0px; left: 0px; position: absolute; top: 0px;"></iframe></p><ul cid="c24" mdtype="list" class=" list-paddingleft-2" style="box-sizing: border-box; border: 0px; margin: 0.8em 0px 0.8em 25px; padding: 0px 0px 0px 30px; list-style: none; color: rgb(51, 51, 51); font-size: 16px; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 25px; text-align: justify; white-space: pre-wrap;"><li style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; list-style: disc;"><p cid="c26" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7;">尽可能少的请求</p></li><li style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; list-style: disc;"><p cid="c28" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 0px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7;">对用户尽可能少的错误信息</p></li></ul><p cid="c75" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">RX 的逻辑相当简单，重点在完善细微的细节上。</p><p cid="c77" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">让我们从简单的逻辑开始：</p><p cid="c80" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">当用户输入内容的时候我们发出了一个网络请求然后获得结果：</p><div style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><div id="highlighter_433218" class="syntaxhighlighter  js" style="box-sizing: border-box; border: 0px; padding: 0px; margin: 1em 0px !important; width: 100% !important; position: relative !important; overflow: auto !important; font-size: 1em !important;"><table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse; border-spacing: 0px; box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: inherit !important;"><tbody style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><tr style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><td class="gutter" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important; color: rgb(175, 175, 175) !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">1</div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">2</div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">3</div></td><td class="code" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important;"><div class="container" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; width: auto !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: relative !important; right: auto !important; top: auto !important; vertical-align: baseline !important; font-size: 1em !important; min-height: inherit !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">RxTextView.textChanges(searchEditText)</code></div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.flatMap(Api::searchItems)</code></div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.subscribe(</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">this</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">::updateList,&nbsp;t-&gt;showError());</code></div></div></td></tr></tbody></table></div></div><h2 style="box-sizing: border-box; border: 0px; margin: 0.5rem 0px; padding: 0px; font-size: 1.2em; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; width: inherit;"><span md-inline="plain" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; min-width: 10px;">减少网络请求</span></h2><p cid="c84" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0.8em; margin-bottom: 0.8em; padding-top: 0px; padding-bottom: 0px; line-height: 25px; color: rgb(51, 51, 51); font-size: 16px; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; width: inherit; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; text-align: justify; white-space: pre-wrap;"><span md-inline="plain" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px;">以上存在两个问题：</span></p><ol cid="c40" mdtype="list" class=" list-paddingleft-2" style="box-sizing: border-box; border: 0px; margin: 0.8em 0px 0.8em 25px; padding: 0px 0px 0px 30px; color: rgb(51, 51, 51); font-size: 16px; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 25px; text-align: justify; white-space: pre-wrap;"><li style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; list-style: decimal;"><p cid="c42" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0.5rem; margin-bottom: 0.5rem; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; width: inherit;"><span md-inline="plain" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; min-width: 10px;">每输入一个字母（对的这很坑）比如：用户快速输入了一个“a”，然后“ab”然后“abc”然后又纠正为“ab”并最终想搜索“abe”。这样你就做了5次网络请求。想象一在网速很慢的时候是个什么情况。</span></p></li><li style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; list-style: decimal;"><p cid="c44" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0.5rem; margin-bottom: 0.5rem; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; width: inherit;"><span md-inline="plain" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; min-width: 10px;">你还面临一个线程赛跑的问题。比如：用户输入了“a”，然后是“ab”。“ab”的网络调用发生在前而”a“的调用发生在后。那样的话updateList() 将根据 “a”的请求结果来执行。</span></p></li></ol><h3 style="box-sizing: border-box; border: 0px; margin: 0.8em 0px; padding: 0px; font-size: 1.1em; color: rgb(51, 51, 51); -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; width: inherit; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 25px; text-align: justify; white-space: pre-wrap;"><span md-inline="plain" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px;">解决:</span></h3><h4 style="box-sizing: border-box; border: 0px; margin: 0.5rem 0px; padding: 0px; font-size: 16px; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; width: inherit;"><span md-inline="plain" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; min-width: 10px;">添加调节行为：</span></h4><p cid="c89" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0.8em; margin-bottom: 0.8em; padding-top: 0px; padding-bottom: 0px; line-height: 25px; color: rgb(51, 51, 51); font-size: 16px; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; width: inherit; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; text-align: justify; white-space: pre-wrap;"><span md-inline="plain" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px;">你需要的是</span><span md-inline="link" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px;"><a target=_blank target="_blank" spellcheck="false" href="http://reactivex.io/documentation/operators/debounce.html" style="box-sizing: border-box; background-color: transparent; color: rgb(65, 131, 196); text-decoration: none; border: 0px; margin: 0px; padding: 0px; -webkit-transition: opacity 0.2s; transition: opacity 0.2s; cursor: pointer;">debounce()</a></span><span md-inline="plain" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px;">&nbsp;。根据我的经验，取值在100–150毫秒效果最好。如果你的服务器需要额外的300毫秒那么你可以在0.5秒之内做UI更新。</span></p><div style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><div id="highlighter_886705" class="syntaxhighlighter  js" style="box-sizing: border-box; border: 0px; padding: 0px; margin: 1em 0px !important; width: 100% !important; position: relative !important; overflow: auto !important; font-size: 1em !important;"><table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse; border-spacing: 0px; box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: inherit !important;"><tbody style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><tr style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><td class="gutter" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important; color: rgb(175, 175, 175) !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">1</div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">2</div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">3</div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">4</div></td><td class="code" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important;"><div class="container" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; width: auto !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: relative !important; right: auto !important; top: auto !important; vertical-align: baseline !important; font-size: 1em !important; min-height: inherit !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">RxTextView.textChanges(searchEditText)</code></div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.debounce(150,&nbsp;MILLISECONDS)</code></div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.flatMap(Api::searchItems)</code></div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.subscribe(</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">this</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">::updateList,&nbsp;t-&gt;showError());</code></div></div></td></tr></tbody></table></div></div><h4 style="box-sizing: border-box; border: 0px; margin: 0.5rem 0px; padding: 0px; font-size: 16px; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; width: inherit;"><span md-inline="plain" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; min-width: 10px;">杀死前面的请求:</span></h4><p cid="c104" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0.8em; margin-bottom: 0.8em; padding-top: 0px; padding-bottom: 0px; line-height: 25px; color: rgb(51, 51, 51); font-size: 16px; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; width: inherit; font-family: 'Open Sans', 'Clear Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif; text-align: justify; white-space: pre-wrap;"><span md-inline="plain" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px;">引入&nbsp;</span><span md-inline="link" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px;"><a target=_blank target="_blank" spellcheck="false" href="http://reactivex.io/documentation/operators/flatmap.html" style="box-sizing: border-box; background-color: transparent; color: rgb(65, 131, 196); text-decoration: none; border: 0px; margin: 0px; padding: 0px; -webkit-transition: opacity 0.2s; transition: opacity 0.2s; cursor: pointer;">switchMap</a></span><span md-inline="plain" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px;">来替代flatMap。它会停止前面发出的items。所以如果在0+150ms时你搜索“ab”，在 0+300ms时搜索“abcd”，但是“ab”的网络调用需要 150ms以上的时间才能完成，那么到了开始“abcd”调用的时候前面的那个会被取消。这样你总是能得到最近的请求数据。</span></p><div style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><div id="highlighter_455576" class="syntaxhighlighter  js" style="box-sizing: border-box; border: 0px; padding: 0px; margin: 1em 0px !important; width: 100% !important; position: relative !important; overflow: auto !important; font-size: 1em !important;"><table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse; border-spacing: 0px; box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: inherit !important;"><tbody style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><tr style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><td class="gutter" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important; color: rgb(175, 175, 175) !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">1</div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">2</div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">3</div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">4</div></td><td class="code" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important;"><div class="container" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; width: auto !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: relative !important; right: auto !important; top: auto !important; vertical-align: baseline !important; font-size: 1em !important; min-height: inherit !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">RxTextView.textChanges(searchEditText)</code></div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.debounce(150,&nbsp;MILLISECONDS)</code></div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.switchMap(Api::searchItems)</code></div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.subscribe(</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">this</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">::updateList,&nbsp;t-&gt;showError());</code></div></div></td></tr></tbody></table></div></div><h2 style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; font-size: 1.2em; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif;">2. No error functionality / no network functionality</h2><p cid="c106" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">如果所有的网络调用都失败，那么你将不能再次观察到text的改变。</p><p cid="c109" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">这可以通过添加&nbsp;<a target=_blank target="_blank" spellcheck="false" href="https://github.com/ReactiveX/RxJava/wiki/Error-Handling-Operators" style="box-sizing: border-box; background-color: transparent; color: rgb(15, 153, 50); text-decoration: none; border: 0px; margin: 0px; padding: 0px; -webkit-transition: opacity 0.2s; transition: opacity 0.2s;">error catching functionality</a>来解决。</p><p cid="c111" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">因此你可以用：</p><div style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><div id="highlighter_447797" class="syntaxhighlighter  js" style="box-sizing: border-box; border: 0px; padding: 0px; margin: 1em 0px !important; width: 100% !important; position: relative !important; overflow: auto !important; font-size: 1em !important;"><table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse; border-spacing: 0px; box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: inherit !important;"><tbody style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><tr style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><td class="gutter" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important; color: rgb(175, 175, 175) !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">1</div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">2</div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">3</div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">4</div><div class="line number5 index4 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">5</div></td><td class="code" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important;"><div class="container" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; width: auto !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: relative !important; right: auto !important; top: auto !important; vertical-align: baseline !important; font-size: 1em !important; min-height: inherit !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">RxTextView.textChanges(searchEditText)</code></div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.debounce(150,&nbsp;MILLISECONDS)</code></div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.switchMap(Api::searchItems)</code></div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.onErrorResumeNext(t-&gt;&nbsp;empty())</code></div><div class="line number5 index4 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.subscribe(</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">this</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">::updateList);</code></div></div></td></tr></tbody></table></div></div><p cid="c61" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">Don’t do that. Let’s make it smarter. What if the searchItems() api call above calls because of connectivity? Or even more “UX-depressingly” brief connectivity that the user didn’t notice?</p><p cid="c113" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">别这么做。让我们让它更智能些。要是 searchItems() api调用因为网络连接的问题发生在其它调用之前呢？</p><p cid="c115" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">你需要这样的一个重试机制：</p><div style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><div id="highlighter_84268" class="syntaxhighlighter  js" style="box-sizing: border-box; border: 0px; padding: 0px; margin: 1em 0px !important; width: 100% !important; position: relative !important; overflow: auto !important; font-size: 1em !important;"><table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse; border-spacing: 0px; box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: inherit !important;"><tbody style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><tr style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><td class="gutter" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important; color: rgb(175, 175, 175) !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">1</div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">2</div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">3</div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">4</div><div class="line number5 index4 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">5</div></td><td class="code" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important;"><div class="container" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; width: auto !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: relative !important; right: auto !important; top: auto !important; vertical-align: baseline !important; font-size: 1em !important; min-height: inherit !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">RxTextView.textChanges(searchEditText)</code></div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.debounce(150,&nbsp;MILLISECONDS)</code></div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.switchMap(Api::searchItems)</code></div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.retryWhen(</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">new</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">RetryWithConnectivity())</code></div><div class="line number5 index4 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.subscribe(</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">this</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">::updateList,&nbsp;t-&gt;showError());</code></div></div></td></tr></tbody></table></div></div><p cid="c117" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">如何进一步改进呢？添加一个超时（timeout）。就如我们的用户体验设计师&nbsp;<a target=_blank target="_blank" spellcheck="false" href="https://medium.com/u/1929db36f9c5" style="box-sizing: border-box; background-color: transparent; color: rgb(15, 153, 50); text-decoration: none; border: 0px; margin: 0px; padding: 0px; -webkit-transition: opacity 0.2s; transition: opacity 0.2s;">Leander Lenzing</a>&nbsp;所说的：“1秒对于用户来说是一个很长的时间”。所以上面的代码应该这样：</p><div style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><div id="highlighter_969236" class="syntaxhighlighter  js" style="box-sizing: border-box; border: 0px; padding: 0px; margin: 1em 0px !important; width: 100% !important; position: relative !important; overflow: auto !important; font-size: 1em !important;"><table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse; border-spacing: 0px; box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: inherit !important;"><tbody style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><tr style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><td class="gutter" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important; color: rgb(175, 175, 175) !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">1</div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">2</div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">3</div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">4</div><div class="line number5 index4 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">5</div></td><td class="code" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important;"><div class="container" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; width: auto !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: relative !important; right: auto !important; top: auto !important; vertical-align: baseline !important; font-size: 1em !important; min-height: inherit !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">RxTextView.textChanges(searchEditText)</code></div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.debounce(150,&nbsp;MILLISECONDS)</code></div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.switchMap(Api::searchItems)</code></div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.retryWhen(</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">new</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">RetryWithConnectivityIncremental(context,&nbsp;5,&nbsp;15,&nbsp;SECONDS))</code></div><div class="line number5 index4 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.subscribe(</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">this</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">::updateList,&nbsp;t-&gt;showErrorToUser());</code></div></div></td></tr></tbody></table></div></div><p cid="c119" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">那么RetryWithConnectivityIncremental 和RetryWithConnectivity 会做些什么呢？它将等待5秒让手机网络畅通，如果超过则会抛出一个异常。如果用户重试它则会等待更长的超时时间（比如15秒）。</p><p cid="c68" mdtype="paragraph" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">这里是代码：</p><p style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><a target=_blank target="_blank" href="https://gist.github.com/Diolor/a17ddb78d3d45b452f02#file-broadcastobservable-java" style="box-sizing: border-box; background-color: transparent; color: rgb(15, 153, 50); text-decoration: none; border: 0px; margin: 0px; padding: 0px; -webkit-transition: opacity 0.2s; transition: opacity 0.2s;">BroadcastObservable.java</a>&nbsp;hosted with ❤ by&nbsp;<a target=_blank target="_blank" href="https://github.com/" style="box-sizing: border-box; background-color: transparent; color: rgb(15, 153, 50); text-decoration: none; border: 0px; margin: 0px; padding: 0px; -webkit-transition: opacity 0.2s; transition: opacity 0.2s;">GitHub</a></p><div style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><div id="highlighter_184152" class="syntaxhighlighter  js" style="box-sizing: border-box; border: 0px; padding: 0px; margin: 1em 0px !important; width: 100% !important; position: relative !important; overflow: auto !important; font-size: 1em !important;"><table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse; border-spacing: 0px; box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: inherit !important;"><tbody style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><tr style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><td class="gutter" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important; color: rgb(175, 175, 175) !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">1</div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">2</div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">3</div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">4</div><div class="line number5 index4 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">5</div><div class="line number6 index5 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">6</div><div class="line number7 index6 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">7</div><div class="line number8 index7 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">8</div><div class="line number9 index8 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">9</div><div class="line number10 index9 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">10</div><div class="line number11 index10 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">11</div><div class="line number12 index11 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">12</div><div class="line number13 index12 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">13</div><div class="line number14 index13 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">14</div><div class="line number15 index14 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">15</div><div class="line number16 index15 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">16</div><div class="line number17 index16 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">17</div><div class="line number18 index17 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">18</div><div class="line number19 index18 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">19</div><div class="line number20 index19 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">20</div><div class="line number21 index20 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">21</div><div class="line number22 index21 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">22</div><div class="line number23 index22 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">23</div><div class="line number24 index23 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">24</div><div class="line number25 index24 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">25</div><div class="line number26 index25 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">26</div><div class="line number27 index26 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">27</div><div class="line number28 index27 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">28</div><div class="line number29 index28 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">29</div><div class="line number30 index29 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">30</div><div class="line number31 index30 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">31</div><div class="line number32 index31 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">32</div><div class="line number33 index32 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">33</div><div class="line number34 index33 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">34</div><div class="line number35 index34 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">35</div><div class="line number36 index35 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">36</div><div class="line number37 index36 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">37</div><div class="line number38 index37 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">38</div><div class="line number39 index38 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">39</div><div class="line number40 index39 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">40</div><div class="line number41 index40 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">41</div><div class="line number42 index41 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">42</div><div class="line number43 index42 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">43</div><div class="line number44 index43 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">44</div><div class="line number45 index44 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">45</div><div class="line number46 index45 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">46</div><div class="line number47 index46 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">47</div><div class="line number48 index47 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">48</div><div class="line number49 index48 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">49</div><div class="line number50 index49 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">50</div><div class="line number51 index50 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">51</div><div class="line number52 index51 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">52</div><div class="line number53 index52 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">53</div><div class="line number54 index53 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">54</div><div class="line number55 index54 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">55</div><div class="line number56 index55 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">56</div><div class="line number57 index56 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">57</div><div class="line number58 index57 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">58</div><div class="line number59 index58 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">59</div><div class="line number60 index59 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">60</div><div class="line number61 index60 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">61</div><div class="line number62 index61 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">62</div><div class="line number63 index62 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">63</div><div class="line number64 index63 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">64</div></td><td class="code" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important;"><div class="container" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; width: auto !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: relative !important; right: auto !important; top: auto !important; vertical-align: baseline !important; font-size: 1em !important; min-height: inherit !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;android.content.BroadcastReceiver;</code></div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;android.content.Context;</code></div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;android.content.Intent;</code></div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;android.content.IntentFilter;</code></div><div class="line number5 index4 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;android.net.ConnectivityManager;</code></div><div class="line number6 index5 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;android.net.NetworkInfo;</code></div><div class="line number7 index6 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;android.os.Looper;</code></div><div class="line number8 index7 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number9 index8 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;rx.Observable;</code></div><div class="line number10 index9 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;rx.Scheduler;</code></div><div class="line number11 index10 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;rx.Subscriber;</code></div><div class="line number12 index11 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;rx.Subscription;</code></div><div class="line number13 index12 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;rx.android.schedulers.AndroidSchedulers;</code></div><div class="line number14 index13 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;rx.functions.Action0;</code></div><div class="line number15 index14 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;rx.subscriptions.Subscriptions;</code></div><div class="line number16 index15 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number17 index16 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">public&nbsp;class&nbsp;BroadcastObservable&nbsp;implements&nbsp;Observable.OnSubscribe&lt;Boolean&gt;&nbsp;{</code></div><div class="line number18 index17 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number19 index18 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">private&nbsp;final&nbsp;Context&nbsp;context;</code></div><div class="line number20 index19 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number21 index20 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">public&nbsp;static&nbsp;Observable&lt;Boolean&gt;&nbsp;fromConnectivityManager(Context&nbsp;context)&nbsp;{</code></div><div class="line number22 index21 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">return</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">Observable.create(</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">new</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">BroadcastObservable(context))</code></div><div class="line number23 index22 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.share();</code></div><div class="line number24 index23 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number25 index24 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number26 index25 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">public&nbsp;BroadcastObservable(Context&nbsp;context)&nbsp;{</code></div><div class="line number27 index26 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">this</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.context&nbsp;=&nbsp;context;</code></div><div class="line number28 index27 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number29 index28 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number30 index29 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">@Override</code></div><div class="line number31 index30 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">public&nbsp;void&nbsp;call(Subscriber&lt;?&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">super</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">Boolean&gt;&nbsp;subscriber)&nbsp;{</code></div><div class="line number32 index31 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">BroadcastReceiver&nbsp;receiver&nbsp;=&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">new</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">BroadcastReceiver()&nbsp;{</code></div><div class="line number33 index32 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">@Override</code></div><div class="line number34 index33 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">public&nbsp;void&nbsp;onReceive(Context&nbsp;context,&nbsp;Intent&nbsp;intent)&nbsp;{</code></div><div class="line number35 index34 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">subscriber.onNext(isConnectedToInternet());</code></div><div class="line number36 index35 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number37 index36 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">};</code></div><div class="line number38 index37 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number39 index38 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">context.registerReceiver(receiver,&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">new</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION));</code></div><div class="line number40 index39 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number41 index40 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">subscriber.add(unsubscribeInUiThread(()&nbsp;-&gt;&nbsp;context.unregisterReceiver(receiver)));</code></div><div class="line number42 index41 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number43 index42 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number44 index43 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">private&nbsp;boolean&nbsp;isConnectedToInternet()&nbsp;{</code></div><div class="line number45 index44 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">ConnectivityManager&nbsp;manager&nbsp;=&nbsp;(ConnectivityManager)&nbsp;context.getSystemService(Context.CONNECTIVITY_SERVICE);</code></div><div class="line number46 index45 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">NetworkInfo&nbsp;networkInfo&nbsp;=&nbsp;manager.getActiveNetworkInfo();</code></div><div class="line number47 index46 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">return</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">networkInfo&nbsp;!=&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">null</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&amp;&amp;&nbsp;networkInfo.isConnected();</code></div><div class="line number48 index47 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number49 index48 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number50 index49 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">private&nbsp;static&nbsp;Subscription&nbsp;unsubscribeInUiThread(final&nbsp;Action0&nbsp;unsubscribe)&nbsp;{</code></div><div class="line number51 index50 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">return</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">Subscriptions.create(()&nbsp;-&gt;&nbsp;{</code></div><div class="line number52 index51 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">if</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">(Looper.getMainLooper()&nbsp;==&nbsp;Looper.myLooper())&nbsp;{</code></div><div class="line number53 index52 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">unsubscribe.call();</code></div><div class="line number54 index53 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">else</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">{</code></div><div class="line number55 index54 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">final&nbsp;Scheduler.Worker&nbsp;inner&nbsp;=&nbsp;AndroidSchedulers.mainThread().createWorker();</code></div><div class="line number56 index55 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">inner.schedule(()&nbsp;-&gt;&nbsp;{</code></div><div class="line number57 index56 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">unsubscribe.call();</code></div><div class="line number58 index57 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">inner.unsubscribe();</code></div><div class="line number59 index58 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">});</code></div><div class="line number60 index59 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number61 index60 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">});</code></div><div class="line number62 index61 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number63 index62 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number64 index63 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div></div></td></tr></tbody></table></div></div><p style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><a target=_blank target="_blank" href="https://gist.github.com/Diolor/a17ddb78d3d45b452f02#file-retrywithconnectivityincremental-java" style="box-sizing: border-box; background-color: transparent; color: rgb(15, 153, 50); text-decoration: none; border: 0px; margin: 0px; padding: 0px; -webkit-transition: opacity 0.2s; transition: opacity 0.2s;">RetryWithConnectivityIncremental.java</a>&nbsp;hosted with ❤ by&nbsp;<a target=_blank target="_blank" href="https://github.com/" style="box-sizing: border-box; background-color: transparent; color: rgb(15, 153, 50); text-decoration: none; border: 0px; margin: 0px; padding: 0px; -webkit-transition: opacity 0.2s; transition: opacity 0.2s;">GitHub</a></p><div style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><div id="highlighter_108115" class="syntaxhighlighter  js" style="box-sizing: border-box; border: 0px; padding: 0px; margin: 1em 0px !important; width: 100% !important; position: relative !important; overflow: auto !important; font-size: 1em !important;"><table border="0" cellpadding="0" cellspacing="0" style="border-collapse: collapse; border-spacing: 0px; box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; min-height: inherit !important;"><tbody style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><tr style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important;"><td class="gutter" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important; color: rgb(175, 175, 175) !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">1</div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">2</div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">3</div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">4</div><div class="line number5 index4 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">5</div><div class="line number6 index5 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">6</div><div class="line number7 index6 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">7</div><div class="line number8 index7 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">8</div><div class="line number9 index8 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">9</div><div class="line number10 index9 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">10</div><div class="line number11 index10 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">11</div><div class="line number12 index11 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">12</div><div class="line number13 index12 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">13</div><div class="line number14 index13 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">14</div><div class="line number15 index14 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">15</div><div class="line number16 index15 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">16</div><div class="line number17 index16 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">17</div><div class="line number18 index17 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">18</div><div class="line number19 index18 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">19</div><div class="line number20 index19 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">20</div><div class="line number21 index20 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">21</div><div class="line number22 index21 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">22</div><div class="line number23 index22 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">23</div><div class="line number24 index23 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">24</div><div class="line number25 index24 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">25</div><div class="line number26 index25 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">26</div><div class="line number27 index26 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">27</div><div class="line number28 index27 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">28</div><div class="line number29 index28 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">29</div><div class="line number30 index29 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">30</div><div class="line number31 index30 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">31</div><div class="line number32 index31 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">32</div><div class="line number33 index32 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">33</div><div class="line number34 index33 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">34</div><div class="line number35 index34 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">35</div><div class="line number36 index35 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">36</div><div class="line number37 index36 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">37</div><div class="line number38 index37 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">38</div><div class="line number39 index38 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">39</div><div class="line number40 index39 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">40</div><div class="line number41 index40 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">41</div><div class="line number42 index41 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">42</div><div class="line number43 index42 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">43</div><div class="line number44 index43 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">44</div><div class="line number45 index44 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">45</div><div class="line number46 index45 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">46</div><div class="line number47 index46 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">47</div><div class="line number48 index47 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">48</div><div class="line number49 index48 alt2" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">49</div><div class="line number50 index49 alt1" style="box-sizing: content-box !important; border-width: 0px 3px 0px 0px !important; border-right-style: solid !important; border-right-color: rgb(108, 226, 108) !important; margin: 0px !important; padding: 0px 0.5em 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; text-align: right !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">50</div></td><td class="code" style="box-sizing: content-box !important; padding: 0px !important; border: 0px !important; margin: 0px !important; font-size: 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: 100% !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; min-height: inherit !important;"><div class="container" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px !important; width: auto !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: relative !important; right: auto !important; top: auto !important; vertical-align: baseline !important; font-size: 1em !important; min-height: inherit !important;"><div class="line number1 index0 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;android.content.Context;</code></div><div class="line number2 index1 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number3 index2 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;java.util.concurrent.TimeUnit;</code></div><div class="line number4 index3 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;java.util.concurrent.TimeoutException;</code></div><div class="line number5 index4 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number6 index5 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;rx.Observable;</code></div><div class="line number7 index6 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">import&nbsp;rx.functions.Func1;</code></div><div class="line number8 index7 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number9 index8 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">public&nbsp;class&nbsp;RetryWithConnectivityIncremental&nbsp;implements&nbsp;Func1&lt;Observable&lt;?&nbsp;extends&nbsp;Throwable&gt;,&nbsp;Observable&lt;?&gt;&gt;&nbsp;{</code></div><div class="line number10 index9 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">private&nbsp;final&nbsp;int&nbsp;maxTimeout;</code></div><div class="line number11 index10 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">private&nbsp;final&nbsp;TimeUnit&nbsp;timeUnit;</code></div><div class="line number12 index11 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">private&nbsp;final&nbsp;Observable&lt;Boolean&gt;&nbsp;isConnected;</code></div><div class="line number13 index12 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">private&nbsp;final&nbsp;int&nbsp;startTimeOut;</code></div><div class="line number14 index13 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">private&nbsp;int&nbsp;timeout;</code></div><div class="line number15 index14 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number16 index15 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">public&nbsp;RetryWithConnectivityIncremental(Context&nbsp;context,&nbsp;int&nbsp;startTimeOut,&nbsp;int&nbsp;maxTimeout,&nbsp;TimeUnit&nbsp;timeUnit)&nbsp;{</code></div><div class="line number17 index16 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">this</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.startTimeOut&nbsp;=&nbsp;startTimeOut;</code></div><div class="line number18 index17 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">this</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.maxTimeout&nbsp;=&nbsp;maxTimeout;</code></div><div class="line number19 index18 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">this</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.timeUnit&nbsp;=&nbsp;timeUnit;</code></div><div class="line number20 index19 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">this</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.timeout&nbsp;=&nbsp;startTimeOut;</code></div><div class="line number21 index20 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">isConnected&nbsp;=&nbsp;getConnectedObservable(context);</code></div><div class="line number22 index21 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number23 index22 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number24 index23 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">@Override</code></div><div class="line number25 index24 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">public&nbsp;Observable&lt;?&gt;&nbsp;call(Observable&lt;?&nbsp;extends&nbsp;Throwable&gt;&nbsp;observable)&nbsp;{</code></div><div class="line number26 index25 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">return</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">observable.flatMap((Throwable&nbsp;throwable)&nbsp;-&gt;&nbsp;{</code></div><div class="line number27 index26 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">if</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">(throwable&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">instanceof</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">RetrofitError&nbsp;&amp;&amp;&nbsp;((RetrofitError)&nbsp;throwable).getKind()&nbsp;==&nbsp;RetrofitError.Kind.NETWORK)&nbsp;{</code></div><div class="line number28 index27 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">return</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">isConnected;</code></div><div class="line number29 index28 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">else</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">{</code></div><div class="line number30 index29 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">return</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">Observable.error(throwable);</code></div><div class="line number31 index30 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number32 index31 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}).compose(attachIncementalTimeout());</code></div><div class="line number33 index32 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number34 index33 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number35 index34 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">private&nbsp;Observable.Transformer&lt;Boolean,&nbsp;Boolean&gt;&nbsp;attachIncementalTimeout()&nbsp;{</code></div><div class="line number36 index35 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">return</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">observable&nbsp;-&gt;&nbsp;observable.timeout(timeout,&nbsp;timeUnit)</code></div><div class="line number37 index36 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.doOnError(throwable&nbsp;-&gt;&nbsp;{</code></div><div class="line number38 index37 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">if</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">(throwable&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">instanceof</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">TimeoutException)&nbsp;{</code></div><div class="line number39 index38 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">timeout&nbsp;=&nbsp;timeout&nbsp;&gt;&nbsp;maxTimeout&nbsp;?&nbsp;maxTimeout&nbsp;:&nbsp;timeout&nbsp;+&nbsp;startTimeOut;</code></div><div class="line number40 index39 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number41 index40 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">});</code></div><div class="line number42 index41 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number43 index42 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number44 index43 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">private&nbsp;Observable&lt;Boolean&gt;&nbsp;getConnectedObservable(Context&nbsp;context)&nbsp;{</code></div><div class="line number45 index44 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js keyword" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-weight: bold !important; min-height: inherit !important; color: rgb(0, 102, 153) !important;">return</code>&nbsp;<code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">BroadcastObservable.fromConnectivityManager(context)</code></div><div class="line number46 index45 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.distinctUntilChanged()</code></div><div class="line number47 index46 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">.filter(isConnected&nbsp;-&gt;&nbsp;isConnected);</code></div><div class="line number48 index47 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js spaces" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div><div class="line number49 index48 alt2" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;">&nbsp;</div><div class="line number50 index49 alt1" style="box-sizing: content-box !important; border: 0px !important; margin: 0px !important; padding: 0px 1em !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; font-size: 1em !important; min-height: inherit !important; white-space: pre !important;"><code class="js plain" style="box-sizing: content-box !important; font-family: Consolas, 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace !important; font-size: 1em !important; border: 0px !important; margin: 0px !important; padding: 0px !important; border-top-left-radius: 0px !important; border-top-right-radius: 0px !important; border-bottom-right-radius: 0px !important; border-bottom-left-radius: 0px !important; background-image: none !important; bottom: auto !important; float: none !important; height: auto !important; left: auto !important; line-height: 1.1em !important; outline: 0px !important; overflow: visible !important; position: static !important; right: auto !important; top: auto !important; vertical-align: baseline !important; width: auto !important; min-height: inherit !important;">}</code></div></div></td></tr></tbody></table></div></div><p style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><a target=_blank target="_blank" href="https://github.com/" style="box-sizing: border-box; background-color: transparent; color: rgb(15, 153, 50); text-decoration: none; border: 0px; margin: 0px; padding: 0px; -webkit-transition: opacity 0.2s; transition: opacity 0.2s;"></a></p><p name="e004" id="e004" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">以上。你节制了你的请求，你总是能得到最近的请求结果，你有重试连接的智能超时处理机制。</p><p name="e004" id="e004" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">英文原文：<a target=_blank target="_blank" href="https://medium.com/@diolor/improving-ux-with-rxjava-4440a13b157f#.prs4xw4jh" textvalue="Improving UX with RxJava" style="box-sizing: border-box; background-color: transparent; color: rgb(15, 153, 50); text-decoration: none; border: 0px; margin: 0px; padding: 0px; -webkit-transition: opacity 0.2s; transition: opacity 0.2s;">Improving UX with RxJava</a>&nbsp;</p><p name="e004" id="e004" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><br style="box-sizing: border-box;" /></p><p name="e004" id="e004" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;">注：</p><p class="p1" style="box-sizing: border-box; border: 0px; margin-top: 0px; margin-bottom: 22px; padding-top: 0px; padding-bottom: 0px; line-height: 1.7; color: rgb(51, 51, 51); font-family: 'lucida grande', 'lucida sans unicode', lucida, helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', 'WenQuanYi Micro Hei', sans-serif; font-size: 16px;"><span class="s1" style="box-sizing: border-box; border: 0px; margin: 0px; padding: 0px;">还可以参考Hanks 在简书上的译文：</span><a target=_blank target="_blank" href="http://www.jianshu.com/p/33c548bce571" _src="http://www.jianshu.com/p/33c548bce571" style="box-sizing: border-box; background-color: transparent; color: rgb(15, 153, 50); text-decoration: none; border: 0px; margin: 0px; padding: 0px; -webkit-transition: opacity 0.2s; transition: opacity 0.2s;">http://www.jianshu.com/p/33c548bce571</a>&nbsp;以及译文作者根据文章制作的一个demo：<a target=_blank target="_blank" href="https://github.com/hanks-zyh/RxSerach" _src="https://github.com/hanks-zyh/RxSerach" style="box-sizing: border-box; background-color: transparent; color: rgb(15, 153, 50); text-decoration: none; border: 0px; margin: 0px; padding: 0px; -webkit-transition: opacity 0.2s; transition: opacity 0.2s;">https://github.com/hanks-zyh/RxSerach</a>&nbsp;</p>
            <div>
                作者：jdsjlzx 发表于2016/5/29 0:04:55 <a href="http://blog.csdn.net/jdsjlzx/article/details/51527516">原文链接</a>
            </div>
            <div>
            阅读：2197 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51527516#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[原]推荐RxJava+MVP的开源项目——RxJoke]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51523922</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51523922</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/28 11:04:42</pubDate>
        <description><![CDATA[
            <p>RxJoke <br>
<a href="https://github.com/JDDJJ/RxJoke">一个集成Rxjava,Retrofit,Mvp,以及Dagger2的开源项目</a></p>

<p>代码：<a href="https://github.com/JDDJJ/RxJoke">https://github.com/JDDJJ/RxJoke</a></p>

<h2 id="整体架构">整体架构</h2>

<blockquote>
  <p>Model-view-presenter，简称MVP，是电脑软件设计工程中一种对针对MVC模式，再审议后所延伸提出的一种软件设计模式。</p>
</blockquote>

<p>一款工程的架构，就相当于骨骼，骨架，只有骨架搭建的好，才能使整个工程富有弹性，并且逻辑清晰。这里我选用的最近比较热的MVP设计模式，并且这款模式也已经运用到我之前的企业项目中，效果卓越。对于MVP,这里推荐几篇文章。</p>

<ol>
<li><a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0227/2503.html">Android中的MVP</a></li>
<li><a href="http://blog.csdn.net/guxiao1201/article/details/40147209">Android开发MVP模式解析</a></li>
<li><a href="http://blog.csdn.net/vector_yi/article/details/24719873">MVP模式在Android开发中的应用</a></li>
</ol>



<h2 id="数据源api">数据源API</h2>

<blockquote>
  <p><a href="http://apistore.baidu.com/">API Store,为开发者提供最全面的API服务</a></p>
</blockquote>

<p>巧妇难为无米之炊，做一个项目，数据的来源是很重要的，不论B/S,C/S结构，其中server都是提供数据来源的。而这里我是从百度Api集市搜索的笑话大全API。</p>

<ol>
<li>Api获取数据源（Json数据）</li>
<li>利用GsonFormat生成Entity即JavaBean</li>
</ol>

<p>这里由于结合了rxjava,所以model层也就上面获取的javabean,获取数据的代码我放到了presenter层。</p>

<p>获取数据</p>

<ol>
<li>Retrofit – Java(Android) 的REST 接口封装类库</li>
<li>RxJava – 一个在 Java VM 上使用可观测的序列来组成异步的、基于事件的程序的库</li>
</ol>

<p>获取数据方面（Presenter层）我利用了retrofit2+rxjava,之前用过volley框架，okhttp框架，感觉是各有所长，retrofit2给我的感觉就是分层清晰。 <br>
而rxjava，对于有一定开发经验的程序员来说。上手还是挺轻松的，并且利用响应式开发，你会发现以前的很多需要回调来回调去的事情变得简单轻松。 <br>
这里也推几篇文章。</p>

<p>原文链接：<a href="http://www.jianshu.com/p/9430eca553a5">http://www.jianshu.com/p/9430eca553a5</a></p>
            <div>
                作者：jdsjlzx 发表于2016/5/28 11:04:42 <a href="http://blog.csdn.net/jdsjlzx/article/details/51523922">原文链接</a>
            </div>
            <div>
            阅读：482 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51523922#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
    <item>
        <title><![CDATA[[转]用 Retrofit 2 简化 HTTP 请求（Jake Wharton）]]></title>
        <link>http://blog.csdn.net/jdsjlzx/article/details/51523784</link>
        <guid>http://blog.csdn.net/jdsjlzx/article/details/51523784</guid>
        <author>jdsjlzx</author>
        <pubDate>2016/5/28 10:39:17</pubDate>
        <description><![CDATA[
            <p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;"><a target=_blank href="http://square.github.io/retrofit/" style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169); text-decoration: none;">Retrofit</a>&nbsp;作为简化 HTTP 请求的库，已经运行多年，2.0版本依然不辱使命的在做这些事情。不过 2.0 版本修复了一些长期影响开发者的设计，还加入了前所未有的强大特性。在 NYC 2015 的这一个分享中，<a target=_blank href="https://twitter.com/jakewharton" style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169); text-decoration: none;">Jake Wharton</a>&nbsp;的演讲涵盖了所有 Retrofit 2.0 的新特性，全面介绍了 Retrofit 2.0 工作原理。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Transcription below provided by Realm: a replacement for SQLite that you can use in Java or Kotlin.&nbsp;<a target=_blank href="https://realm.io/docs/java/latest/" style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169); text-decoration: none;">Check out the docs!</a></p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;"><br style="box-sizing: border-box; line-height: 10px;" /></p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Jake Wharton 是工作在 Square 的工程师。过去五年一直在跟糟糕的代码和 API 作斗争。经常参加各类会议，讨论这种影响千万开发者的如同瘟疫般的设计。</p><p class="runtimead" style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; text-align: center; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;"></p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;"><a target=_blank href="https://twitter.com/jakewharton" target="_blank" style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169); text-decoration: none;">@jakewharton</a></p><hr style="box-sizing: content-box; height: 0px; margin-top: 20px; margin-bottom: 20px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;" /><hr style="box-sizing: content-box; height: 0px; margin-top: 20px; margin-bottom: 20px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;" /><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;"><span style="box-sizing: border-box; font-weight: 600;">Save the date for&nbsp;<a target=_blank href="http://sf.droidcon.com/" style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169); text-decoration: none;">Droidcon SF</a>&nbsp;in March ― a conference with best-in-class presentations from leaders in all parts of the Android ecosystem.</span></p><hr style="box-sizing: content-box; height: 0px; margin-top: 20px; margin-bottom: 20px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(238, 238, 238); color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;" /><h3 id="articleHeader0" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 37.79999923706055px; color: rgb(64, 64, 64); margin-top: 10px; margin-bottom: 10px; font-size: 1.5em;">简介 (0:00)</h3><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">我叫&nbsp;<a target=_blank href="https://twitter.com/jakewharton" style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169); text-decoration: none;">Jake Wharton</a>，现在在&nbsp;<a target=_blank href="https://squareup.com/" style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169); text-decoration: none;">Square</a>&nbsp;工作。一个天真的人曾经说过：”Retrofit 2 将会在今年年底前放出。”，那个人，就是去年在纽约 DroidCon 上表态的我。然而，事实是 Retrofit 2&nbsp;<span style="box-sizing: border-box; font-weight: 700;">将会在今年年底放出</span>，这次我保证！</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;"><a target=_blank href="http://square.github.io/retrofit/" style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169); text-decoration: none;">Retrofit</a>&nbsp;5年前就开源了，是 Square 最早的开源项目之一。一开始的时候，Retrofit 只是我们用在各个开源项目里的福袋：比如说最早里面有晃动检测功能，HTTP Client，还有现在的 tap 库。多数功能都是 Bob Lee 完成的，我大概 3 年前开始接管这些工作。最终历经 3 年，完成了 1.0 版本，然后彻底开源。从那会儿到现在，已经 release 了 18 个版本了。</p><h3 id="articleHeader1" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 37.79999923706055px; color: rgb(64, 64, 64); margin-top: 10px; margin-bottom: 10px; font-size: 1.5em;">Retrofit 1 不错的地方 (2:23)</h3><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Retrofit 里已经有很多不错的特性了。Retrofit 可以利用接口，方法和注解参数（parameter annotations）来声明式定义一个请求应该如何被创建。比如说，下面是一个如何请求 GitHub API 的例子：</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;List&lt;Contributor&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Retrofit 背后的 HTTP client，以及序列化机制（JSON/XML 协议）都是可替换（pluggable）的，因此你可以选择合适自己的方案。Retrofit 最早出来的时候，只支持 Apache 的 HTTP client。在 1.0 放出前，我们增加了 URL connection，以及 OkHttp 的支持。如果你想要加入的其他的 HTTP client，都可以简单的加入。这个特性非常赞，让我们有能力去支持不同的自定义 client。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">builder.setClient(new&nbsp;UrlConnectionClient());
builder.setClient(new&nbsp;ApacheClient());
builder.setClient(new&nbsp;OkClient());

builder.setClient(new&nbsp;CustomClient());</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">序列化功能也是可替换的。默认是用的 GSON，你当然也可以用 Jackson 来替换掉。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;List&lt;Contributor&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}

builder.setConverter(new&nbsp;GsonConverter());
builder.setConverter(new&nbsp;JacksonConverter());</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">如果你在用某些数据交换协议，比如 protocol buffer，Retrofit 也支持 Google 的&nbsp;<a target=_blank href="https://github.com/google/protobuf" style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169); text-decoration: none;">protobuf</a>，也包括 XML 协议的转换（如果你自己不怕折腾）。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;ContributorResponse&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}

builder.setConverter(new&nbsp;ProtoConverter());
builder.setConverter(new&nbsp;WireConverter());

builder.setConverter(new&nbsp;SimpleXMLConverter());

builder.setConverter(new&nbsp;CustomConverter());</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">序列化部分跟 client 部分一样，都是可替换的。你如果想要引入或者实现自己的序列化组件，完全没有问题。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">在发请求的实现上，你可以用的方法有很多，比如：同步发送请求――</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;List&lt;Contributor&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}

List&lt;Contributor&gt;&nbsp;contributors&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;gitHubService.repoContributors(&quot;square&quot;,&nbsp;&quot;retrofit&quot;);</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">――和异步发送，他们之间的区别就是异步发送要在最后一个参数上声明一个 callback 回调函数：</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;void&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Callback&lt;List&lt;Contributor&gt;&gt;&nbsp;cb);
}

service.repoContributors(&quot;square&quot;,&nbsp;&quot;retrofit&quot;,&nbsp;new&nbsp;Callback&lt;List&lt;Contributor&gt;&gt;()&nbsp;{
&nbsp;&nbsp;@Override&nbsp;void&nbsp;success(List&lt;Contributor&gt;&nbsp;contributors,&nbsp;Response&nbsp;response)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;...
&nbsp;&nbsp;}


&nbsp;&nbsp;@Override&nbsp;void&nbsp;failure(RetrofitError&nbsp;error)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;...
&nbsp;&nbsp;}
});</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">――再到后来 1.0 后，我们还支持了&nbsp;<a target=_blank href="https://github.com/ReactiveX/RxJava" style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169); text-decoration: none;">RxJava</a>&nbsp;，被证明真的是个非常受欢迎的功能。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Observable&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}

gitHubService.repoContributors(&quot;square&quot;,&nbsp;&quot;retrofit&quot;)
&nbsp;&nbsp;&nbsp;&nbsp;.subscribe(new&nbsp;Action1&lt;List&lt;Contributor&gt;&gt;()&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Override&nbsp;public&nbsp;void&nbsp;call(List&lt;Contributor&gt;&nbsp;contributors)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;...
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;});</pre><h3 id="articleHeader2" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 37.79999923706055px; color: rgb(64, 64, 64); margin-top: 10px; margin-bottom: 10px; font-size: 1.5em;">Retrofit 1: 不够好的地方 (4:58)</h3><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">不幸的是，没有一个库是完美的，Retrofit 也不例外。为了支持可替换的功能模块，我们必须嵌套大量的组件，类的数量极多以至于成为了一个痛处，一方面是因为整个库非常的脆弱，还有就是因为我们无法修改公开的 API 接口。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">如果你想要操作某次请求返回的数据，比如说返回的 Header 部分或者 URL，你又同时想要操作序列化后的数据部分，这是 Retrofit 1.0 上是不可能实现的。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;List&lt;Contributor&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);

&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Response&nbsp;repoContributors2(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">在上面的这个 GitHub 的例子里，我们返回了一个 contributor 的列表，你可以用不同的 converter 去做反序列化。然而，如果说你要读取一个 reponse 的 header 部分。除非你设置一个 endpoint 来接管这个 reponse，不然你没有办法去读取这个 response。 由于 response header 数据里并没有反序列化后的对象，如果不做反序列化操作的话，那你也就无法拿到 contributor 对象了。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">我刚才说过同步和异步，以及用起来非常棒的 RxJava，但是这些用起来却有些刻板。比如：我们在某些场景下既需要异步的调用，又需要同步的调用。在 Retrofit 1.0 里，你必须得声明两次这个方法，像下面这样：</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;List&lt;Contributor&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);

&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;void&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Callback&lt;List&lt;Contributor&gt;&gt;&nbsp;cb);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">RxJava 也有类似问题。但值得庆幸的是你在用 RxJava 的时候只用声明一次就行，为了实现这个，我们还在核心代码里增加了对 RxJava 的支持，以辅助返回 Observable 的对象。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Observable&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">我们可能已经熟悉如何在 Retrofit 里创建 Observable 对象。但是如果你需要一些其他对象呢？ 比如，我们没有计划支持用了 Guava 的 ListenableFuture，以及那些用了 Java 8 的 CompleteableFuture。毕竟，Retrofit 1 是基于还在用着 Java 6 的 Android 开发的。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Retrofit 1 里 Converter 工作的效率并不算是很高。下面是在 Retrofit 1 里创建自定义 Converter 的代码，非常简单：</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;Converter&nbsp;{
&nbsp;&nbsp;Object&nbsp;fromBody(TypedInput&nbsp;body,&nbsp;Type&nbsp;type);
&nbsp;&nbsp;TypedOutput&nbsp;toBody(Object&nbsp;object);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">自定义 Converter 接收一个对象，然后返回一个格式化后的 HTTP 对象。问题是在我们传入了 Response 和一个我们想要转换的格式 Type 参数后，Converter 必须得搞清楚到底应该如何去反序列化，这部分的实现很复杂，而且耗时。尽管一些库做了对象的缓存，但依然效率很低。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/search/repositories&quot;)
&nbsp;&nbsp;RepositoriesResponse&nbsp;searchRepos(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Query(&quot;q&quot;)&nbsp;String&nbsp;query,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Query(&quot;since&quot;)&nbsp;Date&nbsp;since);
}


/search/repositories?q=retrofit&amp;since=2015-08-27
/search/repositories?q=retrofit&amp;since=20150827</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">有时候，声明式 API 会遇到一些小问题。比如就像上面的例子一样，你有个接口需要传入一个 Date，但是一个 Date 会有多种不同的格式表示。有的接口可能需要一个字符串，有的可能需要一个分隔开的日期表示（尤其是那些比日期要复杂很多的对象，可能会有更多的表示方法）。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">以上，基本上就是 Retrofit 1 无力解决的需求了，我们要如何修复呢？</p><h3 id="articleHeader3" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 37.79999923706055px; color: rgb(64, 64, 64); margin-top: 10px; margin-bottom: 10px; font-size: 1.5em;">Retrofit 2 (10:18)</h3><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">开发 Retrofit2 的时候，我们希望我们定位和解决所有大家多年以来在 Retrofit 1 里遇到的那些问题。</p><h4 id="call-1030javascriptpresentzchangechapter049true" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 1.1; color: rgb(64, 64, 64); margin: 5px auto; font-size: 1.3em; padding: 0px;">Call (10:30)</h4><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">首先得提到的是：Retrofit2 有了新的类型。如果你熟悉用 OkHttp 做 API 请求，你可能比较熟悉其中的一个类：<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">Call</code>。现在， Retrofit 2 里也多了一个&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">call</code>&nbsp;方法。语法和 OkHttp 基本一模一样，唯一不同是这个函数知道如何做数据的反序列化。它知道如何将 HTTP 响应转换成对象。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">另外，每一个 call 对象实例只能被用一次，所以说 request 和 response 都是一一对应的。你其实可以通过&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">Clone</code>&nbsp;方法来创建一个一模一样的实例，这个开销是很小的。比如说：你可以在每次决定发请求前&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">clone</code>一个之前的实例。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">另一个大的进步是 2.0 同时支持了在一个类型中的同步和异步。同时，一个请求也可以被<span style="box-sizing: border-box; font-weight: 700;">真正地</span>终止。终止操作会对底层的 http client 执行 cancel 操作。即便是正在执行的请求，也能立即切断。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Call&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}

Call&lt;List&lt;Contributor&gt;&gt;&nbsp;call&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;gitHubService.repoContributors(&quot;square&quot;,&nbsp;&quot;retrofit&quot;);</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">这个 Call 对象是从你的 API 接口返回的参数化后的对象。调用跟接口名相同的函数名，你就会得到一个实例出来。我们可以直接调用它的 execute 方法，但是得留意一下，这个方法只能调用一次。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">Call&lt;List&lt;Contributor&gt;&gt;&nbsp;call&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;gitHubService.repoContributors(&quot;square&quot;,&nbsp;&quot;retrofit&quot;);

response&nbsp;=&nbsp;call.execute();

//&nbsp;This&nbsp;will&nbsp;throw&nbsp;IllegalStateException:
response&nbsp;=&nbsp;call.execute();

Call&lt;List&lt;Contributor&gt;&gt;&nbsp;call2&nbsp;=&nbsp;call.clone();
//&nbsp;This&nbsp;will&nbsp;not&nbsp;throw:
response&nbsp;=&nbsp;call2.execute();</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">当你尝试调用第二次的时候，就会出现失败的错误。实际上，可以直接克隆一个实例，代价非常低。当你想要多次请求一个接口的时候，直接用 clone 的方法来生产一个新的，相同的可用对象吧。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">想要实现异步，需要调用&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">enqueue</code>&nbsp;方法。现在，我们就能通过一次声明实现同步和异步了！</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">Call&lt;List&lt;Contributor&gt;&gt;&nbsp;call&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;gitHubService.repoContributors(&quot;square&quot;,&nbsp;&quot;retrofit&quot;);

call.enqueue(new&nbsp;Callback&lt;List&lt;Contributor&gt;&gt;()&nbsp;{
&nbsp;&nbsp;@Override&nbsp;void&nbsp;onResponse(/*&nbsp;...&nbsp;*/)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;...
&nbsp;&nbsp;}

&nbsp;&nbsp;@Override&nbsp;void&nbsp;onFailure(Throwable&nbsp;t)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;...
&nbsp;&nbsp;}
});</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">当你将一些异步请求压入队列后，甚至你在执行同步请求的时候，你可以随时调用&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">cancel</code>&nbsp;方法来取消请求：</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">Call&lt;List&lt;Contributor&gt;&gt;&nbsp;call&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;gitHubService.repoContributors(&quot;square&quot;,&nbsp;&quot;retrofit&quot;);

call.enqueue(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;);
//&nbsp;or...
call.execute();

//&nbsp;later...
call.cancel();</pre><h4 id="parameterized-response-object-1348javascriptpresentzchangechapter068true" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 1.1; color: rgb(64, 64, 64); margin: 5px auto; font-size: 1.3em; padding: 0px;">Parameterized Response Object&nbsp;<a target=_blank style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169);">(13:48)</a></h4><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">另一个新的特性是参数化的 Response 类型。 Response 对象增加了曾经一直被我们忽略掉的重要元数据：响应码（the reponse code），响应消息（the response message），以及读取相应头（headers）。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">class&nbsp;Response&lt;T&gt;&nbsp;{
&nbsp;&nbsp;int&nbsp;code();
&nbsp;&nbsp;String&nbsp;message();
&nbsp;&nbsp;Headers&nbsp;headers();

&nbsp;&nbsp;boolean&nbsp;isSuccess();
&nbsp;&nbsp;T&nbsp;body();
&nbsp;&nbsp;ResponseBody&nbsp;errorBody();
&nbsp;&nbsp;com.squareup.okhttp.Response&nbsp;raw();
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">同时还提供了一个很方便的函数来帮助你判断请求是否成功完成，其实就是检查了下响应码是不是 200。然后就拿到了响应的 body 部分，另外有一个单独的方法获取 error body。基本上就是出现一个返回码，然后调用相对应的函数的。只有当响应成功以后，我们会去做反序列化操作，然后将反序列化的结果放到 body 回调中去。如果出现了返回了网络成功响应（返回码：200）却最终返回 false 的情况，我们实际上是无法判断返回到底是什么的，只能将&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">ResponseBody</code>（简单封装的了 content-type，length，以及 raw body部分） 类型交给你去处理。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">以上是在声明接口时候的两个重大的改变。</p><h4 id="url-parameter-1633javascriptpresentzchangechapter0101true" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 1.1; color: rgb(64, 64, 64); margin: 5px auto; font-size: 1.3em; padding: 0px;">动态 URL Parameter (16:33)</h4><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">动态 URL 参数是让我头疼多年的一个问题，现在我们终于解决了！如果你向 GitHub 发出多个请求，收到一个响应，通常这个响应大概像下面这样：</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Call&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}

Call&lt;List&lt;Contributor&gt;&gt;&nbsp;call&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;gitHubService.repoContributors(&quot;square&quot;,&nbsp;&quot;retrofit&quot;);
Response&lt;List&lt;Contributor&gt;&gt;&nbsp;response&nbsp;=&nbsp;call.execute();

//&nbsp;HTTP/1.1&nbsp;200&nbsp;OK
//&nbsp;Link:&nbsp;&lt;https://api.github.com/repositories/892275/contributors?
page=2&gt;;&nbsp;rel=&quot;next&quot;,&nbsp;&lt;https://api.github.com/repositories/892275/
contributors?page=3&gt;;&nbsp;rel=&quot;last&quot;
//&nbsp;...</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">要是你想做分页，你就得自己去分析这些 URL 了。GitHub 可能将 header link 地址列表里的数据已经缓存在服务器内存里了，当你去按他们指引的地址去请求的话，他们就不必费劲去从数据库里给你拿数据了，速度上也更快。但是，在 Retrofit 1.0 的时候，我们没有办法去直接执行 GitHub Server 返回在 header 里的请求地址。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">用上我们新的 response 类型后，不止是我刚才提到的那些元数据，我们还可以写一些方法来读出自定义的字段，比如上面例子里的下一页的地址：</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">Response&lt;List&lt;Contributor&gt;&gt;&nbsp;response&nbsp;=&nbsp;call.execute();

//&nbsp;HTTP/1.1&nbsp;200&nbsp;OK
//&nbsp;Link:&nbsp;&lt;https://api.github.com/repositories/892275/contributors?
page=2&gt;;&nbsp;rel=&quot;next&quot;,&nbsp;&lt;https://api.github.com/repositories/892275/
contributors?page=3&gt;;&nbsp;rel=&quot;last&quot;
//&nbsp;...

String&nbsp;links&nbsp;=&nbsp;response.headers().get(&quot;Link&quot;);
String&nbsp;nextLink&nbsp;=&nbsp;nextFromGitHubLinks(links);

//&nbsp;https://api.github.com/repositories/892275/contributors?page=2</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">这个可能和上面的接口生成地址略有不同。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">动态 URL 地址就是用在连续请求里的。在第一个请求之后，如果返回的结果里有指明下个请求的地址的话，在之前，你可能得单独写个 interface 来处理这种情况，现在就无需那么费事了。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Call&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);

&nbsp;&nbsp;@GET
&nbsp;&nbsp;Call&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributorsPaginate(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Url&nbsp;String&nbsp;url);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Retrofit 2.0 有了新的 标注：<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">@Url</code>&nbsp;，允许你直接传入一个请求的 URL。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">有了这个方法后，我们就可以直接把刚才取出来的下一页的地址传入，是不是一切都流畅了很多：</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">String&nbsp;nextLink&nbsp;=&nbsp;nextFromGitHubLinks(links);

//&nbsp;https://api.github.com/repositories/892275/contributors?page=2

Call&lt;List&lt;Contributor&gt;&gt;&nbsp;nextCall&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;gitHubService.repoContributorsPaginate(nextLink);</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">这样的话，我们就能通过调用&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">repoContributorsPaginate</code>&nbsp;来获取第二页内容，然后通过第二页的 header 来请求第三页。你可能很多的 API 都见到过类似的设计，这在 Retrofit 1 里确实是个困扰很多人的大麻烦。</p><h4 id="converters-1931javascriptpresentzchangechapter0113true" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 1.1; color: rgb(64, 64, 64); margin: 5px auto; font-size: 1.3em; padding: 0px;">更多更有效的 Converters (19:31)</h4><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Retrofit 1 里有一个 converter 的问题。多数人可能没遇到过，是库内部的一个问题。在 Retrofit 2 里，我们已经解决了这个问题，同时开始支持多种 Converter 并存。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">在之前，如果你遇到这种情况：一个 API 请求返回的结果需要通过 JSON 反序列化，另一个 API 请求需要通过 proto 反序列化，唯一的解决方案就是将两个接口分离开声明。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;SomeProtoService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/some/proto/endpoint&quot;)
&nbsp;&nbsp;Call&lt;SomeProtoResponse&gt;&nbsp;someProtoEndpoint();
}

interface&nbsp;SomeJsonService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/some/json/endpoint&quot;)
&nbsp;&nbsp;Call&lt;SomeJsonResponse&gt;&nbsp;someJsonEndpoint();</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">之所以搞得这么麻烦是因为一个 REST adapter 只能绑定一个 Converter 对象。我们费工夫去解决这个是因为：接口的声明是要语意化的。API 接口应该通过功能实现分组，比如： account 的接口，user 的接口，或者 Twitter 相关的接口。返回格式的差异不应该成为你分组时候的阻碍。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">现在，你可以把他们都放在一起了：</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;SomeService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/some/proto/endpoint&quot;)
&nbsp;&nbsp;Call&lt;SomeProtoResponse&gt;&nbsp;someProtoEndpoint();

&nbsp;&nbsp;@GET(&quot;/some/json/endpoint&quot;)
&nbsp;&nbsp;Call&lt;SomeJsonResponse&gt;&nbsp;someJsonEndpoint();
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">我大概提一下这个是怎么工作起来的，因为了解 Converter 的调用原理在写代码的时候很重要。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">看我们上面的代码：第一个方法返回了一个 proto 对象。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;"><code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">SomeProtoResponse</code>&nbsp;―&gt; Proto?&nbsp;<span style="box-sizing: border-box; font-weight: 700;">Yes!</span></p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">原理很简单，其实就是对着每一个 converter 询问他们是否能够处理某种类型。我们问 proto 的 converter： “Hi, 你能处理&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">SomeProtoResponse</code>&nbsp;吗？”，然后它尽可能的去判断它是否可以处理这种类型。我们都知道：Protobuff 都是从一个名叫 message 或者 message lite 的类继承而来。所以，判断方法通常就是检查这个类是否继承自 message。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">在面对 JSON 类型的时候，首先问 proto converter，proto converter 会发现这个不是继承子 Message 的，然后回复 no。紧接着移到下一个 JSON converter 上。JSON Converter 会回复说我可以！</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;"><code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">SomeJsonResponse</code>&nbsp;―&gt; Proto?&nbsp;<span style="box-sizing: border-box; font-weight: 700;">No!</span>&nbsp;―&gt; JSON?&nbsp;<span style="box-sizing: border-box; font-weight: 700;">Yes!</span></p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">因为 JSON 并没有什么继承上的约束。所以我们无法通过什么确切的条件来判断一个对象是否是 JSON 对象。以至于 JSON 的 converters 会对任何数据都回复说：我可以处理！这个一定要记住， JSON converter 一定要放在最后，不然会和你的预期不符。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">另一个要注意的是，现在已经不提供默认的 converter 了。如果不显性的声明一个可用的 Converter 的话，Retrofit 是会报错的：提醒你没有可用的 Converter。因为核心代码已经不依赖序列化相关的第三方库了，我们依然提供对 Converter 的支持，不过你需要自己引入这些依赖，同时显性的声明 Retrofit 需要用的 Converter 有哪些。</p><h4 id="javascriptpresentzchangechapter0121true" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 1.1; color: rgb(64, 64, 64); margin: 5px auto; font-size: 1.3em; padding: 0px;">更多可替换的执行机制 (22:38)</h4><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">在此之前，Retrofit 有一个死板的 execution 流程。在 Retrofit 2 里，我们调整了整个流程，让它变得可替换（pluggable），同时允许多个。跟 converter 的工作原理很像。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">比如说，你有一个方法返回了一个 Call 对象，Call 是内置的 Converter 类型。比如：Retrofit 2　的执行机制：</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Call&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);

...</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">现在，你可以自定义这些了。或者用我们提供的一个：</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">...

&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Observable&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors2(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);

&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Future&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors3(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Retrofit 2.0 依然支持 RxJava，但现在是分离的。（你如果想要一些别的特性，你也可以自己写一个）同时支持不同的 execution 是怎么实现的呢？</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Call&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(..);

&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Observable&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors2(..);

&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Future&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors3(..);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">通过返回类型来判断需要调用哪个 exection。比如说：返回为 Call 的类型， 我们的整个执行机制会问：“Hey，你知不知道如何处理 Call ？”　如果是 RxJava，它就会说：“我不知道，我只知道　Observable 的处理方法。”。　随后，我们又问内部的 converter，他刚好回答说：“是的！我会！”。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;"><code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">call</code>&nbsp;―&gt; RxJava?&nbsp;<span style="box-sizing: border-box; font-weight: 700;">No!</span>&nbsp;―&gt; Call?&nbsp;<span style="box-sizing: border-box; font-weight: 700;">Yes!</span></p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Observable 也是同样的工作原理。我们同样问 RxJava，它就说：“我能处理这个”：</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Call&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(..);

&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Observable&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors2(..);

&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Future&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors3(..);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Observable ―&gt; RxJava?&nbsp;<span style="box-sizing: border-box; font-weight: 700;">Yes!</span></p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">如果你没装相对应的 Converter，这就意味着我们无法验证响应的类型。比如：如果询问是否有办法能处理　Future，他们两个都会说：“不行”。</p><pre class="brush:js;toolbar:false" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Call&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(..);

&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Observable&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors2(..);

&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Future&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors3(..);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Future ―&gt; RxJava?&nbsp;<span style="box-sizing: border-box; font-weight: 700;">No!</span>&nbsp;―&gt; Call?&nbsp;<span style="box-sizing: border-box; font-weight: 700;">No!</span>&nbsp;―&gt; Throw!</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">这将会返回一个 Exception，意味着这两个以及内置的机制都无法处理这种类型。关于工作原理我们随后会深入讨论。</p><h3 id="articleHeader4" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 37.79999923706055px; color: rgb(64, 64, 64); margin-top: 10px; margin-bottom: 10px; font-size: 1.5em;">OkHttp 提供支持 (24:17).</h3><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Retrofit 2 现在开始依赖了 OkHttp 了，而且这部分不再支持替换。这是一件比较有争议的事情。但是希望我能证明为什么这是一个对的决定。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">OkHttp 现在很小而且很聚焦，有很多好用的 API 接口。我们在 Retrofit 2 里都有对 OkHttp 的接口映射，也基本具备了我们需要的所有的特性，包括提到的所有的抽象类们。这些都超赞！这是压缩 Retrofit 库大小的一个法宝。我们最终减小了Retrofit 60% 的体积，同时又具有了更多的特性。</p><h3 id="articleHeader5" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 37.79999923706055px; color: rgb(64, 64, 64); margin-top: 10px; margin-bottom: 10px; font-size: 1.5em;">OkHttp 提供支持 (以及 Okio!) (26:20)</h3><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">另一个用 OkHttp 的好处就是我们能够在 Retrofit 2 把 OkHttp 以公开接口的方式直接导出。你可能在 error body 方法或者响应里见到过 response body 的内容。显然，我们在 Retrofit 的 Reponse 对象里直接返回了 OkHttp 的 Response body。我们正在导出这些类型，OkHttp 的类型基本上已经以更好更简洁的 API 替代 Retrofit 1.0 的一些接口。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">OkHttp 的背后是一个叫做 Okio 的库，提供的 IO 支持。我之前在&nbsp;<a target=_blank href="https://youtu.be/WvyScM_S88c" style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169); text-decoration: none;">Droidcon Montreal</a>&nbsp;做过关于这个库的演讲。讨论过为什么它是众多 IO 库中更好的选择，还讨论了它为何极度高效，以及为什么你应该使用它们。演讲中我还提到 Retrofit 2 ，当时它还是脑海里的一个概念。现在 Retrofit 2 已经实现了。</p><h3 id="articleHeader6" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 37.79999923706055px; color: rgb(64, 64, 64); margin-top: 10px; margin-bottom: 10px; font-size: 1.5em;">Retrofit 2 的效率 (27:31)</h3><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">我做了这个图表来展示 Retrofit 相比 Retrofit 1 以及其他可能的方案要高效的多，这归功于刚刚提到的硬性依赖和那些抽象。我带大家来看一下上面视频中的这个表。所以一定要看我演讲的这<a target=_blank style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169);">部分</a>噢！</p><h3 id="articleHeader7" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 37.79999923706055px; color: rgb(64, 64, 64); margin-top: 10px; margin-bottom: 10px; font-size: 1.5em;">初始化 - Retrofit 类型 (31:24)</h3><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">现在，让我们来看一下 Retrofit 的类型是如何替代 REST adapter 类型的，以及如何初始化。原来的方法叫做&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">endpoint</code>, 不过现在我们称之为&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">baseUrl</code>,&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">baseUrl</code>&nbsp;就是你所请求的 Server 的 URL，下面是一个请求 GitHub Api 的例子：</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">Retrofit&nbsp;retrofit&nbsp;=&nbsp;new&nbsp;Retrofit.Builder()
&nbsp;&nbsp;&nbsp;&nbsp;.baseUrl(&quot;https://api.github.com&quot;)
&nbsp;&nbsp;&nbsp;&nbsp;.build();

interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Call&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}

GitHubService&nbsp;gitHubService&nbsp;=&nbsp;retrofit.create(GitHubService.class);</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">我们声明了自己的接口，我们称作创建方法，跟 Retrofit 1 里的是一致的。接下来，我们来生成一个接口的实现，以使这些接口方法可以直接被调用。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">当我们调用&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">repoContributors</code>&nbsp;这个方法的时候，Retrofit 会创建这个 URL。如果我们传入&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">Square</code>&nbsp;和&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">Retrofit</code>&nbsp;字符串，分别作为&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">owner</code>&nbsp;和&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">repo</code>&nbsp;参数。我们就会得到这个 URL：<code class="wrap-break" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">https://api.github.com/repos/square/retrofit/contributors</code>。在 Retrofit 内部，Retrofit 会用 OkHttp 的 HTTP URL 类型作为 基础的 URL ，然后&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">resolve</code>&nbsp;方法就会取出相对地址和 baseUrl 拼接起来，接着发起请求。接下来给你展示下改变 API 前缀，比如 V3。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">Retrofit&nbsp;retrofit&nbsp;=&nbsp;new&nbsp;Retrofit.Builder()
&nbsp;&nbsp;&nbsp;&nbsp;.baseUrl(&quot;https://api.github.com/v3/&quot;)
&nbsp;&nbsp;&nbsp;&nbsp;.build();

interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;/repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Call&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">虽然说这不是 GitHub 真实的 API，但是真实世界里就是有很多 API 是由这样的前缀和路径组成的。调用相同的方法，被解析出来的 URL 将会是是这样的：&nbsp;<code class="wrap-break" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">https://api.github.com/repos/square/retrofit/contributors</code>。可以看到在主机地址之后并没有<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">v3</code>&nbsp;，这是因为地址的 URL 是以一个斜线开始的，而在 HTTP 里，斜线开始的地址往往是绝对地址后缀路径。Retrofit 1 会因为语义化的约束，强制你加这个前缀斜线, 然后把 baseUrl 和相对地址拼接起来。现在，考虑到规范问题，我们已经对这两种地址加以区分。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Call&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">如果有前缀&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">/</code>&nbsp;就代表着是一个绝对路径。删除了那个前缀的&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">/</code>， 你将会得到正确的、包含了&nbsp;<code class="highlighter-rouge" style="box-sizing: border-box; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 13px; padding: 0px 4px; color: rgb(39, 184, 230); background-color: rgb(239, 250, 253); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; margin: 5px;">v3</code>&nbsp;路径的全 URL。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">Retrofit&nbsp;retrofit&nbsp;=&nbsp;new&nbsp;Retrofit.Builder()
&nbsp;&nbsp;&nbsp;&nbsp;.baseUrl(&quot;https://api.github.com/v3/&quot;)
&nbsp;&nbsp;&nbsp;&nbsp;.build();

interface&nbsp;GitHubService&nbsp;{
&nbsp;&nbsp;@GET(&quot;repos/{owner}/{repo}/contributors&quot;)
&nbsp;&nbsp;Call&lt;List&lt;Contributor&gt;&gt;&nbsp;repoContributors(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;owner&quot;)&nbsp;String&nbsp;owner,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Path(&quot;repo&quot;)&nbsp;String&nbsp;repo);
}

//&nbsp;https://api.github.com/v3/repos/square/retrofit/contributors</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">由于现在我们开始依赖 OkHttp， 并没有 Http Client 层的抽象。现在是可以传递一个配置好的 OkHttp 实例的。比如：配置 interceptors, 或者一个 SSL socket 工厂类， 或者 timeouts 的具体数值。 （OkHttp 有默认的超时机制，如果你不需要自定义，实际上不必进行任何设置，但是如果你想要去设置它们，下面是一个例子告诉你来怎么操作。）</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">OkHttpClient&nbsp;client&nbsp;=&nbsp;new&nbsp;OkHttpClient();
client.interceptors().add(..);

Retrofit&nbsp;retrofit&nbsp;=&nbsp;new&nbsp;Retrofit.Builder()
&nbsp;&nbsp;&nbsp;&nbsp;.baseUrl(&quot;https://api.github.com&quot;)
&nbsp;&nbsp;&nbsp;&nbsp;.client(client)
&nbsp;&nbsp;&nbsp;&nbsp;.build();</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">如果你要指明特定的 converter 或者 execute 机制，也是在这个时候加的。比如这会儿：我们可以给 GSON 设置一个或者多个 converter。也可以给 protocol buffer 设置一个 converter。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">Retrofit&nbsp;retrofit&nbsp;=&nbsp;new&nbsp;Retrofit.Builder()
&nbsp;&nbsp;&nbsp;&nbsp;.baseUrl(&quot;https://api.github.com&quot;)
&nbsp;&nbsp;&nbsp;&nbsp;.addConverterFactory(GsonConverterFactory.create())
&nbsp;&nbsp;&nbsp;&nbsp;.addConverterFactory(ProtoConverterFactory.create())
&nbsp;&nbsp;&nbsp;&nbsp;.build();</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">我想要强调的是：<span style="box-sizing: border-box; font-weight: 700;">添加 converter 的顺序很重要</span>。按照这个顺序，我们将依次询问每一个 converter 能否处理一个类型。我上面写的其实是错的。如果我们试图反序列化一个 proto 格式，它其实会被当做 JSON 来对待。这显然不是我们想要的。我们需要调整下顺序，因为我们先要检查 proto buffer 格式，然后才是 JSON。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">Retrofit&nbsp;retrofit&nbsp;=&nbsp;new&nbsp;Retrofit.Builder()
&nbsp;&nbsp;&nbsp;&nbsp;.baseUrl(&quot;https://api.github.com&quot;)
&nbsp;&nbsp;&nbsp;&nbsp;.addConverterFactory(ProtoConverterFactory.create())
&nbsp;&nbsp;&nbsp;&nbsp;.addConverterFactory(GsonConverterFactory.create())
&nbsp;&nbsp;&nbsp;&nbsp;.build();</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Retrofit 的文档里可能还没这些，如果你想要使用 RxJava 来代替 call, 你需要一个 Call Adapter Factory:</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">Retrofit&nbsp;retrofit&nbsp;=&nbsp;new&nbsp;Retrofit.Builder()
&nbsp;&nbsp;&nbsp;&nbsp;.baseUrl(&quot;https://api.github.com&quot;)
&nbsp;&nbsp;&nbsp;&nbsp;.addConverterFactory(ProtoConverterFactory.create())
&nbsp;&nbsp;&nbsp;&nbsp;.addConverterFactory(GsonConverterFactory.create())
&nbsp;&nbsp;&nbsp;&nbsp;.addCallAdapterFactory(RxJavaCallAdapterFactory.create())
&nbsp;&nbsp;&nbsp;&nbsp;.build();</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Call Adapter Factory 是一个知道如何将 call 实例转换成其他类型的工厂类。目前，我们只有 RxJava 的类型，也就是将 Call 类型转换成 Observable 类型。如果你了解 RxJava, 其实还有一种新的 Observable 类型（一次只发射一个 item 的类型）。你可以用这个 call adapter factory 来转换到其中任意一种 Observable。</p><h3 id="articleHeader8" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 37.79999923706055px; color: rgb(64, 64, 64); margin-top: 10px; margin-bottom: 10px; font-size: 1.5em;">扩展性 (36:50)</h3><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">刚才提到的 Factory，也是可扩展的。这意味着你可以写属于自己的 Call Adapter Facotry。实现起来其实就是一个方法。传递给它一个类型，返回 null 代表拒绝，或者返回一个 converter 的实例。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">SomeJsonResponse

		class&nbsp;ProtoConverterFactory&nbsp;{
&nbsp;&nbsp;			Converter&lt;?&gt;&nbsp;create(Type&nbsp;type);		null
		}

		class&nbsp;GsonConverterFactory&nbsp;{
			Converter&lt;?&gt;&nbsp;create(Type&nbsp;type);		Converter&lt;?&gt;
		}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">看上面的例子，如果你给它传递一个 JSON 的 Respnose 类型，这个类型不是从 proto 继承而来，那么它就会说：”我不知道如何传递这个，所以我返回空值 null.』，然而，对于 GSON converter 而言，它通过返回一个实例来表明它可以处理这个类型的。这就是为什么这个类是一个工厂类，因为我们让它生产 converter 实例。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">如果你想要做一些自定义，实现起来是非常容易的。Converter 的实现与之前的实现是非常相似的，尽管代替类型化的输入和输出，我们现在使用的是 OkHttp 的请求body 和相应 body。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;Converter&lt;T&gt;&nbsp;{
&nbsp;&nbsp;interface&nbsp;Factory&nbsp;{
	Converter&nbsp;&lt;?&gt;&nbsp;create(Type&nbsp;type);
&nbsp;&nbsp;}

&nbsp;&nbsp;T&nbsp;fromBody(ResponseBody&nbsp;body);
&nbsp;&nbsp;RequestBody&nbsp;toBody(T&nbsp;value);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">现在这已经高效的多，因为我们实际上可以查询那些 adapter。举个例子，GSON 有一个type adapter, 当我们请求 GSON Converter Factory，询问它是否可以处理某种请求的时候， converter factory 就开始查询这个 adapter, 它将以缓存的形式存在，当我们再次查询的时候，这个 adapter 就可以直接被使用了。这是一个非常小的成功，极力避免了不断地查询带来的损耗。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">call adapter 有相同的模式。我们询问一个 call adapter factory 它是否可以处理某个类型，它将会以相同的方式回应。（例如：它会返回 null 来表达否）。它的API 是非常简单的。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">interface&nbsp;CallAdapter&lt;T&gt;&nbsp;{
&nbsp;&nbsp;interface&nbsp;Factory&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;CallAdapter&lt;?&gt;&nbsp;create(Type&nbsp;type);
&nbsp;&nbsp;}

&nbsp;&nbsp;Type&nbsp;responseType();
&nbsp;&nbsp;Object&nbsp;adapt(Call&lt;T&gt;&nbsp;value);
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">我们有一个方法来来实现适配。传入一个 call 实例，返回了一个 observable，single 或者 future 等。 还有一种方法来获得这种 response 类型：当我们声明一系列 contributor 调用时， 我们没法自动把那些参数化的类型提取出来，因此我们基本上只是请求这个 call adapter 也返回这个 response type。如果你为这个变量创造了一个实例，我们会请求 call adapter, 它会将 contributor type 列表返回。</p><h3 id="articleHeader9" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 37.79999923706055px; color: rgb(64, 64, 64); margin-top: 10px; margin-bottom: 10px; font-size: 1.5em;">还在建设中 (40:05)</h3><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">Retrofit 2 正在完善中！现在还不够完整，但是已经可以用了。我上面提到的点都是已经完成了的，那还有哪些未完成呢？</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">关于所谓的“参数 handler”我们现在还没有一个成熟的想法。我们未来想要让它有从 Guava 传递多个 map，或者数据类型及枚举类型。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">日志功能还没有完成，在 Retrofit 1 里是有日志的，但是在 Retrofit 2 里面没有。依赖 OkHttp 的一个优点是你实际上可以使用一个 interceptor 来实现实际的底层的请求和响应日志。因此，对于原始请求和响应，我们并不需要它，但是我们很可能需要日志来记录 Java 类型。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">如果你曾经使用过 mock 模块，你会发现它也还没被完成，但很快会完成的。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">现在文档依然比较缺。</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">最后，在我有空的时候，我想在 Retrofit 2 里支持 WebSocket。在 2.0 里很可能无法实现，但是我想在后续的2.1 版本里会加入支持。</p><h3 id="articleHeader10" style="box-sizing: border-box; font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-weight: 500; line-height: 37.79999923706055px; color: rgb(64, 64, 64); margin-top: 10px; margin-bottom: 10px; font-size: 1.5em;">Release? (41:31)</h3><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">我保证过 Retrofit 2 今年会和大家见面，今年确实可以。至于具体哪天问世，我们不会做任何承诺。我不想再在 2016 的 DroidCons 上开相同的玩笑。因此今年一定会问世。我保证。至于2015年8月27日，我已经开放了一个2.0的测试版。</p><pre class="brush:java; toolbar: true; auto-links: false;" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, 'Courier New', monospace; padding: 6px; margin-top: 0px; margin-bottom: 10px; line-height: 1.45; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(246, 246, 246); border: none; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;">dependencies&nbsp;{
&nbsp;&nbsp;compile&nbsp;'com.squareup.retrofit:retrofit:2.0.0-beta1'
&nbsp;&nbsp;compile&nbsp;'com.squareup.retrofit:converter-gson:2.0.0-beta1'
&nbsp;&nbsp;compile&nbsp;'com.squareup.retrofit:adapter-rxjava:2.0.0-beta1'
}</pre><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">你可以依赖它。它已经可以正常工作了，API 接口也相对稳定。Converter 和 converter 工厂方法未来可能会改变，但是总体来说是有用的。要是你有什么不喜欢或者有问题的地方，请联系我！谢谢！</p><p style="box-sizing: border-box; margin-top: 10px; margin-bottom: 10px; line-height: 25.200000762939453px; color: rgb(64, 64, 64); font-family: 'Microsoft YaHei', Verdana, sans-serif, SimSun; font-size: 14px;">原文出处：<a target=_blank href="https://realm.io/cn/news/droidcon-jake-wharton-simple-http-retrofit-2/" _src="https://realm.io/cn/news/droidcon-jake-wharton-simple-http-retrofit-2/" style="box-sizing: border-box; background-color: transparent; color: rgb(0, 95, 169); text-decoration: none;">https://realm.io/cn/news/droidcon-jake-wharton-simple-http-retrofit-2/</a>&nbsp;</p>
            <div>
                作者：jdsjlzx 发表于2016/5/28 10:39:17 <a href="http://blog.csdn.net/jdsjlzx/article/details/51523784">原文链接</a>
            </div>
            <div>
            阅读：1669 评论：0 <a href="http://blog.csdn.net/jdsjlzx/article/details/51523784#comments" target="_blank">查看评论</a>
            </div>
        ]]>
        </description>
        <category></category>
    </item>
</channel>
</rss>
